{"ast":null,"code":"import _slicedToArray from \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/src/toimialat.js\";\nimport React, { useState } from 'react';\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\";\nimport dataToimialojenVerot from \"./toimialojenVerot\";\nimport dataPaastot from \"./paastotToimialoittain\";\nimport FadeIn from 'react-fade-in'; // asetetaan dataa jsoneista muuttujiin\n\nconst toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label;\nconst toimialaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.index;\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value;\nconst kuntienIndeksit = datatoimialatKunnittain.dataset.dimension.Kunta.category.index;\nconst kuntienNimet = datatoimialatKunnittain.dataset.dimension.Kunta.category.label;\nconst nimiJaIndeksi = dataToimialojenVerot.dataset.dimension.Toimiala.category.index;\nconst toimialojenNimet = dataToimialojenVerot.dataset.dimension.Toimiala.category.label;\nconst toimialojenVerot = dataToimialojenVerot.dataset.value;\nconst toimialojenPaastot = dataPaastot.dataset.value;\nconst toimialojenPaastotIndeksit = dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category.index;\nconsole.log(datatoimialatKunnittain); //Pääkomponentti toimialoille\n\nconst Toimialat = () => {\n  // Counter pitää tiedossa valitun toimialan indeksin\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        setCounter = _useState2[1];\n\n  const setToValue = value => setCounter(value); //iso läjä listoja\n\n\n  var enitenKunnassa = [];\n  var kuntienNimetTop = [];\n  var kunnanAvain = [];\n  var verotaulukko = [];\n  var alataulukko = [];\n  var maarataulukko = [];\n  var kuntienToimialaLkm = [];\n  var paastotaulukko = [];\n  var toimialojenAvaimet = [];\n  var toimialojenVerotuloKA = [];\n  var toimialojenPaastotKA = [];\n  var kuntienToimialaSL = [];\n  var toimialaSL = [];\n  var kunnanNimiAvain;\n  var kuntienKaikkiToimialat = [];\n  var toimialojenLkm = Object.keys(toimialalista).length;\n  /*Jokaisen kunnan kaikki toimialat ovat peräkkäin listassa ositettuna \n  (n kpl koko suomen toimialoja, n kpl seuraavan kunnan toimialoja...)\n  Saadaksesi kunnan x kaikki toimialat, aloita ensimmäisestä kyseisen toimialan indeksistä\n  ja hyppää toimialojen lukumäärän verran eteenpäin. \n  */\n\n  function toimialanPaikkakunnat(counter) {\n    var haettavaIndeksi = toimialojenAvaimet[counter];\n    var ekaToimialanArvo = toimialaIndeksit[haettavaIndeksi];\n\n    for (let i = ekaToimialanArvo; i < toimialojenMaarat.length; i = i + toimialojenLkm) {\n      kuntienToimialaLkm.push(toimialojenMaarat[i]);\n    }\n\n    etsiEniten();\n    kunnanNimiAvain = haeAvain(kuntienIndeksit, enitenKunnassa[1]);\n  } //laskee toimialoille suhdeluvut\n\n\n  function laskeToimialojenSL() {\n    var toimialanvero = verotaulukko[counter];\n    var toimialanpaasto = paastotaulukko[counter];\n\n    for (let i = 0; i < kuntienToimialaLkm.length; i++) {\n      if (typeof toimialanpaasto === 'undefined') {\n        toimialaSL[i] = \"Ei tiedossa\";\n        break;\n      }\n\n      toimialaSL[i] = {\n        kunnanindeksi: i,\n        suhde: toimialanvero / toimialanpaasto * (kuntienToimialaLkm[i] / kuntienKaikkiToimialat[i])\n      };\n    }\n\n    let suhdeluvutJarj = toimialaSL;\n    suhdeluvutJarj.sort(function (a, b) {\n      return b.suhde - a.suhde;\n    });\n    console.log(\"verotaulukko \", verotaulukko);\n    console.log(\"paastotaulukko \", paastotaulukko);\n    console.log(\"kuntienToimialaLkm \", kuntienToimialaLkm);\n    console.log(\"kuntienKaikkiToimialat \", kuntienKaikkiToimialat);\n    console.log(\"toimialasl \", toimialaSL);\n    return suhdeluvutJarj;\n  } //Annetaan value, jolle etsitään ja palautetaan sitä vastaava key\n\n\n  function haeAvain(lista, value) {\n    return Object.keys(lista).find(key => lista[key] === value);\n  } //Hakee jokaisen kunnan toimialojen määrän listaan. Kokomaa = 0, Akaa = 1...\n\n\n  function KunnanKaikkiToimialatLkm() {\n    for (let key in kuntienIndeksit) {\n      kuntienKaikkiToimialat[kuntienIndeksit[key]] = toimialojenMaarat[toimialojenLkm * kuntienIndeksit[key]];\n    }\n  } //pitää järjestettyä listaa eniten valittua toimialaa sisältävien kuntien indekseistä\n\n\n  function etsiEniten() {\n    var suurin = 0;\n    var maxIndex = 0;\n\n    for (let i = 0; i < kuntienToimialaLkm.length; i++) {\n      enitenKunnassa.push(i);\n      enitenKunnassa.sort(function (a, b) {\n        return kuntienToimialaLkm[b] - kuntienToimialaLkm[a];\n      });\n    }\n\n    for (let i = 0, j = 0; i < enitenKunnassa.length; i++) {\n      if (toimialaSL[counter] * kuntienToimialaLkm[kuntienIndeksit[haeAvain(kuntienIndeksit, enitenKunnassa[i])]] == NaN) {\n        continue;\n      } else {\n        kuntienToimialaSL[j] = toimialaSL[counter] * kuntienToimialaLkm[kuntienIndeksit[haeAvain(kuntienIndeksit, enitenKunnassa[i])]];\n        j++;\n      }\n    }\n\n    KunnanKaikkiToimialatLkm();\n  } //Luo ison läjän keyn mukaan indeksöityjä listoja\n  //listasta valittaessa saadaan samalla indeksillä muista listoista oikeita arvoja\n\n\n  function luoTaulukot() {\n    for (let key in toimialalista) {\n      if (key.length === 2) {\n        toimialojenAvaimet.push(key);\n        alataulukko.push(toimialalista[key]);\n        maarataulukko.push(toimialojenMaarat[toimialaIndeksit[key]]);\n        paastotaulukko.push(toimialojenPaastot[toimialojenPaastotIndeksit[key]]);\n\n        if (toimialojenVerot[nimiJaIndeksi[key]] == null) {\n          verotaulukko.push(\"Ei tiedossa\");\n        } else {\n          verotaulukko.push(toimialojenVerot[nimiJaIndeksi[key]]);\n        }\n      }\n    }\n\n    return alataulukko;\n  } //Korvaa toimialojen nimissä olevat numerot ja alun välit tyhjällä\n\n\n  function parsiTaulukko(taulukko) {\n    for (let x in taulukko) {\n      taulukko[x] = taulukko[x].replace(/^[\\s\\d]+/, '');\n    }\n  }\n\n  var toimialaInd = 0;\n  var haettava;\n  var select;\n  var taulukkoToimialoista = luoTaulukot();\n  parsiTaulukko(taulukkoToimialoista); //Hakupalkki, joka vertaa hakupalkin sisältöä select -listan sisältöön ja näyttää vain matchaavat\n\n  const etsiToimiala = hakusana => {\n    haettava = hakusana.target.value;\n    select = document.getElementById(\"listaToimialoista\");\n\n    for (var i = 0; i < select.length; i++) {\n      var txt = select[i].text;\n      var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n      select.options[i].style.display = include ? '' : 'none';\n    }\n  }; //asettaa countteriin valitun indeksin, josta sitä voi sitten käyttää kaikkialla\n\n\n  const tulostaToimiala = listaValittu => {\n    setToValue(listaValittu.target.value);\n  }; //tämä pitää olla täällä, koska counter\n\n\n  toimialanPaikkakunnat(counter);\n  var suhdeluvutJarj = laskeToimialojenSL(); // jakaa hienosti regexillä luvut kolmen sarjoihin\n\n  function lukupilkuilla(x) {\n    if (x == undefined) return \"Ei tiedossa\";else return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  }\n\n  let paastoTulostus = \"Ei tiedossa\";\n\n  if (lukupilkuilla(paastotaulukko[counter]) != \"Ei tiedossa\") {\n    paastoTulostus = lukupilkuilla(paastotaulukko[counter]) + \" tonnia/vuosi\";\n  }\n\n  let veroTulostus = \"Ei Tiedossa\";\n\n  if (lukupilkuilla(verotaulukko[counter]) != \"Ei tiedossa\") {\n    veroTulostus = lukupilkuilla(verotaulukko[counter]) + \" €/vuosi\";\n  }\n\n  const Suhdeluku = () => {\n    let monesko = \"\";\n    let monesko2 = 1;\n    var lista = [];\n\n    for (let i = 0; i < suhdeluvutJarj.length; i++) {\n      let kunta = kuntienNimet[haeAvain(kuntienIndeksit, suhdeluvutJarj[i].kunnanindeksi)];\n\n      if (typeof suhdeluvutJarj[0].suhde === 'undefined') {\n        lista.push(React.createElement(\"li\", {\n          class: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, React.createElement(\"small\", {\n          class: \"text-muted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, \" Ei voida laskea \")));\n        break;\n      }\n\n      if (suhdeluvutJarj[i].suhde == 0) {\n        break;\n      }\n\n      lista.push(React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, monesko, \" Paras hy\\xF6tysuhde: \"), \" \", kunta, React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \" Suhdeluku: \"), suhdeluvutJarj[i].suhde, \" \"));\n      monesko2++;\n      monesko = monesko2 + \".\";\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, lista);\n  };\n\n  const _useState3 = useState('suhdeluku'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        page = _useState4[0],\n        setPage = _useState4[1];\n\n  const toPage = page => event => {\n    event.preventDefault();\n    setPage(page);\n  };\n\n  const content = () => {\n    if (page === 'suhdeluku') {\n      return React.createElement(Suhdeluku, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      });\n    } else if (page === 'maara') {\n      return React.createElement(Suhdeluku, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      });\n    }\n  };\n\n  return (// Bootstrapin pääcontainer\n    React.createElement(FadeIn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"search\",\n      className: \"form-control\",\n      name: \"search\",\n      placeholder: \"Hae...\",\n      onKeyUp: etsiToimiala,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    })), React.createElement(\"select\", {\n      id: \"listaToimialoista\",\n      className: \"form-control\",\n      size: \"30\",\n      onChange: tulostaToimiala,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, taulukkoToimialoista.map(s => React.createElement(\"option\", {\n      value: toimialaInd++,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, s)))), React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Toimialan kokonaisp\\xE4\\xE4st\\xF6t: \"), paastoTulostus), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Toimialojen kokonaislukum\\xE4\\xE4r\\xE4: \"), \" \", lukupilkuilla(maarataulukko[counter]), \" kpl\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Toimialan verot yhteens\\xE4: \"), \" \", veroTulostus), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Toimialaa eniten paikkakunnalla: \"), \" \", kuntienNimet[kunnanNimiAvain], \" Lkm: \", kuntienToimialaLkm[kuntienIndeksit[kunnanNimiAvain]], \" kpl\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn-group btn-group-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"aria-pressed\": \"true\",\n      onClick: console.log('tietoja'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Katotaan my\\xF6hemmin onko n\\xE4m\\xE4 napit tarpeellisia\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"aria-pressed\": \"true\",\n      onClick: toPage('suhdeluku'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"Suhdeluku\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, content()), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    })))))))\n  );\n};\n\nexport default Toimialat;","map":{"version":3,"sources":["/Users/tuomo/PROJEKTITYÖ/ryhmatyo/tklaskuri/src/toimialat.js"],"names":["React","useState","datatoimialatKunnittain","dataToimialojenVerot","dataPaastot","FadeIn","toimialalista","dataset","dimension","Toimiala2008","category","label","toimialaIndeksit","index","toimialojenMaarat","value","kuntienIndeksit","Kunta","kuntienNimet","nimiJaIndeksi","Toimiala","toimialojenNimet","toimialojenVerot","toimialojenPaastot","toimialojenPaastotIndeksit","console","log","Toimialat","counter","setCounter","setToValue","enitenKunnassa","kuntienNimetTop","kunnanAvain","verotaulukko","alataulukko","maarataulukko","kuntienToimialaLkm","paastotaulukko","toimialojenAvaimet","toimialojenVerotuloKA","toimialojenPaastotKA","kuntienToimialaSL","toimialaSL","kunnanNimiAvain","kuntienKaikkiToimialat","toimialojenLkm","Object","keys","length","toimialanPaikkakunnat","haettavaIndeksi","ekaToimialanArvo","i","push","etsiEniten","haeAvain","laskeToimialojenSL","toimialanvero","toimialanpaasto","kunnanindeksi","suhde","suhdeluvutJarj","sort","a","b","lista","find","key","KunnanKaikkiToimialatLkm","suurin","maxIndex","j","NaN","luoTaulukot","parsiTaulukko","taulukko","x","replace","toimialaInd","haettava","select","taulukkoToimialoista","etsiToimiala","hakusana","target","document","getElementById","txt","text","include","toLowerCase","startsWith","options","style","display","tulostaToimiala","listaValittu","lukupilkuilla","undefined","toString","paastoTulostus","veroTulostus","Suhdeluku","monesko","monesko2","kunta","page","setPage","toPage","event","preventDefault","content","map","s"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\";\nimport dataToimialojenVerot from \"./toimialojenVerot\";\nimport dataPaastot from \"./paastotToimialoittain\";\nimport FadeIn from 'react-fade-in';\n\n\n\n\n// asetetaan dataa jsoneista muuttujiin\n\nconst toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label\nconst toimialaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.index\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value\nconst kuntienIndeksit = datatoimialatKunnittain.dataset.dimension.Kunta.category.index\nconst kuntienNimet = datatoimialatKunnittain.dataset.dimension.Kunta.category.label\n\nconst nimiJaIndeksi = dataToimialojenVerot.dataset.dimension.Toimiala.category.index\nconst toimialojenNimet = dataToimialojenVerot.dataset.dimension.Toimiala.category.label\nconst toimialojenVerot = dataToimialojenVerot.dataset.value\n\nconst toimialojenPaastot = dataPaastot.dataset.value\nconst toimialojenPaastotIndeksit = dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category.index;\n\n\n\nconsole.log(datatoimialatKunnittain)\n\n//Pääkomponentti toimialoille\nconst Toimialat = () => {\n\n  // Counter pitää tiedossa valitun toimialan indeksin\n  const [ counter, setCounter ] = useState(0)\n  const setToValue = (value) => setCounter(value)\n  \n  //iso läjä listoja\n  var enitenKunnassa = [];\n  var kuntienNimetTop = [];\n  var kunnanAvain = [];\n  var verotaulukko = [];\n  var alataulukko = [];\n  var maarataulukko = [];\n  var kuntienToimialaLkm = [];\n  var paastotaulukko = [];\n  var toimialojenAvaimet = [];\n  var toimialojenVerotuloKA = [];\n  var toimialojenPaastotKA = [];\n  var kuntienToimialaSL = [];\n  var toimialaSL = [];\n  var kunnanNimiAvain;\n  var kuntienKaikkiToimialat = [];\n  var toimialojenLkm = Object.keys(toimialalista).length\n\n\n\n  /*Jokaisen kunnan kaikki toimialat ovat peräkkäin listassa ositettuna \n  (n kpl koko suomen toimialoja, n kpl seuraavan kunnan toimialoja...)\n  Saadaksesi kunnan x kaikki toimialat, aloita ensimmäisestä kyseisen toimialan indeksistä\n  ja hyppää toimialojen lukumäärän verran eteenpäin. \n  */\n  function toimialanPaikkakunnat(counter) {\n    var haettavaIndeksi = toimialojenAvaimet[counter]\n    var ekaToimialanArvo = toimialaIndeksit[haettavaIndeksi]\n    \n    for (let i = ekaToimialanArvo; i < toimialojenMaarat.length; i = (i+toimialojenLkm)){\n      \n      kuntienToimialaLkm.push(toimialojenMaarat[i])\n    }\n\n    etsiEniten();\n    kunnanNimiAvain = haeAvain(kuntienIndeksit, enitenKunnassa[1])\n    \n  }\n\n  //laskee toimialoille suhdeluvut\n  function laskeToimialojenSL(){\n    var toimialanvero = verotaulukko[counter]\n    var toimialanpaasto = paastotaulukko[counter]\n    for (let i = 0; i < kuntienToimialaLkm.length ;i++){\n      if(typeof toimialanpaasto === 'undefined'){\n        toimialaSL[i] = \"Ei tiedossa\";\n        break;\n      }\n      \n      \n      toimialaSL[i] = {kunnanindeksi: i, suhde: ((toimialanvero/toimialanpaasto) * (kuntienToimialaLkm[i]/kuntienKaikkiToimialat[i]))}\n      \n    }\n\n    let suhdeluvutJarj = toimialaSL\n    suhdeluvutJarj.sort(function(a, b){\n      return b.suhde - a.suhde;\n    })\n    console.log(\"verotaulukko \" , verotaulukko)\n    console.log(\"paastotaulukko \", paastotaulukko)\n    console.log(\"kuntienToimialaLkm \", kuntienToimialaLkm)\n    console.log(\"kuntienKaikkiToimialat \" , kuntienKaikkiToimialat)\n    console.log(\"toimialasl \" , toimialaSL)\n    return suhdeluvutJarj;\n  }\n\n  //Annetaan value, jolle etsitään ja palautetaan sitä vastaava key\n  function haeAvain(lista, value){\n\n  \treturn Object.keys(lista).find(key => lista[key] === value);\n\n  }\n\n  //Hakee jokaisen kunnan toimialojen määrän listaan. Kokomaa = 0, Akaa = 1...\n  function KunnanKaikkiToimialatLkm(){\n  \t \n  \tfor (let key in kuntienIndeksit){\n  \t\t\n      kuntienKaikkiToimialat[kuntienIndeksit[key]] = toimialojenMaarat[(toimialojenLkm * kuntienIndeksit[key])]\n    \t\n    }\n    \n    \n  }\n\n  //pitää järjestettyä listaa eniten valittua toimialaa sisältävien kuntien indekseistä\n  function etsiEniten(){\n    \n    var suurin = 0;\n    var maxIndex = 0;\n\n    for (let i = 0; i < kuntienToimialaLkm.length; i++){\n    \t\n      enitenKunnassa.push(i);\t\n    \tenitenKunnassa.sort(function(a,b) { return kuntienToimialaLkm[b] - kuntienToimialaLkm[a];});\n    \t\t\n    \t}\n    \n    for(let i = 0, j = 0; i < enitenKunnassa.length; i++){\n      if((toimialaSL[counter] * kuntienToimialaLkm[kuntienIndeksit[haeAvain(kuntienIndeksit, enitenKunnassa[i])]]) == NaN){\n        continue\n      }\n      else{\n\n        kuntienToimialaSL[j] = (toimialaSL[counter] * kuntienToimialaLkm[kuntienIndeksit[haeAvain(kuntienIndeksit, enitenKunnassa[i])]])\n        j++;\n      }\n\n    }\n\n    KunnanKaikkiToimialatLkm();\n       \n  }\n\n  \n  //Luo ison läjän keyn mukaan indeksöityjä listoja\n  //listasta valittaessa saadaan samalla indeksillä muista listoista oikeita arvoja\n  function luoTaulukot() {\n    \n    for (let key in toimialalista){\n      if(key.length === 2){\n\n        toimialojenAvaimet.push(key)\n        alataulukko.push(toimialalista[key])\n        maarataulukko.push(toimialojenMaarat[toimialaIndeksit[key]])\n        paastotaulukko.push(toimialojenPaastot[toimialojenPaastotIndeksit[key]])\n        if (toimialojenVerot[nimiJaIndeksi[key]] == null){\n          \n          verotaulukko.push(\"Ei tiedossa\")\n        } \n        else {\n          \n         verotaulukko.push(toimialojenVerot[nimiJaIndeksi[key]])\n        }\n      } \n    }           \n    \n    return alataulukko;\n  }\n    //Korvaa toimialojen nimissä olevat numerot ja alun välit tyhjällä\n    function parsiTaulukko(taulukko){\n\n      for(let x in taulukko){\n        taulukko[x] = taulukko[x].replace(/^[\\s\\d]+/, '');\n      }\n    }\n\n    var toimialaInd = 0;\n    var haettava;\n    var select;\n    var taulukkoToimialoista = luoTaulukot();\n    parsiTaulukko(taulukkoToimialoista);\n    \n    //Hakupalkki, joka vertaa hakupalkin sisältöä select -listan sisältöön ja näyttää vain matchaavat\n    const etsiToimiala = (hakusana) => {\n   \n      haettava = hakusana.target.value\n      select = document.getElementById(\"listaToimialoista\");\n      for (var i = 0; i < select.length; i++){\n        var txt = select[i].text\n        var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n        select.options[i].style.display = include ? '' : 'none';\n     \n      }\n    }\n\n\n \n  //asettaa countteriin valitun indeksin, josta sitä voi sitten käyttää kaikkialla\n   const tulostaToimiala = (listaValittu) => {\n    setToValue(listaValittu.target.value)\n \n }\n\n  //tämä pitää olla täällä, koska counter\n  toimialanPaikkakunnat(counter)\n  \n  var suhdeluvutJarj = laskeToimialojenSL();\n  \n\n  // jakaa hienosti regexillä luvut kolmen sarjoihin\n  function lukupilkuilla(x) {\n    if (x == undefined) return \"Ei tiedossa\";\n    else return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  }\n \n  let paastoTulostus = \"Ei tiedossa\";\n  if( lukupilkuilla(paastotaulukko[counter]) != \"Ei tiedossa\") {\n    paastoTulostus = lukupilkuilla(paastotaulukko[counter]) + \" tonnia/vuosi\";\n  }\n  let veroTulostus = \"Ei Tiedossa\";\n    if ( lukupilkuilla(verotaulukko[counter]) != \"Ei tiedossa\"){\n      veroTulostus = lukupilkuilla(verotaulukko[counter]) + \" €/vuosi\";\n    }\n    \n\n  const Suhdeluku = () => {\n\n    let monesko = \"\"\n    let monesko2 = 1\n\n    var lista = [];\n\n    for(let i = 0; i < suhdeluvutJarj.length; i++){\n\n    let kunta = kuntienNimet[haeAvain(kuntienIndeksit, suhdeluvutJarj[i].kunnanindeksi)]\n    if(typeof suhdeluvutJarj[0].suhde === 'undefined'){\n      lista.push(<li class=\"list-group-item\"><small class=\"text-muted\"> Ei voida laskea </small></li>)\n      break;\n    }\n    if(suhdeluvutJarj[i].suhde == 0){\n      break;\n    }\n    lista.push(<li class=\"list-group-item\"><small class=\"text-muted\">{monesko} Paras hyötysuhde: </small> {kunta}\n      <small class=\"text-muted\"> Suhdeluku: </small>{suhdeluvutJarj[i].suhde} </li>)\n\n    monesko2++\n    monesko = monesko2 + \".\"\n\n    }\n\n    return (\n      <div>\n        {lista}\n      </div>\n    )\n  }\n\n  const [page, setPage] = useState('suhdeluku')\n\n  const toPage = (page) => (event) => {\n    event.preventDefault()\n    setPage(page)\n  }\n\n\n\n  const content = () => {\n    if (page === 'suhdeluku') {\n      return <Suhdeluku />\n    } else if (page === 'maara') {\n      return <Suhdeluku />\n    }\n  }\n\n return (\n  // Bootstrapin pääcontainer\n  <FadeIn>\n  <div className=\"container\">   \n  \n      <div className=\"row\">\n            <div className=\"col-sm\">\n              \n              <div>\n              <input type=\"text\" id=\"search\" className=\"form-control\" name=\"search\" placeholder=\"Hae...\" onKeyUp={etsiToimiala}/>\n              </div>\n          \n              <select id=\"listaToimialoista\"className=\"form-control\" size=\"30\" onChange={tulostaToimiala} >\n                \n              {taulukkoToimialoista.map(s => (<option value={toimialaInd++}>{s}</option>))}\n              </select>\n\n\n            </div>\n\n            <div className=\"col-6\">\n\n\n            <div className=\"row\">\n            <div className=\"col jumbotron\">\n\n            <ul class=\"list-group\">\n\n      <li class=\"list-group-item\"><small class=\"text-muted\">Toimialan kokonaispäästöt: </small>{paastoTulostus}</li>\n      <li class=\"list-group-item\"><small class=\"text-muted\">Toimialojen kokonaislukumäärä: </small> {lukupilkuilla(maarataulukko[counter])} kpl</li>\n      <li class=\"list-group-item\"> <small class=\"text-muted\">Toimialan verot yhteensä: </small> {veroTulostus}</li>\n      <li class=\"list-group-item\"> <small class=\"text-muted\">Toimialaa eniten paikkakunnalla: </small> {kuntienNimet[kunnanNimiAvain]} Lkm: {kuntienToimialaLkm[kuntienIndeksit[kunnanNimiAvain]]} kpl</li>    \n            </ul>\n\n            </div>\n            </div>\n\n            <div className=\"row\">\n\n            <div className=\"col jumbotron\">\n\n            <div className=\"btn-group btn-group-sm\">\n                <button type=\"button\" className=\"btn btn-secondary\" aria-pressed=\"true\" onClick={console.log('tietoja')}>Katotaan myöhemmin onko nämä napit tarpeellisia</button>\n                <button type=\"button\" className=\"btn btn-secondary\" aria-pressed=\"true\" onClick={toPage('suhdeluku')}>Suhdeluku</button>\n              </div>\n              <div>\n                {content()}\n              </div>\n            <p></p>\n\n            </div>\n            </div>\n\n            </div>\n    </div>\n\n    </div>\n    </FadeIn>\n\n        );\n  }\n\n\nexport default Toimialat;"]},"metadata":{},"sourceType":"module"}