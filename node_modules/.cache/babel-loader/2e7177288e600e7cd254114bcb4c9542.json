{"ast":null,"code":"import _slicedToArray from \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport data from \"./kuntienavainluvut1\";\nimport './App.css';\nimport datavaakunat from \"./vaakunaKuvat\";\nimport dataverot from \"./verotietoja\";\nimport datatoimialatKunnittain from \"./toimialatKunnittain\";\nimport { Paikkakunnat } from \"./paikkakunnat\"; //objektilista kuntien nimistä\n\nconst kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label; //objektilista asukasluvuista\n\nconst pktiedot = data.dataset.value; //objektilista kuntien indekseistä\n\nconst kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index; //vuodet 2005-2017 taulukossa indeksistä 0 alkaen\n\nconst veroTietojenVuodet = Object.keys(dataverot.dataset.dimension.Vuosi.category.label); // objektilista verotietoihin koskevista kategorioista\n\nconst verokategoriat = dataverot.dataset.dimension.Tiedot.category.label; // verotiedot taulukossa\n\nconst verotiedot = dataverot.dataset.value; // lista eri toimialoista\n\nconst toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label; // toimialojen määrät taulukossa\n\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value;\n/** Parsii paikkakuntadataa omiin taulukoihin sarakenumeron perusteella\n*/\n\nfunction luoPKtaulukko(sarakeNro) {\n  var taulukko = [];\n\n  for (let i = sarakeNro, j = 0; i < pktiedot.length; i += 4, j++) {\n    taulukko[j] = pktiedot[i];\n  }\n\n  return taulukko;\n}\n/** Parsii verotiedot omaan taulukkoon sarakenumeron perusteella\n*/\n\n\nfunction luoVeroTaulukko(sarakeNro) {\n  var taulukko = [];\n  const solujenLkmPerVuosi = Object.keys(kuntienNimet).length * Object.keys(verokategoriat).length;\n  var verodata2017indeksi = (veroTietojenVuodet.length - 1) * solujenLkmPerVuosi;\n\n  for (let i = verodata2017indeksi + sarakeNro, j = 0; i < solujenLkmPerVuosi * veroTietojenVuodet.length; i += 6, j++) {\n    taulukko[j] = verotiedot[i];\n  }\n\n  return taulukko;\n}\n\nfunction parsiKunnanToimialat(kunnanIndeksi) {\n  var toimialojenLkm = Object.keys(toimialalista).length;\n  var kunnanToimialojenLkmt = [];\n  var alkuindeksi = kunnanIndeksi * toimialojenLkm;\n  var alkuindeksi2; //console.log(\"kunnani: \" + kunnanIndeksi)\n  //console.log(\"alkui: \" + alkuindeksi2)\n\n  if (kunnanIndeksi == 1) alkuindeksi2 = 7 * toimialojenLkm;else if (kunnanIndeksi > 1 && kunnanIndeksi < 8) alkuindeksi2 = alkuindeksi - toimialojenLkm;else alkuindeksi2 = alkuindeksi; //console.log(\"alkui: \" + alkuindeksi2)\n\n  for (let i = alkuindeksi2; i < alkuindeksi2 + toimialojenLkm; i++) {\n    kunnanToimialojenLkmt.push(toimialojenMaarat[i]);\n  }\n\n  return kunnanToimialojenLkmt;\n}\n\nconst App = () => {\n  const _useState = useState('home'),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const toPage = page => event => {\n    event.preventDefault();\n    setPage(page);\n  };\n\n  const content = () => {\n    if (page === 'paikkakunnat') {\n      return React.createElement(Paikkakunnat, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    } else if (page === 'Muu') {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Joo\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"row justify-content-md-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"btn-group btn-group-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('paikkakunnat'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Toimialat\"), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('Muu'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Paikkakunnat\"))), content());\n};\n\nReactDOM.render(React.createElement(App, null), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tuomo/PROJEKTITYÖ/ryhmatyo/tklaskuri/src/index.js"],"names":["React","useState","ReactDOM","data","datavaakunat","dataverot","datatoimialatKunnittain","Paikkakunnat","kuntienNimet","dataset","dimension","category","label","pktiedot","value","kuntienIndeksit","index","veroTietojenVuodet","Object","keys","Vuosi","verokategoriat","Tiedot","verotiedot","toimialalista","Toimiala2008","toimialojenMaarat","luoPKtaulukko","sarakeNro","taulukko","i","j","length","luoVeroTaulukko","solujenLkmPerVuosi","verodata2017indeksi","parsiKunnanToimialat","kunnanIndeksi","toimialojenLkm","kunnanToimialojenLkmt","alkuindeksi","alkuindeksi2","push","App","page","setPage","toPage","event","preventDefault","content","render","createElement","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom'\nimport data from \"./kuntienavainluvut1\"; \nimport './App.css';\nimport datavaakunat from \"./vaakunaKuvat\"\nimport dataverot from \"./verotietoja\"\nimport datatoimialatKunnittain from \"./toimialatKunnittain\"\nimport { Paikkakunnat } from \"./paikkakunnat\";\n\n    //objektilista kuntien nimistä\n    const kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label\n    //objektilista asukasluvuista\n    const pktiedot = data.dataset.value\n    //objektilista kuntien indekseistä\n    const kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index\n    //vuodet 2005-2017 taulukossa indeksistä 0 alkaen\n    const veroTietojenVuodet = Object.keys(dataverot.dataset.dimension.Vuosi.category.label)\n    // objektilista verotietoihin koskevista kategorioista\n    const verokategoriat = dataverot.dataset.dimension.Tiedot.category.label\n    // verotiedot taulukossa\n    const verotiedot = dataverot.dataset.value\n    // lista eri toimialoista\n    const toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label\n    // toimialojen määrät taulukossa\n    const toimialojenMaarat = datatoimialatKunnittain.dataset.value\n\n/** Parsii paikkakuntadataa omiin taulukoihin sarakenumeron perusteella\n*/\nfunction luoPKtaulukko(sarakeNro){\n  var taulukko = [];\n  for (let i = sarakeNro, j = 0; i < pktiedot.length; i+=4, j++){\n      taulukko[j] = pktiedot[i];\n    }\n    return taulukko;\n}\n\n/** Parsii verotiedot omaan taulukkoon sarakenumeron perusteella\n*/\nfunction luoVeroTaulukko(sarakeNro){\n  var taulukko = [];\n  const solujenLkmPerVuosi = Object.keys(kuntienNimet).length * Object.keys(verokategoriat).length\n  var verodata2017indeksi = (veroTietojenVuodet.length - 1) * solujenLkmPerVuosi\n  \n  for (let i = verodata2017indeksi + sarakeNro, j = 0; i < solujenLkmPerVuosi*veroTietojenVuodet.length; i+=6, j++){\n      taulukko[j] = verotiedot[i];\n  }\n  return taulukko;\n}\n\nfunction parsiKunnanToimialat(kunnanIndeksi){\n  var toimialojenLkm = Object.keys(toimialalista).length\n  var kunnanToimialojenLkmt = [];\n  var alkuindeksi = kunnanIndeksi * toimialojenLkm;\n  var alkuindeksi2;\n  //console.log(\"kunnani: \" + kunnanIndeksi)\n  //console.log(\"alkui: \" + alkuindeksi2)\n  if (kunnanIndeksi == 1) alkuindeksi2 = 7 * toimialojenLkm\n  else if (kunnanIndeksi > 1  && kunnanIndeksi < 8 ) alkuindeksi2 = alkuindeksi - toimialojenLkm\n  else alkuindeksi2 = alkuindeksi\n  //console.log(\"alkui: \" + alkuindeksi2)\n\n  for ( let i = alkuindeksi2; i < (alkuindeksi2 + toimialojenLkm); i++){\n    kunnanToimialojenLkmt.push(toimialojenMaarat[i]);\n  }\n  return kunnanToimialojenLkmt;\n\n}\n\nconst App = () => {\n\n  const [page, setPage] = useState('home')\n\n  const  toPage = (page) => (event) => {\n    event.preventDefault()\n    setPage(page)\n  }\n    \n  \n  const content = () => {\n    if (page === 'paikkakunnat') {\n      return <Paikkakunnat />\n    } else if (page === 'Muu') {\n      return <p>Joo</p>\n    }\n  }\n\n\n    return (\n\n\n      <div>\n      \n      <div class=\"row justify-content-md-center\">\n         \n        <div class=\"btn-group btn-group-lg\">\n        <button type=\"button\" class=\"btn btn-primary\" aria-pressed=\"true\" onClick={toPage('paikkakunnat')}>Toimialat</button>\n        <button type=\"button\" class=\"btn btn-primary\" aria-pressed=\"true\" onClick={toPage('Muu')}>Paikkakunnat</button>\n        </div>\n        \n        \n        </div>\n        {content()}\n        </div>\n       )\n    \n\n  }\n\n   \n\n\n \n\n\n\nReactDOM.render(\n  React.createElement(App, null),\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}