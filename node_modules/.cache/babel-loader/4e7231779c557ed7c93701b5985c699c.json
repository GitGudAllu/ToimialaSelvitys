{"ast":null,"code":"import _slicedToArray from \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport data from \"./kuntienavainluvut1\";\nimport './App.css';\nimport datavaakunat from \"./vaakunaKuvat\";\nimport dataverot from \"./verotietoja\";\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\";\nimport ToimialatValilehti from './toimialat';\nimport dataPaastot from \"./paastotToimialoittain\";\nconsole.log(dataPaastot); //objektilista kuntien nimistä\n\nconst kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label; //objektilista asukasluvuista\n\nconst pktiedot = data.dataset.value; //objektilista kuntien indekseistä\n\nconst kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index; //vuodet 2005-2017 taulukossa indeksistä 0 alkaen\n\nconst veroTietojenVuodet = Object.keys(dataverot.dataset.dimension.Vuosi.category.label); // objektilista verotietoihin koskevista kategorioista\n\nconst verokategoriat = dataverot.dataset.dimension.Tiedot.category.label; // verotiedot taulukossa\n\nconst verotiedot = dataverot.dataset.value; // lista eri toimialoista\n\nconst toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label; // toimialojen määrät taulukossa\n\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value; // toimialat ja niitä vastaavat indeksit\n\nconst toimialatJaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category;\n/** Parsii paikkakuntadataa omiin taulukoihin sarakenumeron perusteella\n*/\n\nfunction luoPKtaulukko(sarakeNro) {\n  var taulukko = [];\n\n  for (let i = sarakeNro, j = 0; i < pktiedot.length; i += 4, j++) {\n    taulukko[j] = pktiedot[i];\n  }\n\n  return taulukko;\n}\n/** Parsii verotiedot omaan taulukkoon sarakenumeron perusteella\n*/\n\n\nfunction luoVeroTaulukko(sarakeNro) {\n  var taulukko = [];\n  const solujenLkmPerVuosi = Object.keys(kuntienNimet).length * Object.keys(verokategoriat).length;\n  var verodata2017indeksi = (veroTietojenVuodet.length - 1) * solujenLkmPerVuosi;\n\n  for (let i = verodata2017indeksi + sarakeNro, j = 0; i < solujenLkmPerVuosi * veroTietojenVuodet.length; i += 6, j++) {\n    taulukko[j] = verotiedot[i];\n  }\n\n  return taulukko;\n} //function luoPaastot\n\n/** Parsii sovelluksessa valitun kunnan toimialatiedot yhteen taulukkoon.\n* Parametreina ovat valitun kunnan indeksi ja toimialojen nimet järjestetyssä listassa.\n* Toimialojen määrät -datasetistä lasketaan oikea aloitusindeksi kunnan indeksin avulla.\n*/\n\n\nfunction parsiKunnanToimialat(kunnanIndeksi, toimialat) {\n  var toimialojenLkm = Object.keys(toimialat).length;\n  var kunnanToimialojenLkmt = [];\n  var alkuindeksi = kunnanIndeksi * toimialojenLkm; //var alkuindeksi2;\n  //console.log(\"kunnani: \" + kunnanIndeksi)\n  //console.log(\"alkui: \" + alkuindeksi2)\n  //if (kunnanIndeksi == 1) alkuindeksi2 = 7 * toimialojenLkm\n  //else if (kunnanIndeksi > 1  && kunnanIndeksi < 8 ) alkuindeksi2 = alkuindeksi - toimialojenLkm\n  //else alkuindeksi2 = alkuindeksi\n  //console.log(\"alkui: \" + alkuindeksi2)\n\n  for (let i = alkuindeksi; i < alkuindeksi + toimialojenLkm; i++) {\n    kunnanToimialojenLkmt.push(toimialojenMaarat[i]);\n  }\n\n  return kunnanToimialojenLkmt;\n}\n/** Etsii annetusta kunnan toimialojen lkm -taulukosta suurimman alkion indeksin.\n* Ohittaa parametrina annetun alkion ja sitä suuremmat, jotta funktiota voi käyttää myös\n* toiseksi suurimman etsintään (jne)\n* param1(tAlaNimet): toimialojen nimet järjestetyssä listassa\n* param2(tAlaLkm): valitun kunnan toimialojen lukumäärät taulukossa\n* param3(ohita): Alkion indeksi, joka ja jota suuremmat ohitetaan\n*/\n\n\nfunction etsiSuurimmanI(tAlaNimet, tAlaLkm, ohita) {\n  //console.log(tAlaLkm)\n  let suurin = 0;\n  let suurimmanI = 0;\n\n  for (let i = 0; i < tAlaLkm.length; i++) {\n    if (tAlaLkm[i] >= ohita) continue;\n\n    if (tAlaLkm[i] > suurin) {\n      let s = tAlaNimet[i];\n      let alkutunnus = s.substr(0, s.indexOf(' ')).trim(); //console.log(alkutunnus)\n      //console.log(isNaN(parseInt(alkutunnus)))\n\n      if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue; //console.log(alkutunnus)\n\n      suurin = tAlaLkm[i];\n      suurimmanI = i; //console.log(\"suurin: \" + suurin)\n    }\n  }\n\n  return suurimmanI;\n}\n/** Muotoilee ja palauttaa merkkijonona annettua indeksiä vastaavan toimialan \n* nimen ja lukumäärän\n*/\n\n\nfunction tulostaToimialat(toimialojenNimet, toimialojenLkm, i) {\n  //console.log(eniten)\n  //let suurin = 0;\n  //let toiseksiSuurin = etsiSuurin(toimialojenLkm, suurin)\n  //let kolmas = etsiSuurin(toimialojenLkm, toiseksiSuurin)\n  //let suurimmanIndeksi = toimialojenLkm.indexOf(eniten)\n  //let indeksi2 = toimialojenLkm.indexOf(toiseksiSuurin)\n  //console.log(suurimmanIndeksi)\n  //console.log(suurin)\n  //console.log(toiseksiSuurin)\n  //console.log(kolmas)\n  let s = toimialojenNimet[i] + \" : \" + toimialojenLkm[i];\n  return s.substr(s.indexOf(' ') + 1).trim(); //return toimialojenNimet[i] + \" : \" + toimialojenLkm[i] + \" \"\n}\n\nfunction jarjestaIndekseittain(datasetti) {\n  var labelit = [];\n\n  for (let x in datasetti.label) {\n    labelit.push(datasetti.label[x]);\n  }\n\n  var indeksit = [];\n\n  for (let x in datasetti.index) {\n    indeksit.push(datasetti.index[x]);\n  }\n\n  var labelitJaIndeksit = {};\n\n  for (let i = 0; i < Object.keys(datasetti.label).length; i++) {\n    let avain = indeksit[i];\n    let arvo = labelit[i];\n    labelitJaIndeksit[avain] = arvo;\n  } //toimialat ja niiden indeksit avain-arvo pareina listassa\n\n\n  let jarjestetty = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(labelitJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = labelitJaIndeksit[key];\n  });\n  return jarjestetty;\n}\n\nfunction parsiPaastotVuodelta(vuodenIndeksi) {\n  var paastoTaulukko = dataPaastot.dataset.value;\n  let toimialojenLkm = Object.keys(dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category.label).length;\n  var vuodenPaastot = [];\n  let alkuindeksi = vuodenIndeksi * toimialojenLkm;\n\n  for (let i = alkuindeksi; i < alkuindeksi + toimialojenLkm; i++) {\n    vuodenPaastot.push(paastoTaulukko[i]);\n  }\n\n  return vuodenPaastot;\n}\n\nfunction etsiPaastot(toimiala, toimialojenPaastot) {\n  let alkutunnus = toimiala.substr(0, toimiala.indexOf(' ')).trim();\n  console.log(alkutunnus);\n  let toimialanPaastot = toimialojenPaastot[alkutunnus];\n  console.log(toimialanPaastot);\n  if (isNaN(toimialanPaastot)) return \"Päästötietoja ei saatavilla\";\n  return toimialanPaastot + \" tuhatta kilogrammaa\";\n}\n\nconst App = () => {\n  const _useState = useState('toimialat'),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const toPage = page => event => {\n    event.preventDefault();\n    setPage(page);\n  };\n\n  const content = () => {\n    if (page === 'paikkakunnat') {\n      return React.createElement(Paikkakunnat, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      });\n    } else if (page === 'toimialat') {\n      return React.createElement(ToimialatValilehti, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"row justify-content-md-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"btn-group btn-group-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('paikkakunnat'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"Toimialat\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('toimialat'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Paikkakunnat\"))), content());\n}; //HUOM PAIKKAKUNNAT\n//KOMPONENTTI JOKA piirtää PAIKKAKUNNAT sivulle kaiken\n\n\nconst Paikkakunnat = () => {\n  // State joka pitää muistissa indeksiä \n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        counter = _useState4[0],\n        setCounter = _useState4[1];\n\n  const setToValue = value => setCounter(value); //paikkakuntatiedot parsittuna omiin taulukkoihin\n\n\n  var kuntienAsLuvut = luoPKtaulukko(0);\n  var vlMuutokset = luoPKtaulukko(1);\n  var tyoAsteet = luoPKtaulukko(2);\n  var tpLukumaarat = luoPKtaulukko(3);\n  const vaakunat = datavaakunat.selection1;\n  var nimiTaulukko = [];\n  var kuntienIit = [];\n  var vaakunaTaulukko = []; // kuntien nimet taulukkoon\n\n  for (var x in kuntienNimet) {\n    nimiTaulukko.push(kuntienNimet[x]);\n  }\n\n  var toimialojenNimet = [];\n\n  for (let x in toimialatJaIndeksit.label) {\n    toimialojenNimet.push(toimialatJaIndeksit.label[x]);\n  }\n\n  var toimialojenIndeksit = [];\n\n  for (let x in toimialatJaIndeksit.index) {\n    toimialojenIndeksit.push(toimialatJaIndeksit.index[x]);\n  }\n\n  var toimiAJaI = {};\n\n  for (let i = 0; i < toimialojenNimet.length; i++) {\n    let avain = toimialojenIndeksit[i];\n    let arvo = toimialojenNimet[i];\n    toimiAJaI[avain] = arvo;\n  } //toimialat ja niiden indeksit avain-arvo pareina listassa\n\n\n  const toimiAlatJarj = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(toimiAJaI).sort().forEach(function (key) {\n    toimiAlatJarj[key] = toimiAJaI[key];\n  }); //console.log(toimiAlatJarj)\n  // käyttäjän valitseman kunnan toimialatiedot taulukossa \n\n  var kunnantoimialat = parsiKunnanToimialat(counter, toimiAlatJarj);\n  console.log(toimialalista); // kuntien indeksit taulukkoon\n\n  for (let x in kuntienIndeksit) {\n    kuntienIit.push(kuntienIndeksit[x]);\n  }\n\n  var paastotToimialat = dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category;\n  var toimialatJaTunnukset = paastotToimialat.label;\n  var paastojenToimialatJarj = jarjestaIndekseittain(paastotToimialat);\n  console.log(paastojenToimialatJarj);\n  var paastotToimialoittain2008 = parsiPaastotVuodelta(0);\n  var TAtunnuksetJaPaastoarvot = {};\n\n  for (let i = 0; i < Object.keys(paastojenToimialatJarj).length; i++) {\n    let s = paastojenToimialatJarj[i];\n    let avain = s.substr(0, s.indexOf(' ')).trim();\n    let arvo = paastotToimialoittain2008[i];\n    TAtunnuksetJaPaastoarvot[avain] = arvo;\n  }\n\n  console.log(TAtunnuksetJaPaastoarvot);\n  var avain;\n  var arvo;\n  var nimetJaIndeksit = {};\n  let enitenI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, 9999999);\n  let enitenPaastot = etsiPaastot(toimiAlatJarj[enitenI], TAtunnuksetJaPaastoarvot);\n  let toiseksiEnitenI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[enitenI]);\n  let toiseksiPaastot = etsiPaastot(toimiAlatJarj[toiseksiEnitenI], TAtunnuksetJaPaastoarvot);\n  let kolmasI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[toiseksiEnitenI]);\n  let kolmasPaastot = etsiPaastot(toimiAlatJarj[kolmasI], TAtunnuksetJaPaastoarvot);\n  let neljasI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[kolmasI]);\n  let neljasPaastot = etsiPaastot(toimiAlatJarj[neljasI], TAtunnuksetJaPaastoarvot);\n  let viidesI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[neljasI]);\n  let viidesPaastot = etsiPaastot(toimiAlatJarj[viidesI], TAtunnuksetJaPaastoarvot); //let kolmas = etsiSuurin(toimiAlatJarj, kunnantoimialat, toiseksiEniten)\n\n  let enitenTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, enitenI);\n  let toiseksiEnitenTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, toiseksiEnitenI);\n  let kolmasTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, kolmasI);\n  let neljasTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, neljasI);\n  let viidesTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, viidesI); // valintalista kunnista, indeksöi samalla 0->n\n  // kuntien nimet ja indeksit mapitettuna yhteen objektilistaan\n\n  for (var i = 0; i < nimiTaulukko.length; i++) {\n    avain = kuntienIit[i];\n    arvo = nimiTaulukko[i];\n    nimetJaIndeksit[avain] = arvo;\n  }\n\n  const jarjestetty = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(nimetJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = nimetJaIndeksit[key];\n  }); // Kuntien nimien erotus järjestetystä objektilistasta taulukkoon\n\n  var nimetJarjestyksessa = [];\n\n  for (let x in jarjestetty) {\n    nimetJarjestyksessa.push(jarjestetty[x]);\n  } // verotiedot parsittuna omiin taulukoihin\n\n\n  var tulonsaajat = luoVeroTaulukko(0);\n  var veronalaisetTulotKeskimaarin = luoVeroTaulukko(1);\n  var ansioTulotKeskimaarin = luoVeroTaulukko(2);\n  var verotYhteensaKeskimaarin = luoVeroTaulukko(3);\n  var valtionVeroKeskimaarin = luoVeroTaulukko(4);\n  var kunnallisVeroKeskimaarin = luoVeroTaulukko(5); // Hakutoiminto, ottaa inputista valuen ja vertaa sitä selectin valueihin\n  // piilottaa valuet, jotka eivät vastaa hakusanaa\n\n  var select;\n  var haettava;\n\n  const etsiPaikkakunta = hakusana => {\n    haettava = hakusana.target.value;\n    select = document.getElementById(\"listaKunnista\");\n\n    for (var i = 0; i < select.length; i++) {\n      var txt = select[i].text;\n      var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n      select.options[i].style.display = include ? '' : 'none';\n    }\n  };\n\n  var asukasLukuI;\n  var listaI; // ottaa selectistä valuen ja asettaa sen countteriin\n\n  const tulosta = listaValittu => {\n    listaI = listaValittu.target.value;\n    setToValue(listaI);\n  }; // asukasluvut löytyvät taulukosta neljän indeksin välein ([0,4,8,...])\n\n\n  var asukaslukuInd = 0;\n  return (// Bootstrapin pääcontainer\n    React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"search\",\n      name: \"search\",\n      placeholder: \"Hae...\",\n      onKeyUp: etsiPaikkakunta,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    })), React.createElement(\"select\", {\n      id: \"listaKunnista\",\n      className: \"form-control\",\n      size: \"28\",\n      onChange: tulosta,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, nimetJarjestyksessa.map(s => React.createElement(\"option\", {\n      value: asukaslukuInd++,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, s)))), React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tiedotheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, nimetJarjestyksessa[counter]), React.createElement(\"img\", {\n      src: vaakunat[counter].image,\n      alt: \"new\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      class: \"list-group list-group-horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, \"Kunnan asukasluku: \"), kuntienAsLuvut[counter]), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, \"V\\xE4kiluvun muutos edellisest\\xE4 vuodesta: \"), \" \", vlMuutokset[counter] + \"%\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, \"Ty\\xF6llisyysaste: \"), \" \", tyoAsteet[counter] + \"%\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, \"Ty\\xF6paikkojen lukum\\xE4\\xE4r\\xE4: \"), \" \", tpLukumaarat[counter]), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, \"Tulonsaajia: \"), \" \", tulonsaajat[counter])), React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, \"Veronalaiset tulot keskim\\xE4\\xE4rin: \"), \" \", veronalaisetTulotKeskimaarin[counter] + \"€/vuosi\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, \"Ansiotulot keskim\\xE4\\xE4rin: \"), \" \", ansioTulotKeskimaarin[counter] + \"€/vuosi\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \"Verot yhteens\\xE4 keskim\\xE4\\xE4rin: \"), \" \", verotYhteensaKeskimaarin[counter] + \"€/vuosi\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, \"Valtionvero keskim\\xE4\\xE4rin: \"), \" \", valtionVeroKeskimaarin[counter] + \"€/vuosi\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, \"Kunnallisvero keskim\\xE4\\xE4rin: \"), \" \", kunnallisVeroKeskimaarin[counter] + \"€/vuosi\"))))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, \"Toimialoja eniten: \"), \" \", enitenTulostus, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, \" Toimialan p\\xE4\\xE4st\\xF6t: \"), enitenPaastot, \" \"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, \"Toimialoja toiseksi eniten: \"), \" \", toiseksiEnitenTulostus, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, \" Toimialan p\\xE4\\xE4st\\xF6t: \"), \" \", toiseksiPaastot, \" \"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, \"3: \"), \" \", kolmasTulostus, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, \" Toimialan p\\xE4\\xE4st\\xF6t: \"), \" \", kolmasPaastot, \" \"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, \"4: \"), \" \", neljasTulostus, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, \" Toimialan p\\xE4\\xE4st\\xF6t: \"), \" \", neljasPaastot, \" \"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, \"5: \"), \" \", viidesTulostus, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, \" Toimialan p\\xE4\\xE4st\\xF6t: \"), \" \", viidesPaastot, \" \"))))))\n  );\n};\n\nReactDOM.render(React.createElement(App, null), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tuomo/PROJEKTITYÖ/ryhmatyo/tklaskuri/src/index.js"],"names":["React","useState","ReactDOM","data","datavaakunat","dataverot","datatoimialatKunnittain","ToimialatValilehti","dataPaastot","console","log","kuntienNimet","dataset","dimension","category","label","pktiedot","value","kuntienIndeksit","index","veroTietojenVuodet","Object","keys","Vuosi","verokategoriat","Tiedot","verotiedot","toimialalista","Toimiala2008","toimialojenMaarat","toimialatJaIndeksit","luoPKtaulukko","sarakeNro","taulukko","i","j","length","luoVeroTaulukko","solujenLkmPerVuosi","verodata2017indeksi","parsiKunnanToimialat","kunnanIndeksi","toimialat","toimialojenLkm","kunnanToimialojenLkmt","alkuindeksi","push","etsiSuurimmanI","tAlaNimet","tAlaLkm","ohita","suurin","suurimmanI","s","alkutunnus","substr","indexOf","trim","isNaN","parseInt","tulostaToimialat","toimialojenNimet","jarjestaIndekseittain","datasetti","labelit","x","indeksit","labelitJaIndeksit","avain","arvo","jarjestetty","sort","forEach","key","parsiPaastotVuodelta","vuodenIndeksi","paastoTaulukko","vuodenPaastot","etsiPaastot","toimiala","toimialojenPaastot","toimialanPaastot","App","page","setPage","toPage","event","preventDefault","content","Paikkakunnat","counter","setCounter","setToValue","kuntienAsLuvut","vlMuutokset","tyoAsteet","tpLukumaarat","vaakunat","selection1","nimiTaulukko","kuntienIit","vaakunaTaulukko","toimialojenIndeksit","toimiAJaI","toimiAlatJarj","kunnantoimialat","paastotToimialat","toimialatJaTunnukset","paastojenToimialatJarj","paastotToimialoittain2008","TAtunnuksetJaPaastoarvot","nimetJaIndeksit","enitenI","enitenPaastot","toiseksiEnitenI","toiseksiPaastot","kolmasI","kolmasPaastot","neljasI","neljasPaastot","viidesI","viidesPaastot","enitenTulostus","toiseksiEnitenTulostus","kolmasTulostus","neljasTulostus","viidesTulostus","nimetJarjestyksessa","tulonsaajat","veronalaisetTulotKeskimaarin","ansioTulotKeskimaarin","verotYhteensaKeskimaarin","valtionVeroKeskimaarin","kunnallisVeroKeskimaarin","select","haettava","etsiPaikkakunta","hakusana","target","document","getElementById","txt","text","include","toLowerCase","startsWith","options","style","display","asukasLukuI","listaI","tulosta","listaValittu","asukaslukuInd","map","image","render","createElement"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom'\nimport data from \"./kuntienavainluvut1\"; \nimport './App.css';\nimport datavaakunat from \"./vaakunaKuvat\"\nimport dataverot from \"./verotietoja\"\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\"\nimport ToimialatValilehti from './toimialat'\nimport dataPaastot from \"./paastotToimialoittain\"\n\n\n\nconsole.log(dataPaastot)\n\n\n    //objektilista kuntien nimistä\n    const kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label\n    //objektilista asukasluvuista\n    const pktiedot = data.dataset.value\n    //objektilista kuntien indekseistä\n    const kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index\n    //vuodet 2005-2017 taulukossa indeksistä 0 alkaen\n    const veroTietojenVuodet = Object.keys(dataverot.dataset.dimension.Vuosi.category.label)\n    // objektilista verotietoihin koskevista kategorioista\n    const verokategoriat = dataverot.dataset.dimension.Tiedot.category.label\n    // verotiedot taulukossa\n    const verotiedot = dataverot.dataset.value\n    // lista eri toimialoista\n    const toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label\n    // toimialojen määrät taulukossa\n    const toimialojenMaarat = datatoimialatKunnittain.dataset.value\n    // toimialat ja niitä vastaavat indeksit\n    const toimialatJaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category\n\n\n  \n\n/** Parsii paikkakuntadataa omiin taulukoihin sarakenumeron perusteella\n*/\nfunction luoPKtaulukko(sarakeNro){\n  var taulukko = [];\n  for (let i = sarakeNro, j = 0; i < pktiedot.length; i+=4, j++){\n      taulukko[j] = pktiedot[i];\n    }\n    return taulukko;\n}\n\n/** Parsii verotiedot omaan taulukkoon sarakenumeron perusteella\n*/\nfunction luoVeroTaulukko(sarakeNro){\n  var taulukko = [];\n  const solujenLkmPerVuosi = Object.keys(kuntienNimet).length * Object.keys(verokategoriat).length\n  var verodata2017indeksi = (veroTietojenVuodet.length - 1) * solujenLkmPerVuosi\n  \n  for (let i = verodata2017indeksi + sarakeNro, j = 0; i < solujenLkmPerVuosi*veroTietojenVuodet.length; i+=6, j++){\n      taulukko[j] = verotiedot[i];\n  }\n  return taulukko;\n}\n\n//function luoPaastot\n\n/** Parsii sovelluksessa valitun kunnan toimialatiedot yhteen taulukkoon.\n* Parametreina ovat valitun kunnan indeksi ja toimialojen nimet järjestetyssä listassa.\n* Toimialojen määrät -datasetistä lasketaan oikea aloitusindeksi kunnan indeksin avulla.\n*/\nfunction parsiKunnanToimialat(kunnanIndeksi, toimialat){\n  var toimialojenLkm = Object.keys(toimialat).length\n  var kunnanToimialojenLkmt = [];\n  var alkuindeksi = kunnanIndeksi * toimialojenLkm;\n  //var alkuindeksi2;\n  //console.log(\"kunnani: \" + kunnanIndeksi)\n  //console.log(\"alkui: \" + alkuindeksi2)\n  //if (kunnanIndeksi == 1) alkuindeksi2 = 7 * toimialojenLkm\n  //else if (kunnanIndeksi > 1  && kunnanIndeksi < 8 ) alkuindeksi2 = alkuindeksi - toimialojenLkm\n  //else alkuindeksi2 = alkuindeksi\n  //console.log(\"alkui: \" + alkuindeksi2)\n\n\n  for ( let i = alkuindeksi; i < (alkuindeksi + toimialojenLkm); i++){\n    kunnanToimialojenLkmt.push(toimialojenMaarat[i]);\n  }\n  return kunnanToimialojenLkmt;\n\n}\n\n/** Etsii annetusta kunnan toimialojen lkm -taulukosta suurimman alkion indeksin.\n* Ohittaa parametrina annetun alkion ja sitä suuremmat, jotta funktiota voi käyttää myös\n* toiseksi suurimman etsintään (jne)\n* param1(tAlaNimet): toimialojen nimet järjestetyssä listassa\n* param2(tAlaLkm): valitun kunnan toimialojen lukumäärät taulukossa\n* param3(ohita): Alkion indeksi, joka ja jota suuremmat ohitetaan\n*/\nfunction etsiSuurimmanI(tAlaNimet, tAlaLkm, ohita){\n  //console.log(tAlaLkm)\n  let suurin = 0\n  let suurimmanI = 0\n  for (let i = 0; i < tAlaLkm.length; i++){\n    if (tAlaLkm[i] >= ohita) continue;\n    if (tAlaLkm[i] > suurin) {\n      let s = tAlaNimet[i]\n      let alkutunnus = s.substr(0, s.indexOf(' ')).trim()\n      //console.log(alkutunnus)\n      //console.log(isNaN(parseInt(alkutunnus)))\n      if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue\n      //console.log(alkutunnus)\n      suurin = tAlaLkm[i]\n      suurimmanI = i\n      //console.log(\"suurin: \" + suurin)\n    }\n  }\n  return suurimmanI\n\n}\n\n/** Muotoilee ja palauttaa merkkijonona annettua indeksiä vastaavan toimialan \n* nimen ja lukumäärän\n*/ \nfunction tulostaToimialat(toimialojenNimet, toimialojenLkm, i){\n  //console.log(eniten)\n  //let suurin = 0;\n  //let toiseksiSuurin = etsiSuurin(toimialojenLkm, suurin)\n  //let kolmas = etsiSuurin(toimialojenLkm, toiseksiSuurin)\n  \n  //let suurimmanIndeksi = toimialojenLkm.indexOf(eniten)\n  //let indeksi2 = toimialojenLkm.indexOf(toiseksiSuurin)\n  //console.log(suurimmanIndeksi)\n  //console.log(suurin)\n  //console.log(toiseksiSuurin)\n  //console.log(kolmas)\n  let s = toimialojenNimet[i] + \" : \" + toimialojenLkm[i]\n  return s.substr(s.indexOf(' ')+1).trim()\n  //return toimialojenNimet[i] + \" : \" + toimialojenLkm[i] + \" \"\n}\n\nfunction jarjestaIndekseittain(datasetti){\n  var labelit = []\n    for (let x in datasetti.label){\n      labelit.push(datasetti.label[x])\n    }\n\n    var indeksit = []\n    for (let x in datasetti.index){\n      indeksit.push(datasetti.index[x])\n    }\n\n    var labelitJaIndeksit = {}\n    for (let i = 0; i < Object.keys(datasetti.label).length; i++){\n      let avain = indeksit[i];\n      let arvo = labelit[i];\n      labelitJaIndeksit[avain] = arvo;\n    }\n\n    //toimialat ja niiden indeksit avain-arvo pareina listassa\n    let jarjestetty = {};\n    // objektilistan järjestys avainarvon eli indeksin mukaan\n    Object.keys(labelitJaIndeksit).sort().forEach(function(key) {\n    jarjestetty[key] = labelitJaIndeksit[key];\n  });\n    return jarjestetty\n\n}\n\nfunction parsiPaastotVuodelta(vuodenIndeksi){\n  var paastoTaulukko = dataPaastot.dataset.value\n  let toimialojenLkm = Object.keys(dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category.label).length\n  var vuodenPaastot = []\n  let alkuindeksi = vuodenIndeksi *  toimialojenLkm\n\n  for (let i = alkuindeksi; i < alkuindeksi + toimialojenLkm; i++){\n    vuodenPaastot.push(paastoTaulukko[i])\n  }\n  return vuodenPaastot\n\n}\n\nfunction etsiPaastot(toimiala, toimialojenPaastot){\n  let alkutunnus = toimiala.substr(0, toimiala.indexOf(' ')).trim()\n  console.log(alkutunnus)\n  let toimialanPaastot = toimialojenPaastot[alkutunnus]\n  console.log(toimialanPaastot)\n  if (isNaN(toimialanPaastot)) return \"Päästötietoja ei saatavilla\"\n  return toimialanPaastot + \" tuhatta kilogrammaa\"\n}\n\nconst App = () => {\n\n  const [page, setPage] = useState('toimialat')\n\n  const  toPage = (page) => (event) => {\n    event.preventDefault()\n    setPage(page)\n  }\n    \n  \n\n  const content = () => {\n    if (page === 'paikkakunnat') {\n      return <Paikkakunnat />\n    } else if (page === 'toimialat') {\n      return <ToimialatValilehti />\n    }\n  }\n\n\n\n    return (\n\n\n      <div>\n      \n      <div class=\"row justify-content-md-center\">\n         \n        <div class=\"btn-group btn-group-lg\">\n        <button type=\"button\" className=\"btn btn-primary\" aria-pressed=\"true\" onClick={toPage('paikkakunnat')}>Toimialat</button>\n        <button type=\"button\" className=\"btn btn-primary\" aria-pressed=\"true\" onClick={toPage('toimialat')}>Paikkakunnat</button>\n        </div>\n        \n        \n        </div>\n        {content()}\n        </div>\n       )\n    \n\n  }\n\n \n //HUOM PAIKKAKUNNAT\n //KOMPONENTTI JOKA piirtää PAIKKAKUNNAT sivulle kaiken\n const Paikkakunnat = () => {\n\n\n  // State joka pitää muistissa indeksiä \n  const [ counter, setCounter ] = useState(0)\n  const setToValue = (value) => setCounter(value)\n\n\n //paikkakuntatiedot parsittuna omiin taulukkoihin\n var kuntienAsLuvut = luoPKtaulukko(0);\n var vlMuutokset = luoPKtaulukko(1);\n var tyoAsteet = luoPKtaulukko(2);\n var tpLukumaarat = luoPKtaulukko(3);\n \n\n const vaakunat = datavaakunat.selection1\n\n\n\n var nimiTaulukko = [];\n var kuntienIit = [];\n var vaakunaTaulukko = [];\n\n\n \n \n // kuntien nimet taulukkoon\n for (var x in kuntienNimet) {\n     nimiTaulukko.push(kuntienNimet[x]);\n }\n\n    var toimialojenNimet = []\n    for (let x in toimialatJaIndeksit.label){\n      toimialojenNimet.push(toimialatJaIndeksit.label[x])\n    }\n\n    var toimialojenIndeksit = []\n    for (let x in toimialatJaIndeksit.index){\n      toimialojenIndeksit.push(toimialatJaIndeksit.index[x])\n    }\n\n    var toimiAJaI = {}\n    for (let i = 0; i < toimialojenNimet.length; i++){\n      let avain = toimialojenIndeksit[i];\n      let arvo = toimialojenNimet[i];\n      toimiAJaI[avain] = arvo;\n    }\n\n    //toimialat ja niiden indeksit avain-arvo pareina listassa\n    const toimiAlatJarj = {};\n    // objektilistan järjestys avainarvon eli indeksin mukaan\n    Object.keys(toimiAJaI).sort().forEach(function(key) {\n    toimiAlatJarj[key] = toimiAJaI[key];\n  });\n\n    //console.log(toimiAlatJarj)\n    // käyttäjän valitseman kunnan toimialatiedot taulukossa \n    var kunnantoimialat = parsiKunnanToimialat(counter, toimiAlatJarj);\n    console.log(toimialalista)\n  \n\n   \n\n\n // kuntien indeksit taulukkoon\n for (let x in kuntienIndeksit) {\n     kuntienIit.push(kuntienIndeksit[x]);\n }\n\n var paastotToimialat = dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category\n var toimialatJaTunnukset = paastotToimialat.label\n\n var paastojenToimialatJarj = jarjestaIndekseittain(paastotToimialat)\n\n console.log(paastojenToimialatJarj)\n\n var paastotToimialoittain2008 = parsiPaastotVuodelta(0)\n var TAtunnuksetJaPaastoarvot = {}\n for (let i = 0; i < Object.keys(paastojenToimialatJarj).length; i++){\n  let s = paastojenToimialatJarj[i]\n  let avain = s.substr(0, s.indexOf(' ')).trim()\n  let arvo = paastotToimialoittain2008[i]\n  TAtunnuksetJaPaastoarvot[avain] = arvo\n }\nconsole.log(TAtunnuksetJaPaastoarvot)\n\n var avain;\n var arvo;\n var nimetJaIndeksit = {};\n\n    \n    let enitenI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, 9999999)\n    let enitenPaastot = etsiPaastot(toimiAlatJarj[enitenI], TAtunnuksetJaPaastoarvot)\n\n    let toiseksiEnitenI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[enitenI])\n    let toiseksiPaastot = etsiPaastot(toimiAlatJarj[toiseksiEnitenI], TAtunnuksetJaPaastoarvot)\n\n    let kolmasI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[toiseksiEnitenI])\n    let kolmasPaastot = etsiPaastot(toimiAlatJarj[kolmasI], TAtunnuksetJaPaastoarvot)\n\n    let neljasI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[kolmasI])\n    let neljasPaastot = etsiPaastot(toimiAlatJarj[neljasI], TAtunnuksetJaPaastoarvot)\n\n    let viidesI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[neljasI])\n    let viidesPaastot = etsiPaastot(toimiAlatJarj[viidesI], TAtunnuksetJaPaastoarvot)\n    //let kolmas = etsiSuurin(toimiAlatJarj, kunnantoimialat, toiseksiEniten)\n    let enitenTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, enitenI)\n    let toiseksiEnitenTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, toiseksiEnitenI)\n    let kolmasTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, kolmasI)\n    let neljasTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, neljasI)\n    let viidesTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, viidesI)\n\n    \n    // valintalista kunnista, indeksöi samalla 0->n\n  \n\n\n // kuntien nimet ja indeksit mapitettuna yhteen objektilistaan\n for (var i = 0; i < nimiTaulukko.length; i++){\n   avain = kuntienIit[i];\n   arvo = nimiTaulukko[i];\n   nimetJaIndeksit[avain] = arvo;\n }\n\n const jarjestetty = {};\n // objektilistan järjestys avainarvon eli indeksin mukaan\n Object.keys(nimetJaIndeksit).sort().forEach(function(key) {\n jarjestetty[key] = nimetJaIndeksit[key];\n});\n\n // Kuntien nimien erotus järjestetystä objektilistasta taulukkoon\nvar nimetJarjestyksessa = [];\nfor (let x in jarjestetty) {\n     nimetJarjestyksessa.push(jarjestetty[x]);\n }\n\n\n // verotiedot parsittuna omiin taulukoihin\n var tulonsaajat = luoVeroTaulukko(0);\n var veronalaisetTulotKeskimaarin = luoVeroTaulukko(1);\n var ansioTulotKeskimaarin = luoVeroTaulukko(2);\n var verotYhteensaKeskimaarin = luoVeroTaulukko(3);\n var valtionVeroKeskimaarin = luoVeroTaulukko(4);\n var kunnallisVeroKeskimaarin = luoVeroTaulukko(5);\n\n\n\n\n\n\n \n\n // Hakutoiminto, ottaa inputista valuen ja vertaa sitä selectin valueihin\n // piilottaa valuet, jotka eivät vastaa hakusanaa\n var select\n var haettava \n\n\n const etsiPaikkakunta = (hakusana) => {\n   \n   haettava = hakusana.target.value\n    select = document.getElementById(\"listaKunnista\");\n   for (var i = 0; i < select.length; i++){\n     var txt = select[i].text\n     var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n     select.options[i].style.display = include ? '' : 'none';\n   } \n\n }\n\n var asukasLukuI;\n var listaI;\n\n // ottaa selectistä valuen ja asettaa sen countteriin\n const tulosta = (listaValittu) => {\n   \n   listaI = listaValittu.target.value\n   setToValue(listaI)\n  \n }\n\n // asukasluvut löytyvät taulukosta neljän indeksin välein ([0,4,8,...])\n var asukaslukuInd = 0;\n\n\n return (\n // Bootstrapin pääcontainer\n <div className=\"container\">\t\n\n\n\n\n     <div className=\"row\">\n       <div className=\"col-sm\">\n\n         <div>\n\n     <input type=\"text\" id=\"search\" name=\"search\" placeholder=\"Hae...\" onKeyUp={etsiPaikkakunta}/>\n         </div>\n     \n         <select id=\"listaKunnista\"className=\"form-control\" size=\"28\" onChange={tulosta} >\n\n         {nimetJarjestyksessa.map(s => (<option value={asukaslukuInd++}>{s}</option>))} \n         </select>\n\n       </div>\n\n       <div className=\"col-10\">\n\n     \n\n         \n\n         <br />\n         <div className=\"row\">\n         <div class=\"col jumbotron\">\n\n         <div className=\"tiedotheader\">\n           <h4 align=\"center\">{nimetJarjestyksessa[counter]}</h4> \n           \n           <img src={vaakunat[counter].image} alt=\"new\" align=\"center\"/>\n         </div>\n\n         <ul class=\"list-group list-group-horizontal\">\n\n         <ul class=\"list-group\">\n\n         <li class=\"list-group-item\"><small class=\"text-muted\">Kunnan asukasluku: </small>{kuntienAsLuvut[counter]}</li>\n         <li class=\"list-group-item\"><small class=\"text-muted\">Väkiluvun muutos edellisestä vuodesta: </small> {vlMuutokset[counter] + \"%\"}</li>\n         <li class=\"list-group-item\"> <small class=\"text-muted\">Työllisyysaste: </small> {tyoAsteet[counter] + \"%\"}</li>\n         <li class=\"list-group-item\"> <small class=\"text-muted\">Työpaikkojen lukumäärä: </small> {tpLukumaarat[counter]}</li>\n         <li class=\"list-group-item\"><small class=\"text-muted\">Tulonsaajia: </small> {tulonsaajat[counter]}</li>\n         </ul>\n\n         <ul class=\"list-group\">\n\n         <li class=\"list-group-item\"><small class=\"text-muted\">Veronalaiset tulot keskimäärin: </small> {veronalaisetTulotKeskimaarin[counter] + \"€/vuosi\"}</li>\n         <li class=\"list-group-item\"><small class=\"text-muted\">Ansiotulot keskimäärin: </small> {ansioTulotKeskimaarin[counter]+ \"€/vuosi\"}</li>\n         <li class=\"list-group-item\"><small class=\"text-muted\">Verot yhteensä keskimäärin: </small> {verotYhteensaKeskimaarin[counter]+ \"€/vuosi\"}</li>\n         <li class=\"list-group-item\"><small class=\"text-muted\">Valtionvero keskimäärin: </small> {valtionVeroKeskimaarin[counter]+ \"€/vuosi\"}</li>\n         <li class=\"list-group-item\"><small class=\"text-muted\">Kunnallisvero keskimäärin: </small> {kunnallisVeroKeskimaarin[counter]+ \"€/vuosi\"}</li>\n         </ul>\n\n         </ul>\n\n         </div>\n         </div>\n\n\n         <div class=\"row\">\n    <div class=\"col jumbotron\">\n      <li class=\"list-group-item\"><small class=\"text-muted\">Toimialoja eniten: </small> {enitenTulostus} \n                                  <small class=\"text-muted\"> Toimialan päästöt: </small>{enitenPaastot} </li>\n      <li class=\"list-group-item\"><small class=\"text-muted\">Toimialoja toiseksi eniten: </small> {toiseksiEnitenTulostus} \n                                  <small class=\"text-muted\"> Toimialan päästöt: </small> {toiseksiPaastot} </li>\n      <li class=\"list-group-item\"><small class=\"text-muted\">3: </small> {kolmasTulostus} \n                                  <small class=\"text-muted\"> Toimialan päästöt: </small> {kolmasPaastot} </li>\n      <li class=\"list-group-item\"><small class=\"text-muted\">4: </small> {neljasTulostus} \n                                  <small class=\"text-muted\"> Toimialan päästöt: </small> {neljasPaastot} </li>\n      <li class=\"list-group-item\"><small class=\"text-muted\">5: </small> {viidesTulostus} \n                                  <small class=\"text-muted\"> Toimialan päästöt: </small> {viidesPaastot} </li>\n    </div>\n    \n  </div>\n\n     </div>\n\n     \n\n\n     </div>\t\t\n   </div>\n )\n\n \n\n  \n }\n\nReactDOM.render(\n  React.createElement(App, null),\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}