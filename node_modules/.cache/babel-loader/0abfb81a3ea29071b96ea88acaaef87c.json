{"ast":null,"code":"import _slicedToArray from \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport data from \"./kuntienavainluvut1\";\nimport './App.css';\nimport datavaakunat from \"./vaakunaKuvat\";\nimport dataverot from \"./verotietoja\";\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\";\nimport ToimialatValilehti from './toimialat';\nimport dataPaastot from \"./paastotToimialoittain\";\nimport dataToimialojenVerot from \"./toimialojenVerot2\"; //console.log(dataPaastot)\n//console.log(dataToimialojenVerot)\n\nconst lukupilkuilla = x => {\n  if (x === undefined) return \"Ei tiedossa\";else return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n}; // objektilista kuntien nimistä\n\n\nconst kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label; // objektilista asukasluvuista\n\nconst pktiedot = data.dataset.value; // objektilista kuntien indekseistä\n\nconst kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index; // vuodet 2005-2017 taulukossa indeksistä 0 alkaen\n\nconst veroTietojenVuodet = Object.keys(dataverot.dataset.dimension.Vuosi.category.label); // objektilista verotietoihin koskevista kategorioista\n\nconst verokategoriat = dataverot.dataset.dimension.Tiedot.category.label; // verotiedot taulukossa\n\nconst verotiedot = dataverot.dataset.value; // lista eri toimialoista\n//const toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label\n// toimialojen määrät taulukossa\n\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value; // toimialat ja niitä vastaavat indeksit\n\nconst toimialatJaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category;\n/** Parsii paikkakuntadataa omiin taulukoihin sarakenumeron perusteella.\n* @param {number} sarakeNro Paikkakuntadatan sarakenumero; kuntien as. luvut: 0, väkiluvunmuutokset: 1, työasteet: 2, työpaikkojen lkm: 3.\n* @returns Taulukko haluttua paikkakuntadataa\n*/\n\nfunction luoPKtaulukko(sarakeNro) {\n  var taulukko = [];\n\n  for (let i = sarakeNro, j = 0; i < pktiedot.length; i += 4, j++) {\n    taulukko[j] = pktiedot[i];\n  }\n\n  return taulukko;\n}\n/** Parsii verotiedot omaan taulukkoon sarakenumeron perusteella\n* @param {number} sarakeNro Verodatan sarakenumero; tulonsaajat: 0, veronalaiset tulot keskimäär: 1, ansiotulot km: 2, verot yhteensä km: 3,\n*                                                   valtion vero km: 4, kunnallisvero km: 5.\n* @returns Taulukko haluttua verodataa\n*/\n\n\nfunction luoVeroTaulukko(sarakeNro) {\n  var taulukko = [];\n  const solujenLkmPerVuosi = Object.keys(kuntienNimet).length * Object.keys(verokategoriat).length;\n  var verodata2017indeksi = (veroTietojenVuodet.length - 1) * solujenLkmPerVuosi;\n\n  for (let i = verodata2017indeksi + sarakeNro, j = 0; i < solujenLkmPerVuosi * veroTietojenVuodet.length; i += 6, j++) {\n    taulukko[j] = verotiedot[i];\n  }\n\n  return taulukko;\n}\n/** Parsii sovelluksessa valitun kunnan toimialatiedot yhteen taulukkoon.\n* Toimialojen määrät -datasetistä lasketaan oikea aloitusindeksi kunnan indeksin avulla.\n* @param {number} kunnanIndeksi Käyttäjän valitseman kunnan indeksi (koko maan toimialat indeksissä 0)\n* @param {list} toimialat Lista kaikista toimialoista\n* @returns Valitun kunnan toimialojen lukumäärät taulukossa\n*/\n\n\nfunction parsiKunnanToimialat(kunnanIndeksi, toimialat) {\n  var toimialojenLkm = Object.keys(toimialat).length;\n  var kunnanToimialojenLkmt = [];\n  var alkuindeksi = kunnanIndeksi * toimialojenLkm; //var alkuindeksi2;\n  //console.log(\"kunnani: \" + kunnanIndeksi)\n  //console.log(\"alkui: \" + alkuindeksi2)\n  //if (kunnanIndeksi == 1) alkuindeksi2 = 7 * toimialojenLkm\n  //else if (kunnanIndeksi > 1  && kunnanIndeksi < 8 ) alkuindeksi2 = alkuindeksi - toimialojenLkm\n  //else alkuindeksi2 = alkuindeksi\n  //console.log(\"alkui: \" + alkuindeksi2)\n\n  for (let i = alkuindeksi; i < alkuindeksi + toimialojenLkm; i++) {\n    kunnanToimialojenLkmt.push(toimialojenMaarat[i]);\n  }\n\n  return kunnanToimialojenLkmt;\n}\n/** Etsii toimialan indeksin, jota löytyy eniten valitusta kunnasta.\n* Ohittaa parametrina annetun alkion ja sitä suuremmat, jotta funktiota voi käyttää myös\n* toiseksi suurimman etsintään (jne).\n* @param {list} tAlaNimet Toimialojen nimet järjestetyssä listassa\n* @param {array} tAlaLkm Valitun kunnan toimialojen lukumäärät taulukossa\n* @param {number} ohita Alkion indeksi, joka ja jota suuremmat ohitetaan\n* @returns Suurimman alkion indeksi, pl. ohitetut alkiot\n*/\n\n/*function etsiSuurimmanI(tAlaNimet, tAlaLkm, ohita) {\n  //console.log(tAlaNimet)\n  let suurin = -1\n  let suurimmanI = ohita\n  for (let i = 0; i < tAlaLkm.length; i++) {\n    if (tAlaLkm[i] > tAlaLkm[ohita] || i === ohita) continue;\n    if (tAlaLkm[i] > suurin) {\n      let s = tAlaNimet[i]\n      let alkutunnus = s.substr(0, s.indexOf(' ')).trim()\n      //console.log(alkutunnus)\n      //console.log(isNaN(parseInt(alkutunnus)))\n      if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue\n      //console.log(alkutunnus)\n      suurin = tAlaLkm[i]\n      suurimmanI = i\n      //console.log(\"suurin: \" + suurin)\n    }\n  }\n  return suurimmanI\n\n}*/\n\n/** Muotoilee ja palauttaa merkkijonona annettua indeksiä vastaavan toimialan \n* nimen ja lukumäärän.\n* @param {list} toimialojenNimet Toimialat ja niiden indeksit listassa avain-arvo pareina.\n* @param {array} toimialojenLkm Valitun kunnan toimialojen lukumäärät taulukossa.\n* @param {number} i Toimialan indeksi\n* @returns Merkkijono muotoa \"[toimialan nimi] : [toimialan lkm valitussa kunnassa]\"\n*/\n\n/*function tulostaToimialat(toimialojenNimet, toimialojenLkm, i) {\n  //console.log(eniten)\n  //let suurin = 0;\n  //let toiseksiSuurin = etsiSuurin(toimialojenLkm, suurin)\n  //let kolmas = etsiSuurin(toimialojenLkm, toiseksiSuurin)\n\n  //let suurimmanIndeksi = toimialojenLkm.indexOf(eniten)\n  //let indeksi2 = toimialojenLkm.indexOf(toiseksiSuurin)\n  //console.log(suurimmanIndeksi)\n  //console.log(suurin)\n  //console.log(toiseksiSuurin)\n  //console.log(kolmas)\n  let s = toimialojenNimet[i] + \" : \" + toimialojenLkm[i]\n  return s.substr(s.indexOf(' ') + 1).trim()\n  //return toimialojenNimet[i] + \" : \" + toimialojenLkm[i] + \" \"\n}*/\n\n/** Järjestää annetun datasetin indeksien perusteella suuruusjärjestykseen.\n* @param {list} datasetti Lista-pari labeleista ja indekseistä\n* @returns Avain-arvo lista indekseistä ja labeleista\n*/\n\n\nfunction jarjestaIndekseittain(datasetti) {\n  var labelit = [];\n\n  for (let x in datasetti.label) {\n    labelit.push(datasetti.label[x]);\n  }\n\n  var indeksit = [];\n\n  for (let x in datasetti.index) {\n    indeksit.push(datasetti.index[x]);\n  }\n\n  var labelitJaIndeksit = {};\n\n  for (let i = 0; i < Object.keys(datasetti.label).length; i++) {\n    let avain = indeksit[i];\n    let arvo = labelit[i];\n    labelitJaIndeksit[avain] = arvo;\n  } //toimialat ja niiden indeksit avain-arvo pareina listassa\n\n\n  let jarjestetty = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(labelitJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = labelitJaIndeksit[key];\n  });\n  return jarjestetty;\n}\n/** Parsii jokaisen toimialan päästöt tietyltä vuodelta.\n* @param {number} vuodenIndeksi Halutun vuoden indeksi, alkaen 0: 2008, 1: 2009, 2:2010 etc.\n* @returns Taulukko toimialojen päästöarvoista (pelkät arvot)\n*/\n\n\nfunction parsiPaastotVuodelta(vuodenIndeksi) {\n  var paastoTaulukko = dataPaastot.dataset.value;\n  let toimialojenLkm = Object.keys(dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category.label).length;\n  var vuodenPaastot = [];\n  let alkuindeksi = vuodenIndeksi * toimialojenLkm;\n\n  for (let i = alkuindeksi; i < alkuindeksi + toimialojenLkm; i++) {\n    vuodenPaastot.push(paastoTaulukko[i]);\n  }\n\n  return vuodenPaastot;\n}\n/** Etsii indeksiä vastaavan toimialan päästöarvon, ja laskee toimialan keskimääräiset päästöt\n* valitussa kunnassa.\n* @param {list} toimialat Lista toimialoista ja niiden indekseistä avain-arvo pareina\n* @param {list} toimialojenPaastot Lista-pari toimialojen päästöistä ja niiden indekseistä\n* @param {array} toimialojenLkmSuomessa Taulukko toimialojen lukumääristä koko suomessa\n* @param {array} toimialojenLkmKunnalla Taulukko toimialojen lukumääristä käyttäjän valitsemassa kunnassa\n* @param {number} i Indeksi jolla valitaan haluttu toimiala\n* @returns Toimialan keskimääräiset päästöt kunnassa, NaN jos ei saatavilla\n*/\n\n\nfunction etsiPaastot(toimialojenPaastot, toimialatJaLkmtSuomessa, toimialaJaLkm) {\n  //console.log(toimialojenLkmKunnalla)\n  let toimialanLkmSuomessa; //let toimialanLkmKunnassa = toimialanLkmKunnalla[i]\n  //console.log(\"asd: \" +  toimialanLkmKunnassa)\n\n  let toimiala = toimialaJaLkm.toimiala; //console.log(toimiala)\n\n  let alkutunnus = toimiala.substr(0, toimiala.indexOf(' ')).trim();\n\n  for (let i = 0; i < toimialatJaLkmtSuomessa.length; i++) {\n    let tAla = toimialatJaLkmtSuomessa[i].toimiala;\n    let s = tAla.substr(0, tAla.indexOf(' ')).trim();\n    if (alkutunnus === s) toimialanLkmSuomessa = toimialatJaLkmtSuomessa[i].lkm;\n  }\n\n  let toimialanPaastot = toimialojenPaastot[alkutunnus]; //console.log(alkutunnus + \" : \" + toimialanPaastot)\n\n  let toimialanPaastotKM = toimialanPaastot / toimialanLkmSuomessa; //console.log(alkutunnus + \" : \" + toimialanPaastotKM)\n  //console.log(alkutunnus + \" : \" + toimialanLkmSuomessa)\n\n  let kokonaisPaastotKunnassa = toimialanPaastotKM * toimialaJaLkm.lkm; //console.log(alkutunnus + \" : \" + kokonaisPaastotKunnassa)\n  //console.log(kokonaisPaastotKunnassa)\n  //console.log(\"asdf: \" +  kokonaisPaastotKunnassa)\n\n  return kokonaisPaastotKunnassa;\n}\n/** Etsii indeksiä vastaavan toimialan verotiedot, ja laskee toimialan keskimääräiset verotulot\n* valitussa kunnassa.\n* @param {list} toimialat Lista toimialoista ja niiden indekseistä avain-arvo pareina\n* @param {array} toimialojenLkmKunnalla Taulukko toimialojen lukumääristä käyttäjän valitsemassa kunnassa\n* @param {number} i Indeksi jolla valitaan haluttu toimiala\n* @returns Toimialan keskimääräiset veromaksut kunnassa, NaN jos ei saatavilla\n*/\n\n\nfunction etsiVerot(toimialaJaLkmKunnalla, kokoSuomenToimialatJaLkmt) {\n  let toimialanLkmSuomessa;\n  let toimiala = toimialaJaLkmKunnalla.toimiala;\n  let alkutunnus = toimiala.substr(0, toimiala.indexOf(' ')).trim();\n\n  for (let i = 0; i < kokoSuomenToimialatJaLkmt.length; i++) {\n    let tAla = kokoSuomenToimialatJaLkmt[i].toimiala;\n    let s = tAla.substr(0, tAla.indexOf(' ')).trim();\n    if (alkutunnus === s) toimialanLkmSuomessa = kokoSuomenToimialatJaLkmt[i].lkm;\n  }\n\n  const veroToimialat = dataToimialojenVerot.dataset.dimension.Toimiala.category;\n  let toimialojenLkm = Object.keys(veroToimialat.label).length;\n  let toimialojenVeroarvot = dataToimialojenVerot.dataset.value;\n  let vuoden2017Indeksi = 3;\n  let solujenLkmPerToimiala = 2;\n  let aloitusindeksi2017 = toimialojenLkm * vuoden2017Indeksi * solujenLkmPerToimiala;\n  let toimialojenVerot2017 = [];\n\n  for (let j = aloitusindeksi2017; j < aloitusindeksi2017 + toimialojenLkm; j++) {\n    toimialojenVerot2017.push(toimialojenVeroarvot[j]);\n  } //console.log(veroToimialat.index[alkutunnus])\n\n\n  let valitunToimialanIndeksi = aloitusindeksi2017 + veroToimialat.index[alkutunnus] * solujenLkmPerToimiala; //console.log(valitunToimialanIndeksi)\n\n  let toimialanVerotYhteensa = toimialojenVeroarvot[valitunToimialanIndeksi];\n  let toimialanVerotKM = toimialanVerotYhteensa / toimialanLkmSuomessa; //console.log(alkutunnus + \" : \" + toimialanVerotKM)\n\n  let toimialanLkm = toimialaJaLkmKunnalla.lkm; //console.log(alkutunnus + \" : \" + toimialanLkm)\n\n  let toimialanVerotPerKunta = toimialanLkm * toimialanVerotKM; //console.log(toimialanVerotPerKunta)\n\n  return toimialanVerotPerKunta;\n}\n\nfunction laskeSuhdeluvut(toimialatYhteensaKunnassa, toimialatJaLkmPerKunta, toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialatJaLkmt) {\n  //var indeksi; //etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, -1)\n  var paastot; //= etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi)\n\n  var verot; //= etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi)\n  // var ohita = -1;\n\n  var suhdeluvut = [];\n  var suhdelukuKokoSuomi = -1; //jos suhdelukua ei voi laskea\n  //let toimialatYhteensaKunnassa = kunnantoimialat[0]\n  //console.log(kunnantoimialat)\n\n  for (let i = 0; i < toimialatJaLkmPerKunta.length; i++) {\n    let suhdelukuKunta = -1; //indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, ohita)\n    //console.log(toimiAlatJarj[indeksi])\n\n    let toimialanLkmKunnassa = toimialatJaLkmPerKunta[i].lkm;\n    let toimialanOsuusPerKunta = toimialanLkmKunnassa / toimialatYhteensaKunnassa; //console.log(\"indeksi\" + indeksi)\n\n    paastot = etsiPaastot(TAtunnuksetJaPaastoarvot, kokoSuomenToimialatJaLkmt, toimialatJaLkmPerKunta[i]); //console.log(toimialatJaLkmPerKunta)\n\n    verot = etsiVerot(toimialatJaLkmPerKunta[i], kokoSuomenToimialatJaLkmt); //console.log(verot)\n\n    if (!isNaN(paastot) && !isNaN(verot) && paastot > 0) {\n      suhdelukuKokoSuomi = verot / paastot;\n      suhdelukuKunta = suhdelukuKokoSuomi * toimialanOsuusPerKunta;\n    } //console.log(suhdeluku)\n\n    /*if (suhdeluku < 0){\n      ohita = indeksi\n      continue;\n    }*/\n\n\n    suhdeluvut.push({\n      toimiala: toimialatJaLkmPerKunta[i].toimiala,\n      suhde: suhdelukuKunta\n    }); //ohita = indeksi\n  } //console.log(suhdeluvut)\n\n\n  let suhdeluvutJarj = suhdeluvut.sort(function (a, b) {\n    return b.suhde - a.suhde;\n  }); //console.log(suhdeluvutJarj)\n\n  return suhdeluvutJarj;\n}\n\nfunction luoToimialatJaLkmt(toimialojenNimet, toimialojenLkmt) {\n  //console.log(toimialojenNimet)\n  //console.log(toimialojenLkmt)\n  let toimialatJaLkmt = [];\n\n  for (let i = 0; i < toimialojenLkmt.length; i++) {\n    let s = toimialojenNimet[i];\n    let alkutunnus = s.substr(0, s.indexOf(' ')).trim(); //console.log(alkutunnus)\n    //console.log(isNaN(parseInt(alkutunnus)))\n\n    if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue;\n    toimialatJaLkmt.push({\n      toimiala: toimialojenNimet[i],\n      lkm: toimialojenLkmt[i]\n    });\n  }\n\n  let jarjestetty = toimialatJaLkmt.sort(function (a, b) {\n    return b.lkm - a.lkm;\n  }); //console.log(toimialatJaLkmt)\n\n  return jarjestetty;\n}\n\nconst App = () => {\n  const _useState = useState('paikkakunnat'),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const toPage = page => event => {\n    event.preventDefault();\n    setPage(page);\n  };\n\n  const content = () => {\n    if (page === 'paikkakunnat') {\n      return React.createElement(Paikkakunnat, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      });\n    } else if (page === 'toimialat') {\n      return React.createElement(ToimialatValilehti, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row justify-content-md-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('paikkakunnat'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, \"Paikkakunnat\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('toimialat'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, \"Toimialat\"))), content());\n}; //HUOM PAIKKAKUNNAT\n//KOMPONENTTI JOKA piirtää PAIKKAKUNNAT sivulle kaiken\n\n\nconst Paikkakunnat = () => {\n  const _useState3 = useState('tietoja'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        page = _useState4[0],\n        setPage = _useState4[1];\n\n  const toPage = page => event => {\n    event.preventDefault();\n    setPage(page);\n  };\n\n  const content = () => {\n    if (page === 'tietoja') {\n      return React.createElement(Tietoja, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      });\n    } else if (page === 'suhdeluku') {\n      return React.createElement(Suhdeluku, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      });\n    }\n  }; // State joka pitää muistissa indeksiä \n\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        counter = _useState6[0],\n        setCounter = _useState6[1];\n\n  const setToValue = value => setCounter(value); //paikkakuntatiedot parsittuna omiin taulukkoihin\n\n\n  var kuntienAsLuvut = luoPKtaulukko(0);\n  var vlMuutokset = luoPKtaulukko(1);\n  var tyoAsteet = luoPKtaulukko(2);\n  var tpLukumaarat = luoPKtaulukko(3);\n  const vaakunat = datavaakunat.selection1;\n  var nimiTaulukko = [];\n  var kuntienIit = []; //var vaakunaTaulukko = [];\n  // kuntien nimet taulukkoon\n\n  for (var x in kuntienNimet) {\n    nimiTaulukko.push(kuntienNimet[x]);\n  }\n\n  var toimialojenNimet = [];\n\n  for (let x in toimialatJaIndeksit.label) {\n    toimialojenNimet.push(toimialatJaIndeksit.label[x]);\n  }\n\n  var toimialojenIndeksit = [];\n\n  for (let x in toimialatJaIndeksit.index) {\n    toimialojenIndeksit.push(toimialatJaIndeksit.index[x]);\n  }\n\n  var toimiAJaI = {};\n\n  for (let i = 0; i < toimialojenNimet.length; i++) {\n    let avain = toimialojenIndeksit[i];\n    let arvo = toimialojenNimet[i];\n    toimiAJaI[avain] = arvo;\n  } //toimialat ja niiden indeksit avain-arvo pareina listassa\n\n\n  const toimiAlatJarj = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(toimiAJaI).sort().forEach(function (key) {\n    toimiAlatJarj[key] = toimiAJaI[key];\n  });\n  var toimialatYlaotsikot = [];\n\n  for (let i = 0; i < Object.keys(toimiAlatJarj).length; i++) {\n    let tAla = toimiAlatJarj[i];\n    let alkutunnus = tAla.substr(0, tAla.indexOf(' ')).trim();\n    if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue;\n    toimialatYlaotsikot.push(toimiAlatJarj[i]);\n  } //console.log(toimialatYlaotsikot)\n\n\n  var paastotToimialat = dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category; //var toimialatJaTunnukset = paastotToimialat.label\n\n  var paastojenToimialatJarj = jarjestaIndekseittain(paastotToimialat);\n  var paastotToimialoittain2008 = parsiPaastotVuodelta(0);\n  var TAtunnuksetJaPaastoarvot = {};\n\n  for (let i = 0; i < Object.keys(paastojenToimialatJarj).length; i++) {\n    let s = paastojenToimialatJarj[i];\n    let avain = s.substr(0, s.indexOf(' ')).trim();\n    let arvo = paastotToimialoittain2008[i];\n    TAtunnuksetJaPaastoarvot[avain] = arvo;\n  } //console.log(TAtunnuksetJaPaastoarvot)\n\n\n  var kokoSuomenToimialojenLkmt = parsiKunnanToimialat(0, toimiAlatJarj);\n  var kokoSuomenToimialatJaLkmt = luoToimialatJaLkmt(toimiAlatJarj, kokoSuomenToimialojenLkmt); //console.log(kokoSuomenToimialatJaLkmt)\n  //console.log(toimiAlatJarj)\n  // käyttäjän valitseman kunnan toimialatiedot taulukossa \n\n  var kunnantoimialat = parsiKunnanToimialat(counter, toimiAlatJarj);\n  var toimialatJaLkmPerKunta = luoToimialatJaLkmt(toimiAlatJarj, kunnantoimialat); //console.log(kunnantoimialat)\n\n  var kunnanSuhdeluvut = laskeSuhdeluvut(kunnantoimialat[0], toimialatJaLkmPerKunta, toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialatJaLkmt); //console.log(kunnanSuhdeluvut)\n  // kuntien indeksit taulukkoon\n\n  for (let x in kuntienIndeksit) {\n    kuntienIit.push(kuntienIndeksit[x]);\n  }\n\n  var avain;\n  var arvo;\n  var nimetJaIndeksit = {}; // valintalista kunnista, indeksöi samalla 0->n\n  // kuntien nimet ja indeksit mapitettuna yhteen objektilistaan\n\n  for (var i = 0; i < nimiTaulukko.length; i++) {\n    avain = kuntienIit[i];\n    arvo = nimiTaulukko[i];\n    nimetJaIndeksit[avain] = arvo;\n  }\n\n  const jarjestetty = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(nimetJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = nimetJaIndeksit[key];\n  }); // Kuntien nimien erotus järjestetystä objektilistasta taulukkoon\n\n  var nimetJarjestyksessa = [];\n\n  for (let x in jarjestetty) {\n    nimetJarjestyksessa.push(jarjestetty[x]);\n  } // verotiedot parsittuna omiin taulukoihin\n\n\n  var tulonsaajat = luoVeroTaulukko(0);\n  var veronalaisetTulotKeskimaarin = luoVeroTaulukko(1);\n  var ansioTulotKeskimaarin = luoVeroTaulukko(2);\n  var verotYhteensaKeskimaarin = luoVeroTaulukko(3);\n  var valtionVeroKeskimaarin = luoVeroTaulukko(4);\n  var kunnallisVeroKeskimaarin = luoVeroTaulukko(5); // Hakutoiminto, ottaa inputista valuen ja vertaa sitä selectin valueihin\n  // piilottaa valuet, jotka eivät vastaa hakusanaa\n\n  var select;\n  var haettava;\n\n  const etsiPaikkakunta = hakusana => {\n    haettava = hakusana.target.value;\n    select = document.getElementById(\"listaKunnista\");\n\n    for (var i = 0; i < select.length; i++) {\n      var txt = select[i].text;\n      var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n      select.options[i].style.display = include ? '' : 'none';\n    }\n  }; //var asukasLukuI;\n\n\n  var listaI; // ottaa selectistä valuen ja asettaa sen countteriin\n\n  const tulosta = listaValittu => {\n    listaI = listaValittu.target.value;\n    setToValue(listaI);\n  }; // asukasluvut löytyvät taulukosta neljän indeksin välein ([0,4,8,...])\n\n\n  var asukaslukuInd = 0; //alustetaan muuttujat\n\n  var paastot;\n  var verot;\n  var monesko;\n  var monesko2;\n  var lista;\n  var tulostus; //console.log(toimiAlatJarj)\n\n  function alustaMuuttujat() {\n    //indeksi //= etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, -1)\n    //paastot //= etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi)\n    //verot //= etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi)\n    monesko = \"\";\n    monesko2 = 1;\n    lista = []; //tulostus = //tulostaToimialat(toimiAlatJarj, kunnantoimialat, indeksi)\n  }\n\n  const Tietoja = () => {\n    alustaMuuttujat();\n\n    for (i = 0; i < toimialatJaLkmPerKunta.length; i++) {\n      if (toimialatJaLkmPerKunta[i].lkm === 0) break; //indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, ohita)\n\n      paastot = etsiPaastot(TAtunnuksetJaPaastoarvot, kokoSuomenToimialatJaLkmt, toimialatJaLkmPerKunta[i]);\n      verot = etsiVerot(toimialatJaLkmPerKunta[i], kokoSuomenToimialatJaLkmt);\n      let s = toimialatJaLkmPerKunta[i].toimiala + \" : \" + toimialatJaLkmPerKunta[i].lkm;\n      tulostus = s.substr(s.indexOf(' ') + 1).trim();\n\n      if (!isNaN(paastot)) {\n        paastot = paastot.toFixed(0) + \" tonnia kasvihuonekaasuja/vuosi\";\n        verot = verot.toFixed(0) + \"€/vuosi\";\n      } else {\n        paastot = \"Päästötietoja ei saatavilla\";\n        verot = verot.toFixed(0) + \"€/vuosi\";\n      } //ohita = indeksi\n\n\n      lista.push(React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }, \"Toimialoja \", monesko, \" eniten: \"), \" \", tulostus, React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }, \" kpl\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }), \" \", React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }, \"Toimialan p\\xE4\\xE4st\\xF6t kunnalla keskim\\xE4\\xE4rin: \"), paastot, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660\n        },\n        __self: this\n      }), \" \", React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660\n        },\n        __self: this\n      }, \"Toimialan verot kunnalla keskim\\xE4\\xE4rin: \"), lukupilkuilla(verot)));\n      monesko2++;\n      monesko = monesko2 + \".\";\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670\n      },\n      __self: this\n    }, lista);\n  };\n\n  const Suhdeluku = () => {\n    monesko = \"\";\n    monesko2 = 1;\n    lista = [];\n\n    for (let i = 0; i < kunnanSuhdeluvut.length; i++) {\n      if (kunnanSuhdeluvut[i].suhde < 0) break;\n      /*indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, ohita)\n      paastot = etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi)\n      verot = etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi)*/\n\n      let s = kunnanSuhdeluvut[i].toimiala;\n      tulostus = s.substr(s.indexOf(' ') + 1).trim();\n      lista.push(React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696\n        },\n        __self: this\n      }, monesko, \" Paras hy\\xF6tysuhde: \"), \" \", tulostus, React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }, \" Suhdeluku: \"), kunnanSuhdeluvut[i].suhde, \" \"));\n      monesko2++;\n      monesko = monesko2 + \".\"; //ohita = indeksi\n    }\n\n    console.log(\"jaa\", kunnanSuhdeluvut); //console.log(suhdeluvutJarj)\n    //alustaMuuttujat();\n    //console.log(lista)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718\n      },\n      __self: this\n    }, lista);\n  };\n\n  return (// Bootstrapin pääcontainer\n    React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"search\",\n      name: \"search\",\n      placeholder: \"Hae...\",\n      onKeyUp: etsiPaikkakunta,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736\n      },\n      __self: this\n    })), React.createElement(\"select\", {\n      id: \"listaKunnista\",\n      className: \"form-control\",\n      size: \"30\",\n      onChange: tulosta,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739\n      },\n      __self: this\n    }, nimetJarjestyksessa.map(s => React.createElement(\"option\", {\n      value: asukaslukuInd++,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741\n      },\n      __self: this\n    }, s)))), React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tiedotheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757\n      },\n      __self: this\n    }, nimetJarjestyksessa[counter]), React.createElement(\"img\", {\n      src: vaakunat[counter].image,\n      alt: \"new\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      class: \"list-group list-group-horizontal list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767\n      },\n      __self: this\n    }, \"Kunnan asukasluku: \"), kuntienAsLuvut[counter]), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768\n      },\n      __self: this\n    }, \"V\\xE4kiluvun muutos edellisest\\xE4 vuodesta: \"), \" \", vlMuutokset[counter] + \"%\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769\n      },\n      __self: this\n    }, \"Ty\\xF6llisyysaste: \"), \" \", tyoAsteet[counter] + \"%\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770\n      },\n      __self: this\n    }, \"Ty\\xF6paikkojen lukum\\xE4\\xE4r\\xE4: \"), \" \", tpLukumaarat[counter]), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771\n      },\n      __self: this\n    }, \"Tulonsaajia: \"), \" \", tulonsaajat[counter])), React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776\n      },\n      __self: this\n    }, \"Veronalaiset tulot keskim\\xE4\\xE4rin: \"), \" \", veronalaisetTulotKeskimaarin[counter], React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776\n      },\n      __self: this\n    }, \" \\u20AC/vuosi \"), \" \"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777\n      },\n      __self: this\n    }, \"Ansiotulot keskim\\xE4\\xE4rin: \"), \" \", ansioTulotKeskimaarin[counter], React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777\n      },\n      __self: this\n    }, \" \\u20AC/vuosi \")), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778\n      },\n      __self: this\n    }, \"Verot yhteens\\xE4 keskim\\xE4\\xE4rin: \"), \" \", verotYhteensaKeskimaarin[counter], React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778\n      },\n      __self: this\n    }, \" \\u20AC/vuosi \")), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779\n      },\n      __self: this\n    }, \"Valtionvero keskim\\xE4\\xE4rin: \"), \" \", valtionVeroKeskimaarin[counter], React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779\n      },\n      __self: this\n    }, \" \\u20AC/vuosi \")), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780\n      },\n      __self: this\n    }, \"Kunnallisvero keskim\\xE4\\xE4rin: \"), \" \", kunnallisVeroKeskimaarin[counter], React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780\n      },\n      __self: this\n    }, \" \\u20AC/vuosi \")))))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn-group btn-group-sm pikkunapit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"aria-pressed\": \"true\",\n      onClick: toPage('tietoja'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794\n      },\n      __self: this\n    }, \"Tietoja\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"aria-pressed\": \"true\",\n      onClick: toPage('suhdeluku'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795\n      },\n      __self: this\n    }, \"Hy\\xF6tysuhteet\")), React.createElement(\"div\", {\n      class: \"oikeala\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798\n      },\n      __self: this\n    }, content()))))))\n  );\n};\n\nReactDOM.render(React.createElement(App, null), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tuomo/PROJEKTITYÖ/ryhmatyo/tklaskuri/src/index.js"],"names":["React","useState","ReactDOM","data","datavaakunat","dataverot","datatoimialatKunnittain","ToimialatValilehti","dataPaastot","dataToimialojenVerot","lukupilkuilla","x","undefined","toString","replace","kuntienNimet","dataset","dimension","category","label","pktiedot","value","kuntienIndeksit","index","veroTietojenVuodet","Object","keys","Vuosi","verokategoriat","Tiedot","verotiedot","toimialojenMaarat","toimialatJaIndeksit","Toimiala2008","luoPKtaulukko","sarakeNro","taulukko","i","j","length","luoVeroTaulukko","solujenLkmPerVuosi","verodata2017indeksi","parsiKunnanToimialat","kunnanIndeksi","toimialat","toimialojenLkm","kunnanToimialojenLkmt","alkuindeksi","push","jarjestaIndekseittain","datasetti","labelit","indeksit","labelitJaIndeksit","avain","arvo","jarjestetty","sort","forEach","key","parsiPaastotVuodelta","vuodenIndeksi","paastoTaulukko","vuodenPaastot","etsiPaastot","toimialojenPaastot","toimialatJaLkmtSuomessa","toimialaJaLkm","toimialanLkmSuomessa","toimiala","alkutunnus","substr","indexOf","trim","tAla","s","lkm","toimialanPaastot","toimialanPaastotKM","kokonaisPaastotKunnassa","etsiVerot","toimialaJaLkmKunnalla","kokoSuomenToimialatJaLkmt","veroToimialat","Toimiala","toimialojenVeroarvot","vuoden2017Indeksi","solujenLkmPerToimiala","aloitusindeksi2017","toimialojenVerot2017","valitunToimialanIndeksi","toimialanVerotYhteensa","toimialanVerotKM","toimialanLkm","toimialanVerotPerKunta","laskeSuhdeluvut","toimialatYhteensaKunnassa","toimialatJaLkmPerKunta","toimiAlatJarj","TAtunnuksetJaPaastoarvot","paastot","verot","suhdeluvut","suhdelukuKokoSuomi","suhdelukuKunta","toimialanLkmKunnassa","toimialanOsuusPerKunta","isNaN","suhde","suhdeluvutJarj","a","b","luoToimialatJaLkmt","toimialojenNimet","toimialojenLkmt","toimialatJaLkmt","parseInt","App","page","setPage","toPage","event","preventDefault","content","Paikkakunnat","counter","setCounter","setToValue","kuntienAsLuvut","vlMuutokset","tyoAsteet","tpLukumaarat","vaakunat","selection1","nimiTaulukko","kuntienIit","toimialojenIndeksit","toimiAJaI","toimialatYlaotsikot","paastotToimialat","paastojenToimialatJarj","paastotToimialoittain2008","kokoSuomenToimialojenLkmt","kunnantoimialat","kunnanSuhdeluvut","nimetJaIndeksit","nimetJarjestyksessa","tulonsaajat","veronalaisetTulotKeskimaarin","ansioTulotKeskimaarin","verotYhteensaKeskimaarin","valtionVeroKeskimaarin","kunnallisVeroKeskimaarin","select","haettava","etsiPaikkakunta","hakusana","target","document","getElementById","txt","text","include","toLowerCase","startsWith","options","style","display","listaI","tulosta","listaValittu","asukaslukuInd","monesko","monesko2","lista","tulostus","alustaMuuttujat","Tietoja","toFixed","Suhdeluku","console","log","map","image","render","createElement"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom'\nimport data from \"./kuntienavainluvut1\";\nimport './App.css';\nimport datavaakunat from \"./vaakunaKuvat\"\nimport dataverot from \"./verotietoja\"\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\"\nimport ToimialatValilehti from './toimialat'\nimport dataPaastot from \"./paastotToimialoittain\"\nimport dataToimialojenVerot from \"./toimialojenVerot2\"\n\n//console.log(dataPaastot)\n//console.log(dataToimialojenVerot)\n\n\nconst lukupilkuilla = (x) => {\n  if (x === undefined) return \"Ei tiedossa\";\n  else return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n}\n\n\n// objektilista kuntien nimistä\nconst kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label\n// objektilista asukasluvuista\nconst pktiedot = data.dataset.value\n// objektilista kuntien indekseistä\nconst kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index\n// vuodet 2005-2017 taulukossa indeksistä 0 alkaen\nconst veroTietojenVuodet = Object.keys(dataverot.dataset.dimension.Vuosi.category.label)\n// objektilista verotietoihin koskevista kategorioista\nconst verokategoriat = dataverot.dataset.dimension.Tiedot.category.label\n// verotiedot taulukossa\nconst verotiedot = dataverot.dataset.value\n// lista eri toimialoista\n//const toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label\n// toimialojen määrät taulukossa\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value\n// toimialat ja niitä vastaavat indeksit\nconst toimialatJaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category\n\n\n\n\n/** Parsii paikkakuntadataa omiin taulukoihin sarakenumeron perusteella.\n* @param {number} sarakeNro Paikkakuntadatan sarakenumero; kuntien as. luvut: 0, väkiluvunmuutokset: 1, työasteet: 2, työpaikkojen lkm: 3.\n* @returns Taulukko haluttua paikkakuntadataa\n*/\nfunction luoPKtaulukko(sarakeNro) {\n  var taulukko = [];\n  for (let i = sarakeNro, j = 0; i < pktiedot.length; i += 4, j++) {\n    taulukko[j] = pktiedot[i];\n  }\n  return taulukko;\n}\n\n/** Parsii verotiedot omaan taulukkoon sarakenumeron perusteella\n* @param {number} sarakeNro Verodatan sarakenumero; tulonsaajat: 0, veronalaiset tulot keskimäär: 1, ansiotulot km: 2, verot yhteensä km: 3,\n*                                                   valtion vero km: 4, kunnallisvero km: 5.\n* @returns Taulukko haluttua verodataa\n*/\nfunction luoVeroTaulukko(sarakeNro) {\n  var taulukko = [];\n  const solujenLkmPerVuosi = Object.keys(kuntienNimet).length * Object.keys(verokategoriat).length\n  var verodata2017indeksi = (veroTietojenVuodet.length - 1) * solujenLkmPerVuosi\n\n  for (let i = verodata2017indeksi + sarakeNro, j = 0; i < solujenLkmPerVuosi * veroTietojenVuodet.length; i += 6, j++) {\n    taulukko[j] = verotiedot[i];\n  }\n  return taulukko;\n}\n\n/** Parsii sovelluksessa valitun kunnan toimialatiedot yhteen taulukkoon.\n* Toimialojen määrät -datasetistä lasketaan oikea aloitusindeksi kunnan indeksin avulla.\n* @param {number} kunnanIndeksi Käyttäjän valitseman kunnan indeksi (koko maan toimialat indeksissä 0)\n* @param {list} toimialat Lista kaikista toimialoista\n* @returns Valitun kunnan toimialojen lukumäärät taulukossa\n*/\nfunction parsiKunnanToimialat(kunnanIndeksi, toimialat) {\n\n  var toimialojenLkm = Object.keys(toimialat).length\n  var kunnanToimialojenLkmt = [];\n  var alkuindeksi = kunnanIndeksi * toimialojenLkm;\n  //var alkuindeksi2;\n  //console.log(\"kunnani: \" + kunnanIndeksi)\n  //console.log(\"alkui: \" + alkuindeksi2)\n  //if (kunnanIndeksi == 1) alkuindeksi2 = 7 * toimialojenLkm\n  //else if (kunnanIndeksi > 1  && kunnanIndeksi < 8 ) alkuindeksi2 = alkuindeksi - toimialojenLkm\n  //else alkuindeksi2 = alkuindeksi\n  //console.log(\"alkui: \" + alkuindeksi2)\n\n\n\n  for (let i = alkuindeksi; i < (alkuindeksi + toimialojenLkm); i++) {\n    kunnanToimialojenLkmt.push(toimialojenMaarat[i]);\n  }\n  return kunnanToimialojenLkmt;\n\n}\n\n/** Etsii toimialan indeksin, jota löytyy eniten valitusta kunnasta.\n* Ohittaa parametrina annetun alkion ja sitä suuremmat, jotta funktiota voi käyttää myös\n* toiseksi suurimman etsintään (jne).\n* @param {list} tAlaNimet Toimialojen nimet järjestetyssä listassa\n* @param {array} tAlaLkm Valitun kunnan toimialojen lukumäärät taulukossa\n* @param {number} ohita Alkion indeksi, joka ja jota suuremmat ohitetaan\n* @returns Suurimman alkion indeksi, pl. ohitetut alkiot\n*/\n/*function etsiSuurimmanI(tAlaNimet, tAlaLkm, ohita) {\n  //console.log(tAlaNimet)\n  let suurin = -1\n  let suurimmanI = ohita\n  for (let i = 0; i < tAlaLkm.length; i++) {\n    if (tAlaLkm[i] > tAlaLkm[ohita] || i === ohita) continue;\n    if (tAlaLkm[i] > suurin) {\n      let s = tAlaNimet[i]\n      let alkutunnus = s.substr(0, s.indexOf(' ')).trim()\n      //console.log(alkutunnus)\n      //console.log(isNaN(parseInt(alkutunnus)))\n      if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue\n      //console.log(alkutunnus)\n      suurin = tAlaLkm[i]\n      suurimmanI = i\n      //console.log(\"suurin: \" + suurin)\n    }\n  }\n  return suurimmanI\n\n}*/\n\n/** Muotoilee ja palauttaa merkkijonona annettua indeksiä vastaavan toimialan \n* nimen ja lukumäärän.\n* @param {list} toimialojenNimet Toimialat ja niiden indeksit listassa avain-arvo pareina.\n* @param {array} toimialojenLkm Valitun kunnan toimialojen lukumäärät taulukossa.\n* @param {number} i Toimialan indeksi\n* @returns Merkkijono muotoa \"[toimialan nimi] : [toimialan lkm valitussa kunnassa]\"\n*/\n/*function tulostaToimialat(toimialojenNimet, toimialojenLkm, i) {\n  //console.log(eniten)\n  //let suurin = 0;\n  //let toiseksiSuurin = etsiSuurin(toimialojenLkm, suurin)\n  //let kolmas = etsiSuurin(toimialojenLkm, toiseksiSuurin)\n\n  //let suurimmanIndeksi = toimialojenLkm.indexOf(eniten)\n  //let indeksi2 = toimialojenLkm.indexOf(toiseksiSuurin)\n  //console.log(suurimmanIndeksi)\n  //console.log(suurin)\n  //console.log(toiseksiSuurin)\n  //console.log(kolmas)\n  let s = toimialojenNimet[i] + \" : \" + toimialojenLkm[i]\n  return s.substr(s.indexOf(' ') + 1).trim()\n  //return toimialojenNimet[i] + \" : \" + toimialojenLkm[i] + \" \"\n}*/\n\n/** Järjestää annetun datasetin indeksien perusteella suuruusjärjestykseen.\n* @param {list} datasetti Lista-pari labeleista ja indekseistä\n* @returns Avain-arvo lista indekseistä ja labeleista\n*/\nfunction jarjestaIndekseittain(datasetti) {\n  var labelit = []\n  for (let x in datasetti.label) {\n    labelit.push(datasetti.label[x])\n  }\n\n  var indeksit = []\n  for (let x in datasetti.index) {\n    indeksit.push(datasetti.index[x])\n  }\n\n  var labelitJaIndeksit = {}\n  for (let i = 0; i < Object.keys(datasetti.label).length; i++) {\n    let avain = indeksit[i];\n    let arvo = labelit[i];\n    labelitJaIndeksit[avain] = arvo;\n  }\n\n  //toimialat ja niiden indeksit avain-arvo pareina listassa\n  let jarjestetty = {};\n  // objektilistan järjestys avainarvon eli indeksin mukaan\n  Object.keys(labelitJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = labelitJaIndeksit[key];\n  });\n  return jarjestetty\n\n}\n\n/** Parsii jokaisen toimialan päästöt tietyltä vuodelta.\n* @param {number} vuodenIndeksi Halutun vuoden indeksi, alkaen 0: 2008, 1: 2009, 2:2010 etc.\n* @returns Taulukko toimialojen päästöarvoista (pelkät arvot)\n*/\nfunction parsiPaastotVuodelta(vuodenIndeksi) {\n  var paastoTaulukko = dataPaastot.dataset.value\n  let toimialojenLkm = Object.keys(dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category.label).length\n  var vuodenPaastot = []\n  let alkuindeksi = vuodenIndeksi * toimialojenLkm\n\n  for (let i = alkuindeksi; i < alkuindeksi + toimialojenLkm; i++) {\n    vuodenPaastot.push(paastoTaulukko[i])\n  }\n  return vuodenPaastot\n\n}\n\n/** Etsii indeksiä vastaavan toimialan päästöarvon, ja laskee toimialan keskimääräiset päästöt\n* valitussa kunnassa.\n* @param {list} toimialat Lista toimialoista ja niiden indekseistä avain-arvo pareina\n* @param {list} toimialojenPaastot Lista-pari toimialojen päästöistä ja niiden indekseistä\n* @param {array} toimialojenLkmSuomessa Taulukko toimialojen lukumääristä koko suomessa\n* @param {array} toimialojenLkmKunnalla Taulukko toimialojen lukumääristä käyttäjän valitsemassa kunnassa\n* @param {number} i Indeksi jolla valitaan haluttu toimiala\n* @returns Toimialan keskimääräiset päästöt kunnassa, NaN jos ei saatavilla\n*/\nfunction etsiPaastot(toimialojenPaastot, toimialatJaLkmtSuomessa, toimialaJaLkm) {\n  //console.log(toimialojenLkmKunnalla)\n\n  let toimialanLkmSuomessa;\n  //let toimialanLkmKunnassa = toimialanLkmKunnalla[i]\n\n  //console.log(\"asd: \" +  toimialanLkmKunnassa)\n  let toimiala = toimialaJaLkm.toimiala\n  //console.log(toimiala)\n  let alkutunnus = toimiala.substr(0, toimiala.indexOf(' ')).trim()\n  for (let i = 0; i < toimialatJaLkmtSuomessa.length; i++){\n    let tAla = toimialatJaLkmtSuomessa[i].toimiala\n    let s = tAla.substr(0, tAla.indexOf(' ')).trim()\n    if (alkutunnus === s) toimialanLkmSuomessa = toimialatJaLkmtSuomessa[i].lkm\n  }\n  let toimialanPaastot = toimialojenPaastot[alkutunnus]\n  //console.log(alkutunnus + \" : \" + toimialanPaastot)\n  let toimialanPaastotKM = toimialanPaastot / toimialanLkmSuomessa\n  //console.log(alkutunnus + \" : \" + toimialanPaastotKM)\n  //console.log(alkutunnus + \" : \" + toimialanLkmSuomessa)\n  let kokonaisPaastotKunnassa = toimialanPaastotKM * toimialaJaLkm.lkm\n  //console.log(alkutunnus + \" : \" + kokonaisPaastotKunnassa)\n  //console.log(kokonaisPaastotKunnassa)\n  //console.log(\"asdf: \" +  kokonaisPaastotKunnassa)\n  return kokonaisPaastotKunnassa\n}\n\n/** Etsii indeksiä vastaavan toimialan verotiedot, ja laskee toimialan keskimääräiset verotulot\n* valitussa kunnassa.\n* @param {list} toimialat Lista toimialoista ja niiden indekseistä avain-arvo pareina\n* @param {array} toimialojenLkmKunnalla Taulukko toimialojen lukumääristä käyttäjän valitsemassa kunnassa\n* @param {number} i Indeksi jolla valitaan haluttu toimiala\n* @returns Toimialan keskimääräiset veromaksut kunnassa, NaN jos ei saatavilla\n*/\n\nfunction etsiVerot(toimialaJaLkmKunnalla, kokoSuomenToimialatJaLkmt) {\n  let toimialanLkmSuomessa;\n  let toimiala = toimialaJaLkmKunnalla.toimiala\n\n  let alkutunnus = toimiala.substr(0, toimiala.indexOf(' ')).trim()\n  for (let i = 0; i < kokoSuomenToimialatJaLkmt.length; i++){\n    let tAla = kokoSuomenToimialatJaLkmt[i].toimiala\n    let s = tAla.substr(0, tAla.indexOf(' ')).trim()\n    if (alkutunnus === s) toimialanLkmSuomessa = kokoSuomenToimialatJaLkmt[i].lkm\n  }\n  const veroToimialat = dataToimialojenVerot.dataset.dimension.Toimiala.category\n  let toimialojenLkm = Object.keys(veroToimialat.label).length\n  let toimialojenVeroarvot = dataToimialojenVerot.dataset.value\n  let vuoden2017Indeksi = 3\n  let solujenLkmPerToimiala = 2\n  let aloitusindeksi2017 = toimialojenLkm * vuoden2017Indeksi * solujenLkmPerToimiala\n  let toimialojenVerot2017 = []\n  for (let j = aloitusindeksi2017; j < aloitusindeksi2017 + toimialojenLkm; j++) {\n    toimialojenVerot2017.push(toimialojenVeroarvot[j])\n  }\n\n  //console.log(veroToimialat.index[alkutunnus])\n  let valitunToimialanIndeksi = aloitusindeksi2017 + veroToimialat.index[alkutunnus] * solujenLkmPerToimiala\n  //console.log(valitunToimialanIndeksi)\n  let toimialanVerotYhteensa = toimialojenVeroarvot[valitunToimialanIndeksi]\n  let toimialanVerotKM = toimialanVerotYhteensa/toimialanLkmSuomessa\n  //console.log(alkutunnus + \" : \" + toimialanVerotKM)\n  let toimialanLkm = toimialaJaLkmKunnalla.lkm\n  //console.log(alkutunnus + \" : \" + toimialanLkm)\n  let toimialanVerotPerKunta = toimialanLkm * toimialanVerotKM\n  //console.log(toimialanVerotPerKunta)\n  return toimialanVerotPerKunta\n}\n\nfunction laskeSuhdeluvut(toimialatYhteensaKunnassa, toimialatJaLkmPerKunta, toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialatJaLkmt){\n //var indeksi; //etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, -1)\n var paastot //= etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi)\n var verot //= etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi)\n// var ohita = -1;\n var suhdeluvut = []\n\n var suhdelukuKokoSuomi = -1 //jos suhdelukua ei voi laskea\n\n\n //let toimialatYhteensaKunnassa = kunnantoimialat[0]\n\n\n //console.log(kunnantoimialat)\n\n  for (let i = 0; i < toimialatJaLkmPerKunta.length; i++) {\n    let suhdelukuKunta = -1\n\n    //indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, ohita)\n    //console.log(toimiAlatJarj[indeksi])\n    let toimialanLkmKunnassa = toimialatJaLkmPerKunta[i].lkm\n    let toimialanOsuusPerKunta = toimialanLkmKunnassa / toimialatYhteensaKunnassa\n\n\n    //console.log(\"indeksi\" + indeksi)\n    \n    paastot = etsiPaastot(TAtunnuksetJaPaastoarvot, kokoSuomenToimialatJaLkmt, toimialatJaLkmPerKunta[i])\n    //console.log(toimialatJaLkmPerKunta)\n    verot = etsiVerot(toimialatJaLkmPerKunta[i], kokoSuomenToimialatJaLkmt)\n    //console.log(verot)\n\n    \n    if ((!isNaN(paastot) && !isNaN(verot)) && (paastot > 0)) {\n      suhdelukuKokoSuomi = verot / paastot\n      suhdelukuKunta = suhdelukuKokoSuomi * toimialanOsuusPerKunta\n    }\n\n    //console.log(suhdeluku)\n    /*if (suhdeluku < 0){\n      ohita = indeksi\n      continue;\n    }*/\n\n    suhdeluvut.push({toimiala: toimialatJaLkmPerKunta[i].toimiala, suhde: suhdelukuKunta})\n    \n\n    //ohita = indeksi\n  }\n  //console.log(suhdeluvut)\n\n  let suhdeluvutJarj = suhdeluvut.sort(function(a, b){\n    return b.suhde - a.suhde\n  });\n  //console.log(suhdeluvutJarj)\n  return suhdeluvutJarj\n}\n\nfunction luoToimialatJaLkmt(toimialojenNimet, toimialojenLkmt){\n  //console.log(toimialojenNimet)\n  //console.log(toimialojenLkmt)\n  let toimialatJaLkmt = []\n\n  for (let i = 0; i < toimialojenLkmt.length; i++){\n    let s = toimialojenNimet[i]\n    let alkutunnus = s.substr(0, s.indexOf(' ')).trim()\n      //console.log(alkutunnus)\n      //console.log(isNaN(parseInt(alkutunnus)))\n    if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue\n    toimialatJaLkmt.push({toimiala: toimialojenNimet[i], lkm: toimialojenLkmt[i]})\n  }\n  \n  let jarjestetty = toimialatJaLkmt.sort(function(a, b){\n    return b.lkm - a.lkm;\n  });\n  //console.log(toimialatJaLkmt)\n  return jarjestetty\n  \n}\n\n\nconst App = () => {\n\n  const [page, setPage] = useState('paikkakunnat')\n\n  const toPage = (page) => (event) => {\n    event.preventDefault()\n    setPage(page)\n  }\n\n\n\n\n\n  const content = () => {\n    if (page === 'paikkakunnat') {\n      return <Paikkakunnat />\n    } else if (page === 'toimialat') {\n      return <ToimialatValilehti />\n    }\n  }\n\n\n\n\n\n  return (\n\n\n    <div>\n\n      <div className=\"row justify-content-md-center\">\n\n        <div className=\"btn-group btn-group-lg\">\n        <button type=\"button\" className=\"btn btn-primary\" aria-pressed=\"true\" onClick={toPage('paikkakunnat')}>Paikkakunnat</button>\n          <button type=\"button\" className=\"btn btn-primary\" aria-pressed=\"true\" onClick={toPage('toimialat')}>Toimialat</button>\n          \n        </div>\n\n\n      </div>\n      {content()}\n    </div>\n  )\n\n\n}\n\n\n//HUOM PAIKKAKUNNAT\n//KOMPONENTTI JOKA piirtää PAIKKAKUNNAT sivulle kaiken\nconst Paikkakunnat = () => {\n\n\n\n\n\n  const [page, setPage] = useState('tietoja')\n\n  const toPage = (page) => (event) => {\n    event.preventDefault()\n    setPage(page)\n  }\n\n\n\n  const content = () => {\n    if (page === 'tietoja') {\n      return <Tietoja />\n    } else if (page === 'suhdeluku') {\n      return <Suhdeluku />\n    }\n  }\n\n\n\n\n  // State joka pitää muistissa indeksiä \n  const [counter, setCounter] = useState(0)\n  const setToValue = (value) => setCounter(value)\n\n\n  //paikkakuntatiedot parsittuna omiin taulukkoihin\n  var kuntienAsLuvut = luoPKtaulukko(0);\n  var vlMuutokset = luoPKtaulukko(1);\n  var tyoAsteet = luoPKtaulukko(2);\n  var tpLukumaarat = luoPKtaulukko(3);\n\n\n  const vaakunat = datavaakunat.selection1\n\n\n\n  var nimiTaulukko = [];\n  var kuntienIit = [];\n  //var vaakunaTaulukko = [];\n\n\n\n\n  // kuntien nimet taulukkoon\n  for (var x in kuntienNimet) {\n    nimiTaulukko.push(kuntienNimet[x]);\n  }\n\n  var toimialojenNimet = []\n  for (let x in toimialatJaIndeksit.label) {\n    toimialojenNimet.push(toimialatJaIndeksit.label[x])\n  }\n\n  var toimialojenIndeksit = []\n  for (let x in toimialatJaIndeksit.index) {\n    toimialojenIndeksit.push(toimialatJaIndeksit.index[x])\n  }\n\n  var toimiAJaI = {}\n  for (let i = 0; i < toimialojenNimet.length; i++) {\n    let avain = toimialojenIndeksit[i];\n    let arvo = toimialojenNimet[i];\n    toimiAJaI[avain] = arvo;\n  }\n\n  //toimialat ja niiden indeksit avain-arvo pareina listassa\n  const toimiAlatJarj = {};\n  // objektilistan järjestys avainarvon eli indeksin mukaan\n  Object.keys(toimiAJaI).sort().forEach(function (key) {\n    toimiAlatJarj[key] = toimiAJaI[key];\n  });\n\n  var toimialatYlaotsikot = []\n  for (let i = 0; i < Object.keys(toimiAlatJarj).length; i++){\n    let tAla = toimiAlatJarj[i]\n    let alkutunnus = tAla.substr(0, tAla.indexOf(' ')).trim()\n    if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue\n    toimialatYlaotsikot.push(toimiAlatJarj[i])\n  }\n  //console.log(toimialatYlaotsikot)\n\n  var paastotToimialat = dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category\n  //var toimialatJaTunnukset = paastotToimialat.label\n\n  var paastojenToimialatJarj = jarjestaIndekseittain(paastotToimialat)\n\n  var paastotToimialoittain2008 = parsiPaastotVuodelta(0)\n  var TAtunnuksetJaPaastoarvot = {}\n  for (let i = 0; i < Object.keys(paastojenToimialatJarj).length; i++) {\n    let s = paastojenToimialatJarj[i]\n    let avain = s.substr(0, s.indexOf(' ')).trim()\n    let arvo = paastotToimialoittain2008[i]\n    TAtunnuksetJaPaastoarvot[avain] = arvo\n  }\n  //console.log(TAtunnuksetJaPaastoarvot)\n\n\n  var kokoSuomenToimialojenLkmt = parsiKunnanToimialat(0, toimiAlatJarj)\n  var kokoSuomenToimialatJaLkmt = luoToimialatJaLkmt(toimiAlatJarj, kokoSuomenToimialojenLkmt)\n  //console.log(kokoSuomenToimialatJaLkmt)\n\n  //console.log(toimiAlatJarj)\n  // käyttäjän valitseman kunnan toimialatiedot taulukossa \n  var kunnantoimialat = parsiKunnanToimialat(counter, toimiAlatJarj);\n\n  var toimialatJaLkmPerKunta = luoToimialatJaLkmt(toimiAlatJarj, kunnantoimialat)\n  //console.log(kunnantoimialat)\n  var kunnanSuhdeluvut = laskeSuhdeluvut(kunnantoimialat[0], toimialatJaLkmPerKunta, toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialatJaLkmt);\n  //console.log(kunnanSuhdeluvut)\n \n\n\n\n  // kuntien indeksit taulukkoon\n  for (let x in kuntienIndeksit) {\n    kuntienIit.push(kuntienIndeksit[x]);\n  }\n\n\n\n  \n\n\n\n  var avain;\n  var arvo;\n  var nimetJaIndeksit = {};\n\n\n  // valintalista kunnista, indeksöi samalla 0->n\n\n\n\n  // kuntien nimet ja indeksit mapitettuna yhteen objektilistaan\n  for (var i = 0; i < nimiTaulukko.length; i++) {\n    avain = kuntienIit[i];\n    arvo = nimiTaulukko[i];\n    nimetJaIndeksit[avain] = arvo;\n  }\n\n  const jarjestetty = {};\n  // objektilistan järjestys avainarvon eli indeksin mukaan\n  Object.keys(nimetJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = nimetJaIndeksit[key];\n  });\n\n  // Kuntien nimien erotus järjestetystä objektilistasta taulukkoon\n  var nimetJarjestyksessa = [];\n  for (let x in jarjestetty) {\n    nimetJarjestyksessa.push(jarjestetty[x]);\n  }\n\n\n  // verotiedot parsittuna omiin taulukoihin\n  var tulonsaajat = luoVeroTaulukko(0);\n  var veronalaisetTulotKeskimaarin = luoVeroTaulukko(1);\n  var ansioTulotKeskimaarin = luoVeroTaulukko(2);\n  var verotYhteensaKeskimaarin = luoVeroTaulukko(3);\n  var valtionVeroKeskimaarin = luoVeroTaulukko(4);\n  var kunnallisVeroKeskimaarin = luoVeroTaulukko(5);\n\n\n\n\n  // Hakutoiminto, ottaa inputista valuen ja vertaa sitä selectin valueihin\n  // piilottaa valuet, jotka eivät vastaa hakusanaa\n  var select\n  var haettava\n\n\n  const etsiPaikkakunta = (hakusana) => {\n\n    haettava = hakusana.target.value\n    \n    select = document.getElementById(\"listaKunnista\");\n    for (var i = 0; i < select.length; i++) {\n      var txt = select[i].text\n      var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n      select.options[i].style.display = include ? '' : 'none';\n    }\n\n  }\n\n  //var asukasLukuI;\n  var listaI;\n\n  // ottaa selectistä valuen ja asettaa sen countteriin\n  const tulosta = (listaValittu) => {\n\n    listaI = listaValittu.target.value\n    setToValue(listaI)\n\n  }\n\n  // asukasluvut löytyvät taulukosta neljän indeksin välein ([0,4,8,...])\n  var asukaslukuInd = 0;\n\n  //alustetaan muuttujat\n  var paastot\n  var verot \n  var monesko \n  var monesko2\n  var lista\n  var tulostus\n\n  //console.log(toimiAlatJarj)\n  \n\n  function alustaMuuttujat() {\n    //indeksi //= etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, -1)\n    //paastot //= etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi)\n    //verot //= etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi)\n    monesko = \"\"\n    monesko2 = 1\n    lista = []\n    //tulostus = //tulostaToimialat(toimiAlatJarj, kunnantoimialat, indeksi)\n  }\n  \n\n  const Tietoja = () => {\n    alustaMuuttujat();\n\n    for (i = 0; i < toimialatJaLkmPerKunta.length; i++) {\n      if (toimialatJaLkmPerKunta[i].lkm === 0) break;\n      //indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, ohita)\n      paastot = etsiPaastot(TAtunnuksetJaPaastoarvot, kokoSuomenToimialatJaLkmt, toimialatJaLkmPerKunta[i])\n      verot = etsiVerot(toimialatJaLkmPerKunta[i], kokoSuomenToimialatJaLkmt)\n      let s = toimialatJaLkmPerKunta[i].toimiala + \" : \" + toimialatJaLkmPerKunta[i].lkm\n      tulostus = s.substr(s.indexOf(' ') + 1).trim()\n\n      if (!isNaN(paastot)) {\n        paastot = paastot.toFixed(0) + \" tonnia kasvihuonekaasuja/vuosi\"\n        verot = verot.toFixed(0) + \"€/vuosi\"\n      }\n      else {\n        paastot = \"Päästötietoja ei saatavilla\"\n        verot = verot.toFixed(0) + \"€/vuosi\"\n      }\n      //ohita = indeksi\n\n      lista.push (<li class=\"list-group-item\">\n                  <small class=\"text-muted\">Toimialoja {monesko} eniten: </small> {tulostus}<small class=\"text-muted\"> kpl</small>\n                  <br></br> <small class=\"text-muted\">Toimialan päästöt kunnalla keskimäärin: </small>{paastot}\n                  <br></br> <small class=\"text-muted\">Toimialan verot kunnalla keskimäärin: </small>{lukupilkuilla(verot)}\n        </li>)\n\n      monesko2++\n      monesko = monesko2 + \".\"\n        \n      \n    }\n  \n    return (\n      <div>\n        {lista}\n      </div>\n    )\n  }\n\n\n  const Suhdeluku = () => {\n\n    monesko = \"\"\n    monesko2 = 1\n  \n    lista = []\n\n    for (let i = 0; i < kunnanSuhdeluvut.length; i++){\n      \n      if (kunnanSuhdeluvut[i].suhde < 0) break;\n      /*indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, ohita)\n      paastot = etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi)\n      verot = etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi)*/\n\n      let s = kunnanSuhdeluvut[i].toimiala\n      tulostus = s.substr(s.indexOf(' ') + 1).trim()\n\n      \n\n      lista.push (<li class=\"list-group-item\"><small class=\"text-muted\">{monesko} Paras hyötysuhde: </small> {tulostus}\n                  <small class=\"text-muted\"> Suhdeluku: </small>{kunnanSuhdeluvut[i].suhde} </li>)\n\n\n      monesko2++\n      monesko = monesko2 + \".\"\n\n      //ohita = indeksi\n\n    }\n\n    console.log(\"jaa\", kunnanSuhdeluvut)\n\n    //console.log(suhdeluvutJarj)\n \n    //alustaMuuttujat();\n\n    \n    //console.log(lista)\n\n  \n    return (\n      <div>\n        {lista}\n      </div>\n    )\n  }\n\n\n  return (\n    // Bootstrapin pääcontainer\n    <div className=\"container\">\n\n\n\n      <div className=\"row\">\n        <div className=\"col-sm\">\n\n          <div>\n\n            <input type=\"text\" className=\"form-control\" id=\"search\" name=\"search\" placeholder=\"Hae...\" onKeyUp={etsiPaikkakunta} />\n          </div>\n\n          <select id=\"listaKunnista\" className=\"form-control\" size=\"30\" onChange={tulosta} >\n\n            {nimetJarjestyksessa.map(s => (<option value={asukaslukuInd++}>{s}</option>))}\n          </select>\n\n        </div>\n\n        <div className=\"col-10\">\n\n\n\n\n\n          \n          <div className=\"row\">\n            <div class=\"col jumbotron\">\n\n              <div className=\"tiedotheader\">\n                <h4 align=\"center\">{nimetJarjestyksessa[counter]}</h4>\n                \n                <img src={vaakunat[counter].image} alt=\"new\" align=\"center\" />\n                \n              </div>\n\n              <ul class=\"list-group list-group-horizontal list-group-flush\">\n\n                <ul class=\"list-group\">\n\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Kunnan asukasluku: </small>{kuntienAsLuvut[counter]}</li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Väkiluvun muutos edellisestä vuodesta: </small> {vlMuutokset[counter] + \"%\"}</li>\n                  <li class=\"list-group-item\"> <small class=\"text-muted\">Työllisyysaste: </small> {tyoAsteet[counter] + \"%\"}</li>\n                  <li class=\"list-group-item\"> <small class=\"text-muted\">Työpaikkojen lukumäärä: </small> {tpLukumaarat[counter]}</li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Tulonsaajia: </small> {tulonsaajat[counter]}</li>\n                </ul>\n\n                <ul class=\"list-group\">\n\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Veronalaiset tulot keskimäärin: </small> {veronalaisetTulotKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small> </li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Ansiotulot keskimäärin: </small> {ansioTulotKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small></li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Verot yhteensä keskimäärin: </small> {verotYhteensaKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small></li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Valtionvero keskimäärin: </small> {valtionVeroKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small></li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Kunnallisvero keskimäärin: </small> {kunnallisVeroKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small></li>\n                </ul>\n\n              </ul>\n\n            </div>\n          </div>\n\n\n          <div class=\"row\">\n            <div class=\"col jumbotron\">\n\n\n              <div className=\"btn-group btn-group-sm pikkunapit\">\n                <button type=\"button\" className=\"btn btn-secondary\" aria-pressed=\"true\" onClick={toPage('tietoja')}>Tietoja</button>\n                <button type=\"button\" className=\"btn btn-secondary\" aria-pressed=\"true\" onClick={toPage('suhdeluku')}>Hyötysuhteet</button>\n              </div>\n\n              <div class=\"oikeala\">\n               {content()}\n               </div>\n\n\n            </div>\n\n          </div>\n\n        </div>\n\n\n\n\n      </div>\n    </div>\n  )\n\n\n\n\n}\n\nReactDOM.render(\n  React.createElement(App, null),\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}