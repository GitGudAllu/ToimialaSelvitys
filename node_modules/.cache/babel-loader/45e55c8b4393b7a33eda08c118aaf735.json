{"ast":null,"code":"import _slicedToArray from \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/src/toimialat.js\";\nimport React, { useState } from 'react';\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\";\nimport dataToimialojenVerot from \"./toimialojenVerot\";\nimport dataPaastot from \"./paastotToimialoittain\"; // lista eri toimialoista\n\nconst toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label;\nconst toimialaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.index;\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value;\nconst kuntienIndeksit = datatoimialatKunnittain.dataset.dimension.Kunta.category.index;\nconst kuntienNimet = datatoimialatKunnittain.dataset.dimension.Kunta.category.label;\nconst nimiJaIndeksi = dataToimialojenVerot.dataset.dimension.Toimiala.category.index;\nconst toimialojenNimet = dataToimialojenVerot.dataset.dimension.Toimiala.category.label;\nconst toimialojenVerot = dataToimialojenVerot.dataset.value;\nconst toimialojenPaastot = dataPaastot.dataset.value;\nconst toimialojenPaastotIndeksit = dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category.index;\nconsole.log(datatoimialatKunnittain);\nconsole.log(kuntienIndeksit);\n\nconst Toimialat = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        setCounter = _useState2[1];\n\n  const setToValue = value => setCounter(value);\n\n  var enitenKunnassa = [];\n  var kuntienNimetTop = [];\n  var kunnanAvain = [];\n  var verotaulukko = [];\n  var alataulukko = [];\n  var maarataulukko = [];\n  var value = [];\n  var paastotaulukko = [];\n  var toimialojenAvaimet = [];\n\n  function toimialanPaikkakunnat(counter) {\n    var toimialaInt = parseInt(counter);\n    console.log(\"toimialaInt \" + toimialaInt);\n    var toimialojenLkm = Object.keys(toimialalista).length;\n    console.log(toimialojenLkm);\n    console.log(\"toimialojen maarat \" + toimialojenMaarat);\n\n    for (let i = toimialaInt; i < toimialojenMaarat.length; i = i + toimialojenLkm) {\n      console.log(\"value = \" + value);\n      console.log(\"i = \" + i);\n      value.push(toimialojenMaarat[i]);\n    }\n\n    etsiIsoin();\n    console.log(\"value lista \" + value);\n  }\n\n  function haeAvain(lista, value) {\n    return Object.keys(lista).find(key => lista[key] === value);\n  }\n\n  function etsiIsoin() {\n    var suurin = 0;\n    var maxIndex = 0;\n\n    for (let i = 0; i < value.length; i++) {\n      enitenKunnassa.push(i);\n\n      if (enitenKunnassa.length > 5) {\n        enitenKunnassa.sort(function (a, b) {\n          return value[b] - value[a];\n        });\n        enitenKunnassa.pop();\n      }\n    }\n\n    for (let i = 0; i < enitenKunnassa.length; i++) {\n      kuntienNimetTop.push(haeAvain(kuntienIndeksit, enitenKunnassa[i]));\n      console.log(\"eniten kunnassa \" + enitenKunnassa);\n      console.log(\"eniten kunnassa2 \" + haeAvain(kuntienIndeksit, enitenKunnassa[i]));\n      console.log(\"kunnan nimi \" + kuntienNimet[haeAvain(kuntienIndeksit, enitenKunnassa[1])]);\n      console.log(\"kuntienNimetTop \" + kuntienNimet[haeAvain(kuntienIndeksit, enitenKunnassa[2])]);\n    }\n  }\n\n  function luoTaulukot() {\n    // var toimialojenLkm = Object.keys(toimialat).length\n    for (let key in toimialalista) {\n      if (key.length == 2) {\n        toimialojenAvaimet.push(key);\n        alataulukko.push(toimialalista[key]);\n        maarataulukko.push(toimialojenMaarat[toimialaIndeksit[key]]);\n        paastotaulukko.push(toimialojenPaastot[toimialojenPaastotIndeksit[key]]);\n\n        if (toimialojenVerot[nimiJaIndeksi[key]] == null) {\n          verotaulukko.push(\"Ei tiedossa\");\n        } else {\n          verotaulukko.push(toimialojenVerot[nimiJaIndeksi[key]]);\n        }\n      }\n    }\n\n    return alataulukko;\n  }\n\n  function parsiTaulukko(taulukko) {\n    for (let x in taulukko) {\n      taulukko[x] = taulukko[x].replace(/^[\\s\\d]+/, '');\n    }\n  }\n\n  var toimialaInd = 0;\n  var haettava;\n  var select;\n  var taulukkoToimialoista = luoTaulukot();\n  parsiTaulukko(taulukkoToimialoista);\n\n  const etsiToimiala = hakusana => {\n    haettava = hakusana.target.value;\n    select = document.getElementById(\"listaToimialoista\");\n\n    for (var i = 0; i < select.length; i++) {\n      var txt = select[i].text;\n      var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n      select.options[i].style.display = include ? '' : 'none';\n    }\n  };\n\n  const tulostaToimiala = listaValittu => {\n    setToValue(listaValittu.target.value);\n    toimialanPaikkakunnat(counter);\n    console.log(kuntienNimet[haeAvain(kuntienIndeksit, enitenKunnassa[1])]);\n  };\n\n  function lukupilkuilla(x) {\n    if (x == undefined) return \"Ei tiedossa\";else return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  }\n\n  return (// Bootstrapin pääcontainer\n    React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"search\",\n      className: \"form-control\",\n      name: \"search\",\n      placeholder: \"Hae...\",\n      onKeyUp: etsiToimiala,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(\"select\", {\n      id: \"listaToimialoista\",\n      className: \"form-control\",\n      size: \"30\",\n      onChange: tulostaToimiala,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, taulukkoToimialoista.map(s => React.createElement(\"option\", {\n      value: toimialaInd++,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, s)))), React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Toimialan kokonaisp\\xE4\\xE4st\\xF6t: \", lukupilkuilla(paastotaulukko[counter])), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Toimialojen kokonaislukum\\xE4\\xE4r\\xE4: \", lukupilkuilla(maarataulukko[counter])), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Toimialan verot yhteens\\xE4: \", lukupilkuilla(verotaulukko[counter]), \" \\u20AC\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"eniten paikkakunta: \", lukupilkuilla(kuntienNimetTop[counter])))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn-group btn-group-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"aria-pressed\": \"true\",\n      onClick: console.log('tietoja'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Tietoja\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"aria-pressed\": \"true\",\n      onClick: console.log('suhdeluku'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Suhdeluku\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Parhaat kunnat toimialalla \\\"\", taulukkoToimialoista[counter], \"\\\": T\\xC4H\\xC4N KUNTA \", kuntienNimet[haeAvain(kuntienIndeksit, enitenKunnassa[1])], \" , JOLLA V\\xC4HITEN P\\xC4\\xC4ST\\xD6J\\xC4 VERRATTUNA TULOIHIN VALITULLA TOIMIALALLA\"))))))\n  );\n};\n\nexport default Toimialat;","map":{"version":3,"sources":["/Users/tuomo/PROJEKTITYÖ/ryhmatyo/tklaskuri/src/toimialat.js"],"names":["React","useState","datatoimialatKunnittain","dataToimialojenVerot","dataPaastot","toimialalista","dataset","dimension","Toimiala2008","category","label","toimialaIndeksit","index","toimialojenMaarat","value","kuntienIndeksit","Kunta","kuntienNimet","nimiJaIndeksi","Toimiala","toimialojenNimet","toimialojenVerot","toimialojenPaastot","toimialojenPaastotIndeksit","console","log","Toimialat","counter","setCounter","setToValue","enitenKunnassa","kuntienNimetTop","kunnanAvain","verotaulukko","alataulukko","maarataulukko","paastotaulukko","toimialojenAvaimet","toimialanPaikkakunnat","toimialaInt","parseInt","toimialojenLkm","Object","keys","length","i","push","etsiIsoin","haeAvain","lista","find","key","suurin","maxIndex","sort","a","b","pop","luoTaulukot","parsiTaulukko","taulukko","x","replace","toimialaInd","haettava","select","taulukkoToimialoista","etsiToimiala","hakusana","target","document","getElementById","txt","text","include","toLowerCase","startsWith","options","style","display","tulostaToimiala","listaValittu","lukupilkuilla","undefined","toString","map","s"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\";\nimport dataToimialojenVerot from \"./toimialojenVerot\";\nimport dataPaastot from \"./paastotToimialoittain\";\n\n\n\n// lista eri toimialoista\nconst toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label\nconst toimialaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.index\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value\nconst kuntienIndeksit = datatoimialatKunnittain.dataset.dimension.Kunta.category.index\nconst kuntienNimet = datatoimialatKunnittain.dataset.dimension.Kunta.category.label\n\nconst nimiJaIndeksi = dataToimialojenVerot.dataset.dimension.Toimiala.category.index\nconst toimialojenNimet = dataToimialojenVerot.dataset.dimension.Toimiala.category.label\nconst toimialojenVerot = dataToimialojenVerot.dataset.value\n\nconst toimialojenPaastot = dataPaastot.dataset.value\nconst toimialojenPaastotIndeksit = dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category.index;\n\n\n\nconsole.log(datatoimialatKunnittain)\nconsole.log(kuntienIndeksit)\n\nconst Toimialat = () => {\n\n    \n  const [ counter, setCounter ] = useState(0)\n  const setToValue = (value) => setCounter(value)\n  \n  var enitenKunnassa = [];\n  var kuntienNimetTop = [];\n  var kunnanAvain = [];\n  var verotaulukko = [];\n  var alataulukko = [];\n  var maarataulukko = [];\n  var value = [];\n  var paastotaulukko = [];\n  var toimialojenAvaimet = [];\n\n  function toimialanPaikkakunnat(counter) {\n\n    var toimialaInt = parseInt(counter)\n    console.log(\"toimialaInt \" + toimialaInt)\n    var toimialojenLkm = Object.keys(toimialalista).length\n    console.log(toimialojenLkm)\n    console.log(\"toimialojen maarat \" + toimialojenMaarat)\n    for (let i = toimialaInt; i < toimialojenMaarat.length; i = (i+toimialojenLkm)){\n      console.log(\"value = \" + value)\n            console.log(\"i = \" + i)\n\n      value.push(toimialojenMaarat[i]);\n    }\n    etsiIsoin();\n    console.log(\"value lista \" + value)\n    \n  }\n\n  function haeAvain(lista, value){\n  \treturn Object.keys(lista).find(key => lista[key] === value);\n  }\n\n  function etsiIsoin(){\n    \n    var suurin = 0;\n    var maxIndex = 0;\n\n    for (let i = 0; i < value.length; i++){\n    \tenitenKunnassa.push(i);\n    \tif(enitenKunnassa.length > 5){\n    \t\tenitenKunnassa.sort(function(a,b) { return value[b] - value[a];});\n    \t\tenitenKunnassa.pop();\n    \t}\n    }\n\n    for (let i = 0; i < enitenKunnassa.length; i++){\n    \tkuntienNimetTop.push(haeAvain(kuntienIndeksit, enitenKunnassa[i]))\n    \tconsole.log(\"eniten kunnassa \" + enitenKunnassa)\n        console.log(\"eniten kunnassa2 \" + haeAvain(kuntienIndeksit, enitenKunnassa[i]) )\n        console.log(\"kunnan nimi \" + kuntienNimet[haeAvain(kuntienIndeksit, enitenKunnassa[1])])\n        console.log(\"kuntienNimetTop \" + kuntienNimet[haeAvain(kuntienIndeksit, enitenKunnassa[2])])\n    }  \n       \n  }\n  \n      \n  function luoTaulukot() {\n   // var toimialojenLkm = Object.keys(toimialat).length\n    for (let key in toimialalista){\n      if(key.length == 2){\n\n        toimialojenAvaimet.push(key)\n        alataulukko.push(toimialalista[key])\n        maarataulukko.push(toimialojenMaarat[toimialaIndeksit[key]])\n        paastotaulukko.push(toimialojenPaastot[toimialojenPaastotIndeksit[key]])\n        if (toimialojenVerot[nimiJaIndeksi[key]] == null){\n          \n          verotaulukko.push(\"Ei tiedossa\")\n        } \n        else {\n          \n         verotaulukko.push(toimialojenVerot[nimiJaIndeksi[key]])\n        }\n      } \n\n    }           \n    return alataulukko;\n  }\n\n    function parsiTaulukko(taulukko){\n\n      for(let x in taulukko){\n        taulukko[x] = taulukko[x].replace(/^[\\s\\d]+/, '');\n      }\n    }\n\n    var toimialaInd = 0;\n    var haettava;\n    var select;\n    var taulukkoToimialoista = luoTaulukot();\n    parsiTaulukko(taulukkoToimialoista);\n    \n    \n\n    const etsiToimiala = (hakusana) => {\n   \n   haettava = hakusana.target.value\n   select = document.getElementById(\"listaToimialoista\");\n   for (var i = 0; i < select.length; i++){\n     var txt = select[i].text\n     var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n     select.options[i].style.display = include ? '' : 'none';\n     \n   }\n }\n \n \n   const tulostaToimiala = (listaValittu) => {\n   \n   setToValue(listaValittu.target.value)\n   toimialanPaikkakunnat(counter)\n   console.log(kuntienNimet[haeAvain(kuntienIndeksit, enitenKunnassa[1])])\n\n\n   \n }\n\n\n function lukupilkuilla(x) {\n  if (x == undefined) return \"Ei tiedossa\";\n  else return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n}\n \n return (\n  // Bootstrapin pääcontainer\n  <div className=\"container\">   \n  \n      <div className=\"row\">\n            <div className=\"col-sm\">\n              \n              <div>\n              <input type=\"text\" id=\"search\" className=\"form-control\" name=\"search\" placeholder=\"Hae...\" onKeyUp={etsiToimiala}/>\n              </div>\n          \n              <select id=\"listaToimialoista\"className=\"form-control\" size=\"30\" onChange={tulostaToimiala} >\n                \n              {taulukkoToimialoista.map(s => (<option value={toimialaInd++}>{s}</option>))}\n              </select>\n\n              \n           \n\n\n      \n\n            </div>\n\n            <div className=\"col-6\">\n\n\n             \n\n\n            <div className=\"row\">\n            <div className=\"col jumbotron\">\n\n            <p>Toimialan kokonaispäästöt: {lukupilkuilla(paastotaulukko[counter])}</p>\n            <p>Toimialojen kokonaislukumäärä: {lukupilkuilla(maarataulukko[counter])}</p>\n            <p>Toimialan verot yhteensä: {lukupilkuilla(verotaulukko[counter])} €</p>\n\n            <p>eniten paikkakunta: {lukupilkuilla(kuntienNimetTop[counter])}</p>\n            \n            </div>\n            </div>\n\n            <div className=\"row\">\n\n\n\n\n            <div className=\"col jumbotron\">\n\n            <div className=\"btn-group btn-group-sm\">\n                <button type=\"button\" className=\"btn btn-secondary\" aria-pressed=\"true\" onClick={console.log('tietoja')}>Tietoja</button>\n                <button type=\"button\" className=\"btn btn-secondary\" aria-pressed=\"true\" onClick={console.log('suhdeluku')}>Suhdeluku</button>\n              </div>\n\n            <p></p>\n\n            <p>Parhaat kunnat toimialalla \"{taulukkoToimialoista[counter]}\": TÄHÄN KUNTA {kuntienNimet[haeAvain(kuntienIndeksit, enitenKunnassa[1])]} , JOLLA VÄHITEN PÄÄSTÖJÄ VERRATTUNA TULOIHIN \n              VALITULLA TOIMIALALLA</p>\n\n\n            </div>\n            </div>\n\n            </div>\n\n\n\n            \n\n    </div>\n\n\n    </div>\n\n        );\n  }\n\n\nexport default Toimialat;"]},"metadata":{},"sourceType":"module"}