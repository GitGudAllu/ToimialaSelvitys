{"ast":null,"code":"import _slicedToArray from \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport data from \"./kuntienavainluvut\";\nimport './App.css';\n\nconst App = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        asindeksi = _useState2[0],\n        setCounter = _useState2[1];\n\n  const setToValue = value => {\n    setCounter(value);\n  }; //objektilista kuntien nimistä\n\n\n  const kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label; //objektilista asukasluvuista\n\n  const asukasmaarat = data.dataset.value; //objektilista kuntien indekseistä\n\n  const kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index;\n  var nimiTaulukko = [];\n  var kuntienIit = []; // kuntien nimet taulukkoon\n\n  for (var x in kuntienNimet) {\n    nimiTaulukko.push(kuntienNimet[x]);\n  } // kuntien indeksit taulukkoon\n\n\n  for (var x in kuntienIndeksit) {\n    kuntienIit.push(kuntienIndeksit[x]);\n  }\n\n  var avain;\n  var arvo;\n  var nimetJaIndeksit = {}; // kuntien nimet ja indeksit mapitettuna yhteen objektilistaan\n\n  for (var i = 0; i < nimiTaulukko.length; i++) {\n    avain = kuntienIit[i];\n    arvo = nimiTaulukko[i];\n    nimetJaIndeksit[avain] = arvo;\n  }\n\n  const jarjestetty = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(nimetJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = nimetJaIndeksit[key];\n  }); // Kuntien nimien erotus järjestetystä objektilistasta\n\n  var nimetJarjestyksessa = [];\n\n  for (var x in jarjestetty) {\n    nimetJarjestyksessa.push(jarjestetty[x]);\n  }\n\n  var listaIndex; // ottaa selectistä valuen ja tulostaa sen\n\n  const tulosta = listaValittu => {\n    listaIndex = listaValittu.target.value;\n    console.log(listaIndex);\n    setToValue(listaIndex);\n  };\n\n  const taulukko = () => {\n    return 40;\n  };\n\n  var indexLista = 0; // valintalista kunnista, indeksöi samalla 0->n\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"row justify-content-md-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"btn-group btn-group-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    \"aria-pressed\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Toimialat\"), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    \"aria-pressed\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Paikkakunnat\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    id: \"listaKunnista\",\n    className: \"form-control\",\n    size: taulukko,\n    onChange: tulosta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, nimetJarjestyksessa.map(s => React.createElement(\"option\", {\n    value: indexLista++,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, s)))), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"col-xs-12 col-md-4 pull-right col1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Kunnan asukasluku: \", asukasmaarat[asindeksi], \" \", asindeksi), React.createElement(\"div\", {\n    class: \"col-xs-12 col-md-4 pull-right col3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }))));\n};\n\nReactDOM.render(React.createElement(App, null), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tuomo/PROJEKTITYÖ/ryhmatyo/tklaskuri/src/index.js"],"names":["React","useState","ReactDOM","data","App","asindeksi","setCounter","setToValue","value","kuntienNimet","dataset","dimension","category","label","asukasmaarat","kuntienIndeksit","index","nimiTaulukko","kuntienIit","x","push","avain","arvo","nimetJaIndeksit","i","length","jarjestetty","Object","keys","sort","forEach","key","nimetJarjestyksessa","listaIndex","tulosta","listaValittu","target","console","log","taulukko","indexLista","map","s","render","createElement","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAO,WAAP;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBAGkBH,QAAQ,CAAC,CAAD,CAH1B;AAAA;AAAA,QAGRI,SAHQ;AAAA,QAGGC,UAHH;;AAKhB,QAAMC,UAAU,GAAIC,KAAD,IAClB;AAAEF,IAAAA,UAAU,CAACE,KAAD,CAAV;AAAmB,GADtB,CALgB,CAQf;;;AACC,QAAMC,YAAY,GAAGN,IAAI,CAACO,OAAL,CAAaC,SAAb,CAAuB,WAAvB,EAAoCC,QAApC,CAA6CC,KAAlE,CATc,CAUd;;AACA,QAAMC,YAAY,GAAGX,IAAI,CAACO,OAAL,CAAaF,KAAlC,CAXc,CAYd;;AACA,QAAMO,eAAe,GAAGZ,IAAI,CAACO,OAAL,CAAaC,SAAb,CAAuB,WAAvB,EAAoCC,QAApC,CAA6CI,KAArE;AAEA,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,UAAU,GAAG,EAAjB,CAhBc,CAmBd;;AACA,OAAK,IAAIC,CAAT,IAAcV,YAAd,EAA4B;AACxBQ,IAAAA,YAAY,CAACG,IAAb,CAAkBX,YAAY,CAACU,CAAD,CAA9B;AACH,GAtBa,CAwBd;;;AACA,OAAK,IAAIA,CAAT,IAAcJ,eAAd,EAA+B;AAC3BG,IAAAA,UAAU,CAACE,IAAX,CAAgBL,eAAe,CAACI,CAAD,CAA/B;AACH;;AAED,MAAIE,KAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,eAAe,GAAG,EAAtB,CA/Bc,CAiCd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,YAAY,CAACQ,MAAjC,EAAyCD,CAAC,EAA1C,EAA6C;AAC5CH,IAAAA,KAAK,GAAGH,UAAU,CAACM,CAAD,CAAlB;AACAF,IAAAA,IAAI,GAAGL,YAAY,CAACO,CAAD,CAAnB;AACAD,IAAAA,eAAe,CAACF,KAAD,CAAf,GAAyBC,IAAzB;AACA;;AAED,QAAMI,WAAW,GAAG,EAApB,CAxCc,CAyCd;;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYL,eAAZ,EAA6BM,IAA7B,GAAoCC,OAApC,CAA4C,UAASC,GAAT,EAAc;AAC3DL,IAAAA,WAAW,CAACK,GAAD,CAAX,GAAmBR,eAAe,CAACQ,GAAD,CAAlC;AACD,GAFE,EA1Cc,CA8Cd;;AACH,MAAIC,mBAAmB,GAAG,EAA1B;;AACA,OAAK,IAAIb,CAAT,IAAcO,WAAd,EAA2B;AACpBM,IAAAA,mBAAmB,CAACZ,IAApB,CAAyBM,WAAW,CAACP,CAAD,CAApC;AACH;;AAGD,MAAIc,UAAJ,CArDc,CAsDd;;AACA,QAAMC,OAAO,GAAIC,YAAD,IAAkB;AAEhCF,IAAAA,UAAU,GAAGE,YAAY,CAACC,MAAb,CAAoB5B,KAAjC;AACA6B,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACA1B,IAAAA,UAAU,CAAC0B,UAAD,CAAV;AAED,GAND;;AAQA,QAAMM,QAAQ,GAAG,MAAM;AAErB,WAAO,EAAP;AAED,GAJD;;AAOA,MAAIC,UAAU,GAAG,CAAjB,CAtEc,CAuEd;;AACA,SAEJ;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGA;AAAK,IAAA,KAAK,EAAC,+BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,KAAK,EAAC,wBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,iBAA5B;AAA8C,oBAAa,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,iBAA5B;AAA8C,oBAAa,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CAHF,CAHA,EAcQ;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAQ,IAAA,EAAE,EAAC,eAAX;AAA2B,IAAA,SAAS,EAAC,cAArC;AAAoD,IAAA,IAAI,EAAED,QAA1D;AAAoE,IAAA,QAAQ,EAAEL,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,mBAAmB,CAACS,GAApB,CAAwBC,CAAC,IAAK;AAAQ,IAAA,KAAK,EAAEF,UAAU,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BE,CAA9B,CAA9B,CADD,CAFF,CADF,EAQI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAK,IAAA,KAAK,EAAC,oCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEoB5B,YAAY,CAACT,SAAD,CAFhC,OAE8CA,SAF9C,CAFA,EAYF;AAAK,IAAA,KAAK,EAAC,oCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZE,CARJ,CAdR,CAFI;AAkDF,CA1HF;;AA4HAH,QAAQ,CAACyC,MAAT,CACE3C,KAAK,CAAC4C,aAAN,CAAoBxC,GAApB,EAAyB,IAAzB,CADF,EAEEyC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom'\nimport data from \"./kuntienavainluvut\"; \nimport './App.css';\n\n\n\nconst App = () => {\n    \n    \n  const [ asindeksi, setCounter ] = useState(0)\n\n  const setToValue = (value) =>\n   { setCounter(value) }\n\n  \t//objektilista kuntien nimistä\n    const kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label\n    //objektilista asukasluvuista\n    const asukasmaarat = data.dataset.value\n    //objektilista kuntien indekseistä\n    const kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index\n\n    var nimiTaulukko = [];\n    var kuntienIit = [];\n    \n    \n    // kuntien nimet taulukkoon\n    for (var x in kuntienNimet) {\n        nimiTaulukko.push(kuntienNimet[x]);\n    }\n\n    // kuntien indeksit taulukkoon\n    for (var x in kuntienIndeksit) {\n        kuntienIit.push(kuntienIndeksit[x]);\n    }\n\n    var avain;\n    var arvo;\n    var nimetJaIndeksit = {};\n\n    // kuntien nimet ja indeksit mapitettuna yhteen objektilistaan\n    for (var i = 0; i < nimiTaulukko.length; i++){\n    \tavain = kuntienIit[i];\n    \tarvo = nimiTaulukko[i];\n    \tnimetJaIndeksit[avain] = arvo;\n    }\n\n    const jarjestetty = {};\n    // objektilistan järjestys avainarvon eli indeksin mukaan\n    Object.keys(nimetJaIndeksit).sort().forEach(function(key) {\n  \tjarjestetty[key] = nimetJaIndeksit[key];\n\t});\n\n    // Kuntien nimien erotus järjestetystä objektilistasta\n\tvar nimetJarjestyksessa = [];\n\tfor (var x in jarjestetty) {\n        nimetJarjestyksessa.push(jarjestetty[x]);\n    }\n\n    \n    var listaIndex;\n    // ottaa selectistä valuen ja tulostaa sen\n    const tulosta = (listaValittu) => {\n    \t\n      listaIndex = listaValittu.target.value\n      console.log(listaIndex)\n      setToValue(listaIndex)\n      \n    }\n\n    const taulukko = () => {\n    \t\n      return 40;\n      \n    }\n    \n    \n    var indexLista = 0;\n    // valintalista kunnista, indeksöi samalla 0->n\n    return (\n\n<div className=\"container\">\t\n\n\n<div class=\"row justify-content-md-center\">\n    \n\n  <div class=\"btn-group btn-group-lg\">\n    <button type=\"button\" class=\"btn btn-primary\" aria-pressed=\"true\">Toimialat</button>\n    <button type=\"button\" class=\"btn btn-primary\" aria-pressed=\"true\">Paikkakunnat</button>\n    \n  </div>\n  \n  </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            \n            <select id=\"listaKunnista\" className=\"form-control\" size={taulukko} onChange={tulosta}>\n            {nimetJarjestyksessa.map(s => (<option value={indexLista++}>{s}</option>))} \n            </select>\n            </div>\n\n            <div className=\"col-sm\">\n\n            <div class=\"col-xs-12 col-md-4 pull-right col1\">\n\n            Kunnan asukasluku: {asukasmaarat[asindeksi]} {asindeksi}\n\n            </div>\n\n\n          \n      \n          \n          <div class=\"col-xs-12 col-md-4 pull-right col3\">\n\n\n          </div>\n\n\n\n          </div>\n\n  </div>\t\t\n</div>\n    )\n\n    \n }\n\nReactDOM.render(\n  React.createElement(App, null),\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}