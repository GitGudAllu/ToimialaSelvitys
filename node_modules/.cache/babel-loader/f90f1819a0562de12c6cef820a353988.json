{"ast":null,"code":"import _slicedToArray from \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport data from \"./kuntienavainluvut1\";\nimport './App.css';\nimport datavaakunat from \"./vaakunaKuvat\";\nimport dataverot from \"./verotietoja\";\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\";\nimport ToimialatValilehti from './toimialat';\nimport dataPaastot from \"./paastotToimialoittain\";\nimport dataToimialojenVerot from \"./toimialojenVerot2\";\n\nconst lukupilkuilla = x => {\n  if (x === undefined) return \"Ei tiedossa\";else return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n}; // objektilista kuntien nimistä\n\n\nconst kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label; // objektilista asukasluvuista\n\nconst pktiedot = data.dataset.value; // objektilista kuntien indekseistä\n\nconst kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index; // vuodet 2005-2017 taulukossa indeksistä 0 alkaen\n\nconst veroTietojenVuodet = Object.keys(dataverot.dataset.dimension.Vuosi.category.label); // objektilista verotietoihin koskevista kategorioista\n\nconst verokategoriat = dataverot.dataset.dimension.Tiedot.category.label; // verotiedot taulukossa\n\nconst verotiedot = dataverot.dataset.value; // lista eri toimialoista\n//const toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label\n// toimialojen määrät taulukossa\n\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value; // toimialat ja niitä vastaavat indeksit\n\nconst toimialatJaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category;\n/** Parsii paikkakuntadataa omiin taulukoihin sarakenumeron perusteella.\n* @param {number} sarakeNro Paikkakuntadatan sarakenumero; kuntien as. luvut: 0, väkiluvunmuutokset: 1, työasteet: 2, työpaikkojen lkm: 3.\n* @returns Taulukko haluttua paikkakuntadataa\n*/\n\nfunction luoPKtaulukko(sarakeNro) {\n  var taulukko = [];\n\n  for (let i = sarakeNro, j = 0; i < pktiedot.length; i += 4, j++) {\n    taulukko[j] = pktiedot[i];\n  }\n\n  return taulukko;\n}\n/** Parsii verotiedot omaan taulukkoon sarakenumeron perusteella\n* @param {number} sarakeNro Verodatan sarakenumero; tulonsaajat: 0, veronalaiset tulot keskimäär: 1, ansiotulot km: 2, verot yhteensä km: 3,\n*                                                   valtion vero km: 4, kunnallisvero km: 5.\n* @returns Taulukko haluttua verodataa\n*/\n\n\nfunction luoVeroTaulukko(sarakeNro) {\n  var taulukko = [];\n  const solujenLkmPerVuosi = Object.keys(kuntienNimet).length * Object.keys(verokategoriat).length;\n  var verodata2017indeksi = (veroTietojenVuodet.length - 1) * solujenLkmPerVuosi;\n\n  for (let i = verodata2017indeksi + sarakeNro, j = 0; i < solujenLkmPerVuosi * veroTietojenVuodet.length; i += 6, j++) {\n    taulukko[j] = verotiedot[i];\n  }\n\n  return taulukko;\n}\n/** Parsii sovelluksessa valitun kunnan toimialatiedot yhteen taulukkoon.\n* Toimialojen määrät -datasetistä lasketaan oikea aloitusindeksi kunnan indeksin avulla.\n* @param {number} kunnanIndeksi Käyttäjän valitseman kunnan indeksi (koko maan toimialat indeksissä 0)\n* @param {list} toimialat Lista kaikista toimialoista\n* @returns Valitun kunnan toimialojen lukumäärät taulukossa\n*/\n\n\nfunction parsiKunnanToimialat(kunnanIndeksi, toimialat) {\n  var toimialojenLkm = Object.keys(toimialat).length;\n  var kunnanToimialojenLkmt = [];\n  var alkuindeksi = kunnanIndeksi * toimialojenLkm; //var alkuindeksi2;\n  //console.log(\"kunnani: \" + kunnanIndeksi)\n  //console.log(\"alkui: \" + alkuindeksi2)\n  //if (kunnanIndeksi == 1) alkuindeksi2 = 7 * toimialojenLkm\n  //else if (kunnanIndeksi > 1  && kunnanIndeksi < 8 ) alkuindeksi2 = alkuindeksi - toimialojenLkm\n  //else alkuindeksi2 = alkuindeksi\n  //console.log(\"alkui: \" + alkuindeksi2)\n\n  for (let i = alkuindeksi; i < alkuindeksi + toimialojenLkm; i++) {\n    kunnanToimialojenLkmt.push(toimialojenMaarat[i]);\n  }\n\n  return kunnanToimialojenLkmt;\n}\n/** Etsii toimialan indeksin, jota löytyy eniten valitusta kunnasta.\n* Ohittaa parametrina annetun alkion ja sitä suuremmat, jotta funktiota voi käyttää myös\n* toiseksi suurimman etsintään (jne).\n* @param {list} tAlaNimet Toimialojen nimet järjestetyssä listassa\n* @param {array} tAlaLkm Valitun kunnan toimialojen lukumäärät taulukossa\n* @param {number} ohita Alkion indeksi, joka ja jota suuremmat ohitetaan\n* @returns Suurimman alkion indeksi, pl. ohitetut alkiot\n*/\n\n\nfunction etsiSuurimmanI(tAlaNimet, tAlaLkm, ohita) {\n  //console.log(tAlaLkm)\n  let suurin = 0;\n  let suurimmanI = 0;\n\n  for (let i = 0; i < tAlaLkm.length; i++) {\n    if (tAlaLkm[i] >= tAlaLkm[ohita]) continue;\n\n    if (tAlaLkm[i] > suurin) {\n      let s = tAlaNimet[i];\n      let alkutunnus = s.substr(0, s.indexOf(' ')).trim(); //console.log(alkutunnus)\n      //console.log(isNaN(parseInt(alkutunnus)))\n\n      if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue; //console.log(alkutunnus)\n\n      suurin = tAlaLkm[i];\n      suurimmanI = i; //console.log(\"suurin: \" + suurin)\n    }\n  }\n\n  return suurimmanI;\n}\n/** Muotoilee ja palauttaa merkkijonona annettua indeksiä vastaavan toimialan \n* nimen ja lukumäärän.\n* @param {list} toimialojenNimet Toimialat ja niiden indeksit listassa avain-arvo pareina.\n* @param {array} toimialojenLkm Valitun kunnan toimialojen lukumäärät taulukossa.\n* @param {number} i Toimialan indeksi\n* @returns Merkkijono muotoa \"[toimialan nimi] : [toimialan lkm valitussa kunnassa]\"\n*/\n\n\nfunction tulostaToimialat(toimialojenNimet, toimialojenLkm, i) {\n  //console.log(eniten)\n  //let suurin = 0;\n  //let toiseksiSuurin = etsiSuurin(toimialojenLkm, suurin)\n  //let kolmas = etsiSuurin(toimialojenLkm, toiseksiSuurin)\n  //let suurimmanIndeksi = toimialojenLkm.indexOf(eniten)\n  //let indeksi2 = toimialojenLkm.indexOf(toiseksiSuurin)\n  //console.log(suurimmanIndeksi)\n  //console.log(suurin)\n  //console.log(toiseksiSuurin)\n  //console.log(kolmas)\n  let s = toimialojenNimet[i] + \" : \" + toimialojenLkm[i];\n  return s.substr(s.indexOf(' ') + 1).trim(); //return toimialojenNimet[i] + \" : \" + toimialojenLkm[i] + \" \"\n}\n/** Järjestää annetun datasetin indeksien perusteella suuruusjärjestykseen.\n* @param {list} datasetti Lista-pari labeleista ja indekseistä\n* @returns Avain-arvo lista indekseistä ja labeleista\n*/\n\n\nfunction jarjestaIndekseittain(datasetti) {\n  var labelit = [];\n\n  for (let x in datasetti.label) {\n    labelit.push(datasetti.label[x]);\n  }\n\n  var indeksit = [];\n\n  for (let x in datasetti.index) {\n    indeksit.push(datasetti.index[x]);\n  }\n\n  var labelitJaIndeksit = {};\n\n  for (let i = 0; i < Object.keys(datasetti.label).length; i++) {\n    let avain = indeksit[i];\n    let arvo = labelit[i];\n    labelitJaIndeksit[avain] = arvo;\n  } //toimialat ja niiden indeksit avain-arvo pareina listassa\n\n\n  let jarjestetty = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(labelitJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = labelitJaIndeksit[key];\n  });\n  return jarjestetty;\n}\n/** Parsii jokaisen toimialan päästöt tietyltä vuodelta.\n* @param {number} vuodenIndeksi Halutun vuoden indeksi, alkaen 0: 2008, 1: 2009, 2:2010 etc.\n* @returns Taulukko toimialojen päästöarvoista (pelkät arvot)\n*/\n\n\nfunction parsiPaastotVuodelta(vuodenIndeksi) {\n  var paastoTaulukko = dataPaastot.dataset.value;\n  let toimialojenLkm = Object.keys(dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category.label).length;\n  var vuodenPaastot = [];\n  let alkuindeksi = vuodenIndeksi * toimialojenLkm;\n\n  for (let i = alkuindeksi; i < alkuindeksi + toimialojenLkm; i++) {\n    vuodenPaastot.push(paastoTaulukko[i]);\n  }\n\n  return vuodenPaastot;\n}\n/** Etsii indeksiä vastaavan toimialan päästöarvon, ja laskee toimialan keskimääräiset päästöt\n* valitussa kunnassa.\n* @param {list} toimialat Lista toimialoista ja niiden indekseistä avain-arvo pareina\n* @param {list} toimialojenPaastot Lista-pari toimialojen päästöistä ja niiden indekseistä\n* @param {array} toimialojenLkmSuomessa Taulukko toimialojen lukumääristä koko suomessa\n* @param {array} toimialojenLkmKunnalla Taulukko toimialojen lukumääristä käyttäjän valitsemassa kunnassa\n* @param {number} i Indeksi jolla valitaan haluttu toimiala\n* @returns Toimialan keskimääräiset päästöt kunnassa, NaN jos ei saatavilla\n*/\n\n\nfunction etsiPaastot(toimialat, toimialojenPaastot, toimialojenLkmSuomessa, toimialojenLkmKunnalla, i) {\n  let toimialanLkmSuomessa = toimialojenLkmSuomessa[i];\n  let toimialanLkmKunnassa = toimialojenLkmKunnalla[i]; //console.log(\"asd: \" +  toimialanLkmKunnassa)\n\n  let toimiala = toimialat[i];\n  let alkutunnus = toimiala.substr(0, toimiala.indexOf(' ')).trim();\n  let toimialanPaastot = toimialojenPaastot[alkutunnus];\n  let toimialanPaastotKM = toimialanPaastot / toimialanLkmSuomessa;\n  let kokonaisPaastotKunnassa = toimialanPaastotKM * toimialanLkmKunnassa; //console.log(\"asdf: \" +  kokonaisPaastotKunnassa)\n\n  return kokonaisPaastotKunnassa;\n}\n/** Etsii indeksiä vastaavan toimialan verotiedot, ja laskee toimialan keskimääräiset verotulot\n* valitussa kunnassa.\n* @param {list} toimialat Lista toimialoista ja niiden indekseistä avain-arvo pareina\n* @param {array} toimialojenLkmKunnalla Taulukko toimialojen lukumääristä käyttäjän valitsemassa kunnassa\n* @param {number} i Indeksi jolla valitaan haluttu toimiala\n* @returns Toimialan keskimääräiset veromaksut kunnassa, NaN jos ei saatavilla\n*/\n\n\nfunction etsiVerot(toimialat, toimialojenLkmKunnalla, i) {\n  let toimiala = toimialat[i];\n  let alkutunnus = toimiala.substr(0, toimiala.indexOf(' ')).trim();\n  const veroToimialat = dataToimialojenVerot.dataset.dimension.Toimiala.category;\n  let toimialojenLkm = Object.keys(veroToimialat.label).length;\n  let toimialojenVeroarvot = dataToimialojenVerot.dataset.value;\n  let vuoden2017Indeksi = 3;\n  let solujenLkmPerToimiala = 2;\n  let aloitusindeksi2017 = toimialojenLkm * vuoden2017Indeksi * solujenLkmPerToimiala;\n  let toimialojenVerot2017 = [];\n\n  for (let j = aloitusindeksi2017; j < aloitusindeksi2017 + toimialojenLkm; j++) {\n    toimialojenVerot2017.push(toimialojenVeroarvot[j]);\n  } //console.log(veroToimialat.index[alkutunnus])\n\n\n  let valitunToimialanIndeksi = +aloitusindeksi2017 + veroToimialat.index[alkutunnus] * solujenLkmPerToimiala; //console.log(valitunToimialanIndeksi)\n  //let toimialanVerotYhteensa = toimialojenVeroarvot[valitunToimialanIndeksi]\n\n  let toimialanVerotKM = toimialojenVeroarvot[valitunToimialanIndeksi + 1];\n  let toimialanLkm = toimialojenLkmKunnalla[i];\n  let toimialanVerotPerKunta = toimialanLkm * toimialanVerotKM;\n  return toimialanVerotPerKunta;\n}\n\nconst App = () => {\n  const _useState = useState('paikkakunnat'),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const toPage = page => event => {\n    event.preventDefault();\n    setPage(page);\n  };\n\n  const content = () => {\n    if (page === 'paikkakunnat') {\n      return React.createElement(Paikkakunnat, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      });\n    } else if (page === 'toimialat') {\n      return React.createElement(ToimialatValilehti, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row justify-content-md-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('toimialat'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, \"Toimialat\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('paikkakunnat'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, \"Paikkakunnat\"))), content());\n}; //HUOM PAIKKAKUNNAT\n//KOMPONENTTI JOKA piirtää PAIKKAKUNNAT sivulle kaiken\n\n\nconst Paikkakunnat = () => {\n  const _useState3 = useState('tietoja'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        page = _useState4[0],\n        setPage = _useState4[1];\n\n  const toPage = page => event => {\n    event.preventDefault();\n    setPage(page);\n  };\n\n  const content = () => {\n    if (page === 'tietoja') {\n      return React.createElement(Tietoja, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      });\n    } else if (page === 'suhdeluku') {\n      return React.createElement(Suhdeluku, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      });\n    }\n  }; // State joka pitää muistissa indeksiä \n\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        counter = _useState6[0],\n        setCounter = _useState6[1];\n\n  const setToValue = value => setCounter(value); //paikkakuntatiedot parsittuna omiin taulukkoihin\n\n\n  var kuntienAsLuvut = luoPKtaulukko(0);\n  var vlMuutokset = luoPKtaulukko(1);\n  var tyoAsteet = luoPKtaulukko(2);\n  var tpLukumaarat = luoPKtaulukko(3);\n  const vaakunat = datavaakunat.selection1;\n  var nimiTaulukko = [];\n  var kuntienIit = []; //var vaakunaTaulukko = [];\n  // kuntien nimet taulukkoon\n\n  for (var x in kuntienNimet) {\n    nimiTaulukko.push(kuntienNimet[x]);\n  }\n\n  var toimialojenNimet = [];\n\n  for (let x in toimialatJaIndeksit.label) {\n    toimialojenNimet.push(toimialatJaIndeksit.label[x]);\n  }\n\n  var toimialojenIndeksit = [];\n\n  for (let x in toimialatJaIndeksit.index) {\n    toimialojenIndeksit.push(toimialatJaIndeksit.index[x]);\n  }\n\n  var toimiAJaI = {};\n\n  for (let i = 0; i < toimialojenNimet.length; i++) {\n    let avain = toimialojenIndeksit[i];\n    let arvo = toimialojenNimet[i];\n    toimiAJaI[avain] = arvo;\n  } //toimialat ja niiden indeksit avain-arvo pareina listassa\n\n\n  const toimiAlatJarj = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(toimiAJaI).sort().forEach(function (key) {\n    toimiAlatJarj[key] = toimiAJaI[key];\n  }); //console.log(toimiAlatJarj)\n  // käyttäjän valitseman kunnan toimialatiedot taulukossa \n\n  var kunnantoimialat = parsiKunnanToimialat(counter, toimiAlatJarj);\n  var EriToimialojenLkmKunnassa;\n\n  for (let i = 0; i < kunnantoimialat.length; i++) {\n    if (kunnantoimialat[i] <= 0) EriToimialojenLkmKunnassa++;\n  }\n\n  console.log(kunnantoimialat);\n  var kokoSuomenToimialojenLkmt = parsiKunnanToimialat(0, toimiAlatJarj); //console.log(kokoSuomenToimialatLkm)\n  // kuntien indeksit taulukkoon\n\n  for (let x in kuntienIndeksit) {\n    kuntienIit.push(kuntienIndeksit[x]);\n  }\n\n  var paastotToimialat = dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category; //var toimialatJaTunnukset = paastotToimialat.label\n\n  var paastojenToimialatJarj = jarjestaIndekseittain(paastotToimialat);\n  var paastotToimialoittain2008 = parsiPaastotVuodelta(0);\n  var TAtunnuksetJaPaastoarvot = {};\n\n  for (let i = 0; i < Object.keys(paastojenToimialatJarj).length; i++) {\n    let s = paastojenToimialatJarj[i];\n    let avain = s.substr(0, s.indexOf(' ')).trim();\n    let arvo = paastotToimialoittain2008[i];\n    TAtunnuksetJaPaastoarvot[avain] = arvo;\n  }\n\n  var avain;\n  var arvo;\n  var nimetJaIndeksit = {}; // valintalista kunnista, indeksöi samalla 0->n\n  // kuntien nimet ja indeksit mapitettuna yhteen objektilistaan\n\n  for (var i = 0; i < nimiTaulukko.length; i++) {\n    avain = kuntienIit[i];\n    arvo = nimiTaulukko[i];\n    nimetJaIndeksit[avain] = arvo;\n  }\n\n  const jarjestetty = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(nimetJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = nimetJaIndeksit[key];\n  }); // Kuntien nimien erotus järjestetystä objektilistasta taulukkoon\n\n  var nimetJarjestyksessa = [];\n\n  for (let x in jarjestetty) {\n    nimetJarjestyksessa.push(jarjestetty[x]);\n  } // verotiedot parsittuna omiin taulukoihin\n\n\n  var tulonsaajat = luoVeroTaulukko(0);\n  var veronalaisetTulotKeskimaarin = luoVeroTaulukko(1);\n  var ansioTulotKeskimaarin = luoVeroTaulukko(2);\n  var verotYhteensaKeskimaarin = luoVeroTaulukko(3);\n  var valtionVeroKeskimaarin = luoVeroTaulukko(4);\n  var kunnallisVeroKeskimaarin = luoVeroTaulukko(5); // Hakutoiminto, ottaa inputista valuen ja vertaa sitä selectin valueihin\n  // piilottaa valuet, jotka eivät vastaa hakusanaa\n\n  var select;\n  var haettava;\n\n  const etsiPaikkakunta = hakusana => {\n    haettava = hakusana.target.value;\n    select = document.getElementById(\"listaKunnista\");\n\n    for (var i = 0; i < select.length; i++) {\n      var txt = select[i].text;\n      var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n      select.options[i].style.display = include ? '' : 'none';\n    }\n  }; //var asukasLukuI;\n\n\n  var listaI; // ottaa selectistä valuen ja asettaa sen countteriin\n\n  const tulosta = listaValittu => {\n    listaI = listaValittu.target.value;\n    setToValue(listaI);\n  }; // asukasluvut löytyvät taulukosta neljän indeksin välein ([0,4,8,...])\n\n\n  var asukaslukuInd = 0; //alustetaan muuttujat\n\n  var indeksi;\n  var paastot;\n  var verot;\n  var ohita;\n  var monesko;\n  var monesko2;\n  var lista;\n  var tulostus;\n  var suhdeluvut;\n  var suhdeluku; //console.log(toimiAlatJarj)\n\n  var toimialatYlaotsikot = [];\n\n  for (let i = 0; i < Object.keys(toimiAlatJarj).length; i++) {\n    let tAla = toimiAlatJarj[i];\n    let alkutunnus = tAla.substr(0, tAla.indexOf(' ')).trim();\n    if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue;\n    toimialatYlaotsikot.push(toimiAlatJarj[i]);\n  } //console.log(toimialatYlaotsikot)\n\n\n  function alustaMuuttujat() {\n    indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, Number.MAX_VALUE);\n    paastot = etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi);\n    verot = etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi);\n    ohita = Number.MAX_VALUE;\n    monesko = \"\";\n    monesko2 = 1;\n    lista = [];\n    tulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, indeksi);\n    suhdeluvut = [];\n    suhdeluku = -1; //jos suhdelukua ei voi laskea\n  }\n\n  const Tietoja = () => {\n    alustaMuuttujat();\n\n    for (i = 0; i < 10; i++) {\n      indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, ohita);\n      paastot = etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi);\n      verot = etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi);\n      tulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, indeksi);\n\n      if (!isNaN(paastot)) {\n        paastot = paastot + \" tonnia kasvihuonekaasuja\";\n        verot = verot + \"€\";\n      } else {\n        paastot = \"Päästötietoja ei saatavilla\";\n        verot = verot + \"€\";\n      }\n\n      ohita = indeksi;\n      lista.push(React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, \"Toimialoja \", monesko, \" eniten: \"), \" \", tulostus, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }), \" \", React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, \"Toimialan p\\xE4\\xE4st\\xF6t kunnalla keskim\\xE4\\xE4rin: \"), paastot, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }), \" \", React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, \"Toimialan verot kunnalla keskim\\xE4\\xE4rin: \"), lukupilkuilla(verot)));\n      monesko2++;\n      monesko = monesko2 + \".\";\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, lista);\n  };\n\n  const Suhdeluku = () => {\n    alustaMuuttujat();\n\n    for (let i = 0; i < toimialatYlaotsikot.length; i++) {\n      indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, ohita); //console.log(toimiAlatJarj[indeksi])\n\n      paastot = etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi); //console.log(paastot)\n\n      verot = etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi); //console.log(verot)\n\n      if (!isNaN(paastot) && paastot > 0) {\n        suhdeluku = verot / paastot;\n      } else {\n        suhdeluku = -1;\n      }\n\n      console.log(suhdeluku);\n      if (paastot == 0) continue;\n      suhdeluvut.push({\n        suhde: suhdeluku,\n        toimiala: indeksi\n      });\n      ohita = indeksi;\n    }\n\n    console.log(suhdeluvut);\n    let suhdeluvutJarj = suhdeluvut.sort(function (a, b) {\n      return b.suhde - a.suhde;\n    }); //console.log(suhdeluvutJarj)\n\n    alustaMuuttujat();\n\n    for (let i = 0; i < suhdeluvutJarj.length; i++) {\n      paastot = etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, suhdeluvutJarj[i].toimiala);\n      verot = etsiVerot(toimiAlatJarj, kunnantoimialat, suhdeluvutJarj[i].toimiala);\n      tulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, suhdeluvutJarj[i].toimiala); // Jos suhdelukua ei ole laskettu (eli on -1) ohitetaan listaan pushaus\n\n      if (suhdeluvutJarj[i].suhde != -1) {\n        lista.push(React.createElement(\"li\", {\n          class: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 616\n          },\n          __self: this\n        }, React.createElement(\"small\", {\n          class: \"text-muted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 616\n          },\n          __self: this\n        }, monesko, \" Paras hy\\xF6tysuhde: \"), \" \", tulostus, React.createElement(\"small\", {\n          class: \"text-muted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 617\n          },\n          __self: this\n        }, \" Suhdeluku: \"), suhdeluvutJarj[i].suhde, \" \"));\n      }\n\n      monesko2++;\n      monesko = monesko2 + \".\"; //ohita = kunnantoimialat[indeksi]\n    } //console.log(lista)\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    }, lista);\n  };\n\n  return (// Bootstrapin pääcontainer\n    React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"search\",\n      name: \"search\",\n      placeholder: \"Hae...\",\n      onKeyUp: etsiPaikkakunta,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    })), React.createElement(\"select\", {\n      id: \"listaKunnista\",\n      className: \"form-control\",\n      size: \"30\",\n      onChange: tulosta,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652\n      },\n      __self: this\n    }, nimetJarjestyksessa.map(s => React.createElement(\"option\", {\n      value: asukaslukuInd++,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654\n      },\n      __self: this\n    }, s)))), React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tiedotheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670\n      },\n      __self: this\n    }, nimetJarjestyksessa[counter]), React.createElement(\"img\", {\n      src: vaakunat[counter].image,\n      alt: \"new\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      class: \"list-group list-group-horizontal list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }, \"Kunnan asukasluku: \"), kuntienAsLuvut[counter]), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }, \"V\\xE4kiluvun muutos edellisest\\xE4 vuodesta: \"), \" \", vlMuutokset[counter] + \"%\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681\n      },\n      __self: this\n    }, \"Ty\\xF6llisyysaste: \"), \" \", tyoAsteet[counter] + \"%\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }, \"Ty\\xF6paikkojen lukum\\xE4\\xE4r\\xE4: \"), \" \", tpLukumaarat[counter]), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }, \"Tulonsaajia: \"), \" \", tulonsaajat[counter])), React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }, \"Veronalaiset tulot keskim\\xE4\\xE4rin: \"), \" \", veronalaisetTulotKeskimaarin[counter], React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }, \" \\u20AC/vuosi \"), \" \"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }, \"Ansiotulot keskim\\xE4\\xE4rin: \"), \" \", ansioTulotKeskimaarin[counter], React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }, \" \\u20AC/vuosi \")), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }, \"Verot yhteens\\xE4 keskim\\xE4\\xE4rin: \"), \" \", verotYhteensaKeskimaarin[counter], React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }, \" \\u20AC/vuosi \")), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691\n      },\n      __self: this\n    }, \"Valtionvero keskim\\xE4\\xE4rin: \"), \" \", valtionVeroKeskimaarin[counter], React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691\n      },\n      __self: this\n    }, \" \\u20AC/vuosi \")), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692\n      },\n      __self: this\n    }, \"Kunnallisvero keskim\\xE4\\xE4rin: \"), \" \", kunnallisVeroKeskimaarin[counter], React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692\n      },\n      __self: this\n    }, \" \\u20AC/vuosi \")))))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn-group btn-group-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"aria-pressed\": \"true\",\n      onClick: toPage('tietoja'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706\n      },\n      __self: this\n    }, \"Tietoja\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"aria-pressed\": \"true\",\n      onClick: toPage('suhdeluku'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    }, \"Hy\\xF6tysuhteet\")), content())))))\n  );\n};\n\nReactDOM.render(React.createElement(App, null), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tuomo/PROJEKTITYÖ/ryhmatyo/tklaskuri/src/index.js"],"names":["React","useState","ReactDOM","data","datavaakunat","dataverot","datatoimialatKunnittain","ToimialatValilehti","dataPaastot","dataToimialojenVerot","lukupilkuilla","x","undefined","toString","replace","kuntienNimet","dataset","dimension","category","label","pktiedot","value","kuntienIndeksit","index","veroTietojenVuodet","Object","keys","Vuosi","verokategoriat","Tiedot","verotiedot","toimialojenMaarat","toimialatJaIndeksit","Toimiala2008","luoPKtaulukko","sarakeNro","taulukko","i","j","length","luoVeroTaulukko","solujenLkmPerVuosi","verodata2017indeksi","parsiKunnanToimialat","kunnanIndeksi","toimialat","toimialojenLkm","kunnanToimialojenLkmt","alkuindeksi","push","etsiSuurimmanI","tAlaNimet","tAlaLkm","ohita","suurin","suurimmanI","s","alkutunnus","substr","indexOf","trim","isNaN","parseInt","tulostaToimialat","toimialojenNimet","jarjestaIndekseittain","datasetti","labelit","indeksit","labelitJaIndeksit","avain","arvo","jarjestetty","sort","forEach","key","parsiPaastotVuodelta","vuodenIndeksi","paastoTaulukko","vuodenPaastot","etsiPaastot","toimialojenPaastot","toimialojenLkmSuomessa","toimialojenLkmKunnalla","toimialanLkmSuomessa","toimialanLkmKunnassa","toimiala","toimialanPaastot","toimialanPaastotKM","kokonaisPaastotKunnassa","etsiVerot","veroToimialat","Toimiala","toimialojenVeroarvot","vuoden2017Indeksi","solujenLkmPerToimiala","aloitusindeksi2017","toimialojenVerot2017","valitunToimialanIndeksi","toimialanVerotKM","toimialanLkm","toimialanVerotPerKunta","App","page","setPage","toPage","event","preventDefault","content","Paikkakunnat","counter","setCounter","setToValue","kuntienAsLuvut","vlMuutokset","tyoAsteet","tpLukumaarat","vaakunat","selection1","nimiTaulukko","kuntienIit","toimialojenIndeksit","toimiAJaI","toimiAlatJarj","kunnantoimialat","EriToimialojenLkmKunnassa","console","log","kokoSuomenToimialojenLkmt","paastotToimialat","paastojenToimialatJarj","paastotToimialoittain2008","TAtunnuksetJaPaastoarvot","nimetJaIndeksit","nimetJarjestyksessa","tulonsaajat","veronalaisetTulotKeskimaarin","ansioTulotKeskimaarin","verotYhteensaKeskimaarin","valtionVeroKeskimaarin","kunnallisVeroKeskimaarin","select","haettava","etsiPaikkakunta","hakusana","target","document","getElementById","txt","text","include","toLowerCase","startsWith","options","style","display","listaI","tulosta","listaValittu","asukaslukuInd","indeksi","paastot","verot","monesko","monesko2","lista","tulostus","suhdeluvut","suhdeluku","toimialatYlaotsikot","tAla","alustaMuuttujat","Number","MAX_VALUE","Tietoja","Suhdeluku","suhde","suhdeluvutJarj","a","b","map","image","render","createElement"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom'\nimport data from \"./kuntienavainluvut1\";\nimport './App.css';\nimport datavaakunat from \"./vaakunaKuvat\"\nimport dataverot from \"./verotietoja\"\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\"\nimport ToimialatValilehti from './toimialat'\nimport dataPaastot from \"./paastotToimialoittain\"\nimport dataToimialojenVerot from \"./toimialojenVerot2\"\n\n\n\nconst lukupilkuilla = (x) => {\n  if (x === undefined) return \"Ei tiedossa\";\n  else return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n}\n\n\n// objektilista kuntien nimistä\nconst kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label\n// objektilista asukasluvuista\nconst pktiedot = data.dataset.value\n// objektilista kuntien indekseistä\nconst kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index\n// vuodet 2005-2017 taulukossa indeksistä 0 alkaen\nconst veroTietojenVuodet = Object.keys(dataverot.dataset.dimension.Vuosi.category.label)\n// objektilista verotietoihin koskevista kategorioista\nconst verokategoriat = dataverot.dataset.dimension.Tiedot.category.label\n// verotiedot taulukossa\nconst verotiedot = dataverot.dataset.value\n// lista eri toimialoista\n//const toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label\n// toimialojen määrät taulukossa\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value\n// toimialat ja niitä vastaavat indeksit\nconst toimialatJaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category\n\n\n\n\n/** Parsii paikkakuntadataa omiin taulukoihin sarakenumeron perusteella.\n* @param {number} sarakeNro Paikkakuntadatan sarakenumero; kuntien as. luvut: 0, väkiluvunmuutokset: 1, työasteet: 2, työpaikkojen lkm: 3.\n* @returns Taulukko haluttua paikkakuntadataa\n*/\nfunction luoPKtaulukko(sarakeNro) {\n  var taulukko = [];\n  for (let i = sarakeNro, j = 0; i < pktiedot.length; i += 4, j++) {\n    taulukko[j] = pktiedot[i];\n  }\n  return taulukko;\n}\n\n/** Parsii verotiedot omaan taulukkoon sarakenumeron perusteella\n* @param {number} sarakeNro Verodatan sarakenumero; tulonsaajat: 0, veronalaiset tulot keskimäär: 1, ansiotulot km: 2, verot yhteensä km: 3,\n*                                                   valtion vero km: 4, kunnallisvero km: 5.\n* @returns Taulukko haluttua verodataa\n*/\nfunction luoVeroTaulukko(sarakeNro) {\n  var taulukko = [];\n  const solujenLkmPerVuosi = Object.keys(kuntienNimet).length * Object.keys(verokategoriat).length\n  var verodata2017indeksi = (veroTietojenVuodet.length - 1) * solujenLkmPerVuosi\n\n  for (let i = verodata2017indeksi + sarakeNro, j = 0; i < solujenLkmPerVuosi * veroTietojenVuodet.length; i += 6, j++) {\n    taulukko[j] = verotiedot[i];\n  }\n  return taulukko;\n}\n\n/** Parsii sovelluksessa valitun kunnan toimialatiedot yhteen taulukkoon.\n* Toimialojen määrät -datasetistä lasketaan oikea aloitusindeksi kunnan indeksin avulla.\n* @param {number} kunnanIndeksi Käyttäjän valitseman kunnan indeksi (koko maan toimialat indeksissä 0)\n* @param {list} toimialat Lista kaikista toimialoista\n* @returns Valitun kunnan toimialojen lukumäärät taulukossa\n*/\nfunction parsiKunnanToimialat(kunnanIndeksi, toimialat) {\n  var toimialojenLkm = Object.keys(toimialat).length\n  var kunnanToimialojenLkmt = [];\n  var alkuindeksi = kunnanIndeksi * toimialojenLkm;\n  //var alkuindeksi2;\n  //console.log(\"kunnani: \" + kunnanIndeksi)\n  //console.log(\"alkui: \" + alkuindeksi2)\n  //if (kunnanIndeksi == 1) alkuindeksi2 = 7 * toimialojenLkm\n  //else if (kunnanIndeksi > 1  && kunnanIndeksi < 8 ) alkuindeksi2 = alkuindeksi - toimialojenLkm\n  //else alkuindeksi2 = alkuindeksi\n  //console.log(\"alkui: \" + alkuindeksi2)\n\n\n\n  for (let i = alkuindeksi; i < (alkuindeksi + toimialojenLkm); i++) {\n    kunnanToimialojenLkmt.push(toimialojenMaarat[i]);\n  }\n  return kunnanToimialojenLkmt;\n\n}\n\n/** Etsii toimialan indeksin, jota löytyy eniten valitusta kunnasta.\n* Ohittaa parametrina annetun alkion ja sitä suuremmat, jotta funktiota voi käyttää myös\n* toiseksi suurimman etsintään (jne).\n* @param {list} tAlaNimet Toimialojen nimet järjestetyssä listassa\n* @param {array} tAlaLkm Valitun kunnan toimialojen lukumäärät taulukossa\n* @param {number} ohita Alkion indeksi, joka ja jota suuremmat ohitetaan\n* @returns Suurimman alkion indeksi, pl. ohitetut alkiot\n*/\nfunction etsiSuurimmanI(tAlaNimet, tAlaLkm, ohita) {\n  //console.log(tAlaLkm)\n  let suurin = 0\n  let suurimmanI = 0\n  for (let i = 0; i < tAlaLkm.length; i++) {\n    if (tAlaLkm[i] >= tAlaLkm[ohita]) continue;\n    if (tAlaLkm[i] > suurin) {\n      let s = tAlaNimet[i]\n      let alkutunnus = s.substr(0, s.indexOf(' ')).trim()\n      //console.log(alkutunnus)\n      //console.log(isNaN(parseInt(alkutunnus)))\n      if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue\n      //console.log(alkutunnus)\n      suurin = tAlaLkm[i]\n      suurimmanI = i\n      //console.log(\"suurin: \" + suurin)\n    }\n  }\n  return suurimmanI\n\n}\n\n/** Muotoilee ja palauttaa merkkijonona annettua indeksiä vastaavan toimialan \n* nimen ja lukumäärän.\n* @param {list} toimialojenNimet Toimialat ja niiden indeksit listassa avain-arvo pareina.\n* @param {array} toimialojenLkm Valitun kunnan toimialojen lukumäärät taulukossa.\n* @param {number} i Toimialan indeksi\n* @returns Merkkijono muotoa \"[toimialan nimi] : [toimialan lkm valitussa kunnassa]\"\n*/\nfunction tulostaToimialat(toimialojenNimet, toimialojenLkm, i) {\n  //console.log(eniten)\n  //let suurin = 0;\n  //let toiseksiSuurin = etsiSuurin(toimialojenLkm, suurin)\n  //let kolmas = etsiSuurin(toimialojenLkm, toiseksiSuurin)\n\n  //let suurimmanIndeksi = toimialojenLkm.indexOf(eniten)\n  //let indeksi2 = toimialojenLkm.indexOf(toiseksiSuurin)\n  //console.log(suurimmanIndeksi)\n  //console.log(suurin)\n  //console.log(toiseksiSuurin)\n  //console.log(kolmas)\n  let s = toimialojenNimet[i] + \" : \" + toimialojenLkm[i]\n  return s.substr(s.indexOf(' ') + 1).trim()\n  //return toimialojenNimet[i] + \" : \" + toimialojenLkm[i] + \" \"\n}\n\n/** Järjestää annetun datasetin indeksien perusteella suuruusjärjestykseen.\n* @param {list} datasetti Lista-pari labeleista ja indekseistä\n* @returns Avain-arvo lista indekseistä ja labeleista\n*/\nfunction jarjestaIndekseittain(datasetti) {\n  var labelit = []\n  for (let x in datasetti.label) {\n    labelit.push(datasetti.label[x])\n  }\n\n  var indeksit = []\n  for (let x in datasetti.index) {\n    indeksit.push(datasetti.index[x])\n  }\n\n  var labelitJaIndeksit = {}\n  for (let i = 0; i < Object.keys(datasetti.label).length; i++) {\n    let avain = indeksit[i];\n    let arvo = labelit[i];\n    labelitJaIndeksit[avain] = arvo;\n  }\n\n  //toimialat ja niiden indeksit avain-arvo pareina listassa\n  let jarjestetty = {};\n  // objektilistan järjestys avainarvon eli indeksin mukaan\n  Object.keys(labelitJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = labelitJaIndeksit[key];\n  });\n  return jarjestetty\n\n}\n\n/** Parsii jokaisen toimialan päästöt tietyltä vuodelta.\n* @param {number} vuodenIndeksi Halutun vuoden indeksi, alkaen 0: 2008, 1: 2009, 2:2010 etc.\n* @returns Taulukko toimialojen päästöarvoista (pelkät arvot)\n*/\nfunction parsiPaastotVuodelta(vuodenIndeksi) {\n  var paastoTaulukko = dataPaastot.dataset.value\n  let toimialojenLkm = Object.keys(dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category.label).length\n  var vuodenPaastot = []\n  let alkuindeksi = vuodenIndeksi * toimialojenLkm\n\n  for (let i = alkuindeksi; i < alkuindeksi + toimialojenLkm; i++) {\n    vuodenPaastot.push(paastoTaulukko[i])\n  }\n  return vuodenPaastot\n\n}\n\n/** Etsii indeksiä vastaavan toimialan päästöarvon, ja laskee toimialan keskimääräiset päästöt\n* valitussa kunnassa.\n* @param {list} toimialat Lista toimialoista ja niiden indekseistä avain-arvo pareina\n* @param {list} toimialojenPaastot Lista-pari toimialojen päästöistä ja niiden indekseistä\n* @param {array} toimialojenLkmSuomessa Taulukko toimialojen lukumääristä koko suomessa\n* @param {array} toimialojenLkmKunnalla Taulukko toimialojen lukumääristä käyttäjän valitsemassa kunnassa\n* @param {number} i Indeksi jolla valitaan haluttu toimiala\n* @returns Toimialan keskimääräiset päästöt kunnassa, NaN jos ei saatavilla\n*/\nfunction etsiPaastot(toimialat, toimialojenPaastot, toimialojenLkmSuomessa, toimialojenLkmKunnalla, i) {\n  let toimialanLkmSuomessa = toimialojenLkmSuomessa[i]\n  let toimialanLkmKunnassa = toimialojenLkmKunnalla[i]\n  //console.log(\"asd: \" +  toimialanLkmKunnassa)\n  let toimiala = toimialat[i]\n  let alkutunnus = toimiala.substr(0, toimiala.indexOf(' ')).trim()\n  let toimialanPaastot = toimialojenPaastot[alkutunnus]\n  let toimialanPaastotKM = toimialanPaastot / toimialanLkmSuomessa\n  let kokonaisPaastotKunnassa = toimialanPaastotKM * toimialanLkmKunnassa\n  //console.log(\"asdf: \" +  kokonaisPaastotKunnassa)\n  return kokonaisPaastotKunnassa\n}\n\n/** Etsii indeksiä vastaavan toimialan verotiedot, ja laskee toimialan keskimääräiset verotulot\n* valitussa kunnassa.\n* @param {list} toimialat Lista toimialoista ja niiden indekseistä avain-arvo pareina\n* @param {array} toimialojenLkmKunnalla Taulukko toimialojen lukumääristä käyttäjän valitsemassa kunnassa\n* @param {number} i Indeksi jolla valitaan haluttu toimiala\n* @returns Toimialan keskimääräiset veromaksut kunnassa, NaN jos ei saatavilla\n*/\nfunction etsiVerot(toimialat, toimialojenLkmKunnalla, i) {\n  let toimiala = toimialat[i]\n  let alkutunnus = toimiala.substr(0, toimiala.indexOf(' ')).trim()\n  const veroToimialat = dataToimialojenVerot.dataset.dimension.Toimiala.category\n  let toimialojenLkm = Object.keys(veroToimialat.label).length\n  let toimialojenVeroarvot = dataToimialojenVerot.dataset.value\n  let vuoden2017Indeksi = 3\n  let solujenLkmPerToimiala = 2\n  let aloitusindeksi2017 = toimialojenLkm * vuoden2017Indeksi * solujenLkmPerToimiala\n  let toimialojenVerot2017 = []\n  for (let j = aloitusindeksi2017; j < aloitusindeksi2017 + toimialojenLkm; j++) {\n    toimialojenVerot2017.push(toimialojenVeroarvot[j])\n  }\n\n  //console.log(veroToimialat.index[alkutunnus])\n  let valitunToimialanIndeksi = + aloitusindeksi2017 + veroToimialat.index[alkutunnus] * solujenLkmPerToimiala\n  //console.log(valitunToimialanIndeksi)\n  //let toimialanVerotYhteensa = toimialojenVeroarvot[valitunToimialanIndeksi]\n  let toimialanVerotKM = toimialojenVeroarvot[valitunToimialanIndeksi + 1]\n  let toimialanLkm = toimialojenLkmKunnalla[i]\n  let toimialanVerotPerKunta = toimialanLkm * toimialanVerotKM\n  return toimialanVerotPerKunta\n}\n\n\nconst App = () => {\n\n  const [page, setPage] = useState('paikkakunnat')\n\n  const toPage = (page) => (event) => {\n    event.preventDefault()\n    setPage(page)\n  }\n\n\n\n\n\n  const content = () => {\n    if (page === 'paikkakunnat') {\n      return <Paikkakunnat />\n    } else if (page === 'toimialat') {\n      return <ToimialatValilehti />\n    }\n  }\n\n\n\n\n\n  return (\n\n\n    <div>\n\n      <div className=\"row justify-content-md-center\">\n\n        <div className=\"btn-group btn-group-lg\">\n          <button type=\"button\" className=\"btn btn-primary\" aria-pressed=\"true\" onClick={toPage('toimialat')}>Toimialat</button>\n          <button type=\"button\" className=\"btn btn-primary\" aria-pressed=\"true\" onClick={toPage('paikkakunnat')}>Paikkakunnat</button>\n        </div>\n\n\n      </div>\n      {content()}\n    </div>\n  )\n\n\n}\n\n\n//HUOM PAIKKAKUNNAT\n//KOMPONENTTI JOKA piirtää PAIKKAKUNNAT sivulle kaiken\nconst Paikkakunnat = () => {\n\n\n\n\n\n  const [page, setPage] = useState('tietoja')\n\n  const toPage = (page) => (event) => {\n    event.preventDefault()\n    setPage(page)\n  }\n\n\n\n  const content = () => {\n    if (page === 'tietoja') {\n      return <Tietoja />\n    } else if (page === 'suhdeluku') {\n      return <Suhdeluku />\n    }\n  }\n\n\n\n\n  // State joka pitää muistissa indeksiä \n  const [counter, setCounter] = useState(0)\n  const setToValue = (value) => setCounter(value)\n\n\n  //paikkakuntatiedot parsittuna omiin taulukkoihin\n  var kuntienAsLuvut = luoPKtaulukko(0);\n  var vlMuutokset = luoPKtaulukko(1);\n  var tyoAsteet = luoPKtaulukko(2);\n  var tpLukumaarat = luoPKtaulukko(3);\n\n\n  const vaakunat = datavaakunat.selection1\n\n\n\n  var nimiTaulukko = [];\n  var kuntienIit = [];\n  //var vaakunaTaulukko = [];\n\n\n\n\n  // kuntien nimet taulukkoon\n  for (var x in kuntienNimet) {\n    nimiTaulukko.push(kuntienNimet[x]);\n  }\n\n  var toimialojenNimet = []\n  for (let x in toimialatJaIndeksit.label) {\n    toimialojenNimet.push(toimialatJaIndeksit.label[x])\n  }\n\n  var toimialojenIndeksit = []\n  for (let x in toimialatJaIndeksit.index) {\n    toimialojenIndeksit.push(toimialatJaIndeksit.index[x])\n  }\n\n  var toimiAJaI = {}\n  for (let i = 0; i < toimialojenNimet.length; i++) {\n    let avain = toimialojenIndeksit[i];\n    let arvo = toimialojenNimet[i];\n    toimiAJaI[avain] = arvo;\n  }\n\n  //toimialat ja niiden indeksit avain-arvo pareina listassa\n  const toimiAlatJarj = {};\n  // objektilistan järjestys avainarvon eli indeksin mukaan\n  Object.keys(toimiAJaI).sort().forEach(function (key) {\n    toimiAlatJarj[key] = toimiAJaI[key];\n  });\n\n  //console.log(toimiAlatJarj)\n  // käyttäjän valitseman kunnan toimialatiedot taulukossa \n  var kunnantoimialat = parsiKunnanToimialat(counter, toimiAlatJarj);\n\n  var EriToimialojenLkmKunnassa;\n\n  for (let i = 0; i < kunnantoimialat.length; i++){\n    if (kunnantoimialat[i] <= 0) EriToimialojenLkmKunnassa++;\n  }\n  console.log(kunnantoimialat)\n\n\n\n  var kokoSuomenToimialojenLkmt = parsiKunnanToimialat(0, toimiAlatJarj)\n  //console.log(kokoSuomenToimialatLkm)\n\n\n\n\n\n  // kuntien indeksit taulukkoon\n  for (let x in kuntienIndeksit) {\n    kuntienIit.push(kuntienIndeksit[x]);\n  }\n\n  var paastotToimialat = dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category\n  //var toimialatJaTunnukset = paastotToimialat.label\n\n  var paastojenToimialatJarj = jarjestaIndekseittain(paastotToimialat)\n\n\n  var paastotToimialoittain2008 = parsiPaastotVuodelta(0)\n  var TAtunnuksetJaPaastoarvot = {}\n  for (let i = 0; i < Object.keys(paastojenToimialatJarj).length; i++) {\n    let s = paastojenToimialatJarj[i]\n    let avain = s.substr(0, s.indexOf(' ')).trim()\n    let arvo = paastotToimialoittain2008[i]\n    TAtunnuksetJaPaastoarvot[avain] = arvo\n  }\n\n\n  var avain;\n  var arvo;\n  var nimetJaIndeksit = {};\n\n\n  // valintalista kunnista, indeksöi samalla 0->n\n\n\n\n  // kuntien nimet ja indeksit mapitettuna yhteen objektilistaan\n  for (var i = 0; i < nimiTaulukko.length; i++) {\n    avain = kuntienIit[i];\n    arvo = nimiTaulukko[i];\n    nimetJaIndeksit[avain] = arvo;\n  }\n\n  const jarjestetty = {};\n  // objektilistan järjestys avainarvon eli indeksin mukaan\n  Object.keys(nimetJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = nimetJaIndeksit[key];\n  });\n\n  // Kuntien nimien erotus järjestetystä objektilistasta taulukkoon\n  var nimetJarjestyksessa = [];\n  for (let x in jarjestetty) {\n    nimetJarjestyksessa.push(jarjestetty[x]);\n  }\n\n\n  // verotiedot parsittuna omiin taulukoihin\n  var tulonsaajat = luoVeroTaulukko(0);\n  var veronalaisetTulotKeskimaarin = luoVeroTaulukko(1);\n  var ansioTulotKeskimaarin = luoVeroTaulukko(2);\n  var verotYhteensaKeskimaarin = luoVeroTaulukko(3);\n  var valtionVeroKeskimaarin = luoVeroTaulukko(4);\n  var kunnallisVeroKeskimaarin = luoVeroTaulukko(5);\n\n\n\n\n  // Hakutoiminto, ottaa inputista valuen ja vertaa sitä selectin valueihin\n  // piilottaa valuet, jotka eivät vastaa hakusanaa\n  var select\n  var haettava\n\n\n  const etsiPaikkakunta = (hakusana) => {\n\n    haettava = hakusana.target.value\n    \n    select = document.getElementById(\"listaKunnista\");\n    for (var i = 0; i < select.length; i++) {\n      var txt = select[i].text\n      var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n      select.options[i].style.display = include ? '' : 'none';\n    }\n\n  }\n\n  //var asukasLukuI;\n  var listaI;\n\n  // ottaa selectistä valuen ja asettaa sen countteriin\n  const tulosta = (listaValittu) => {\n\n    listaI = listaValittu.target.value\n    setToValue(listaI)\n\n  }\n\n  // asukasluvut löytyvät taulukosta neljän indeksin välein ([0,4,8,...])\n  var asukaslukuInd = 0;\n\n  //alustetaan muuttujat\n  var indeksi\n  var paastot\n  var verot \n  var ohita \n  var monesko \n  var monesko2\n  var lista\n  var tulostus\n  var suhdeluvut\n  var suhdeluku\n\n  //console.log(toimiAlatJarj)\n  var toimialatYlaotsikot = []\n  for (let i = 0; i < Object.keys(toimiAlatJarj).length; i++){\n    let tAla = toimiAlatJarj[i]\n    let alkutunnus = tAla.substr(0, tAla.indexOf(' ')).trim()\n    if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue\n    toimialatYlaotsikot.push(toimiAlatJarj[i])\n  }\n  //console.log(toimialatYlaotsikot)\n\n  function alustaMuuttujat() {\n    indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, Number.MAX_VALUE)\n    paastot = etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi)\n    verot = etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi)\n    ohita = Number.MAX_VALUE;\n    monesko = \"\"\n    monesko2 = 1\n    lista = []\n    tulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, indeksi)\n    suhdeluvut = []\n    suhdeluku = -1 //jos suhdelukua ei voi laskea\n  }\n  \n\n  const Tietoja = () => {\n    alustaMuuttujat();\n\n    for (i = 0; i < 10; i++) {\n      indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, ohita)\n      paastot = etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi)\n      verot = etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi)\n      tulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, indeksi)\n\n      if (!isNaN(paastot)) {\n        paastot = paastot + \" tonnia kasvihuonekaasuja\"\n        verot = verot + \"€\"\n      }\n      else {\n        paastot = \"Päästötietoja ei saatavilla\"\n        verot = verot + \"€\"\n      }\n      ohita = indeksi\n\n      lista.push (<li class=\"list-group-item\">\n                  <small class=\"text-muted\">Toimialoja {monesko} eniten: </small> {tulostus}\n                  <br></br> <small class=\"text-muted\">Toimialan päästöt kunnalla keskimäärin: </small>{paastot}\n                  <br></br> <small class=\"text-muted\">Toimialan verot kunnalla keskimäärin: </small>{lukupilkuilla(verot)}\n        </li>)\n\n      monesko2++\n      monesko = monesko2 + \".\"\n        \n      \n    }\n  \n    return (\n      <div>\n        {lista}\n      </div>\n    )\n  }\n\n\n  const Suhdeluku = () => {\n  \n    alustaMuuttujat();\n\n    for (let i = 0; i < toimialatYlaotsikot.length; i++) {\n\n      indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, ohita)\n      //console.log(toimiAlatJarj[indeksi])\n      \n      paastot = etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi)\n      //console.log(paastot)\n      verot = etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi)\n      //console.log(verot)\n      \n      if (!isNaN(paastot) && paastot > 0) {\n        suhdeluku = verot / paastot\n      }\n      else {\n        suhdeluku = -1;\n      }\n      console.log(suhdeluku)\n      if (paastot == 0) continue;\n      suhdeluvut.push({suhde: suhdeluku, toimiala: indeksi})\n\n      ohita = indeksi\n    }\n\n    console.log(suhdeluvut)\n    let suhdeluvutJarj = suhdeluvut.sort(function(a, b) {\n      return b.suhde - a.suhde;\n    });\n    //console.log(suhdeluvutJarj)\n \n    alustaMuuttujat();\n\n    for (let i = 0; i < suhdeluvutJarj.length; i++){\n      \n\n      paastot = etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, suhdeluvutJarj[i].toimiala)\n      verot = etsiVerot(toimiAlatJarj, kunnantoimialat, suhdeluvutJarj[i].toimiala)\n\n      tulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, suhdeluvutJarj[i].toimiala)\n\n      // Jos suhdelukua ei ole laskettu (eli on -1) ohitetaan listaan pushaus\n      if (suhdeluvutJarj[i].suhde != -1) {\n\n      lista.push (<li class=\"list-group-item\"><small class=\"text-muted\">{monesko} Paras hyötysuhde: </small> {tulostus}\n                  <small class=\"text-muted\"> Suhdeluku: </small>{suhdeluvutJarj[i].suhde} </li>)\n\n      }\n\n      monesko2++\n      monesko = monesko2 + \".\"\n\n      //ohita = kunnantoimialat[indeksi]\n\n    }\n    //console.log(lista)\n\n  \n    return (\n      <div>\n        {lista}\n      </div>\n    )\n  }\n\n\n  return (\n    // Bootstrapin pääcontainer\n    <div className=\"container\">\n\n\n\n      <div className=\"row\">\n        <div className=\"col-sm\">\n\n          <div>\n\n            <input type=\"text\" className=\"form-control\" id=\"search\" name=\"search\" placeholder=\"Hae...\" onKeyUp={etsiPaikkakunta} />\n          </div>\n\n          <select id=\"listaKunnista\" className=\"form-control\" size=\"30\" onChange={tulosta} >\n\n            {nimetJarjestyksessa.map(s => (<option value={asukaslukuInd++}>{s}</option>))}\n          </select>\n\n        </div>\n\n        <div className=\"col-10\">\n\n\n\n\n\n          \n          <div className=\"row\">\n            <div class=\"col jumbotron\">\n\n              <div className=\"tiedotheader\">\n                <h4 align=\"center\">{nimetJarjestyksessa[counter]}</h4>\n\n                <img src={vaakunat[counter].image} alt=\"new\" align=\"center\" />\n              </div>\n\n              <ul class=\"list-group list-group-horizontal list-group-flush\">\n\n                <ul class=\"list-group\">\n\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Kunnan asukasluku: </small>{kuntienAsLuvut[counter]}</li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Väkiluvun muutos edellisestä vuodesta: </small> {vlMuutokset[counter] + \"%\"}</li>\n                  <li class=\"list-group-item\"> <small class=\"text-muted\">Työllisyysaste: </small> {tyoAsteet[counter] + \"%\"}</li>\n                  <li class=\"list-group-item\"> <small class=\"text-muted\">Työpaikkojen lukumäärä: </small> {tpLukumaarat[counter]}</li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Tulonsaajia: </small> {tulonsaajat[counter]}</li>\n                </ul>\n\n                <ul class=\"list-group\">\n\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Veronalaiset tulot keskimäärin: </small> {veronalaisetTulotKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small> </li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Ansiotulot keskimäärin: </small> {ansioTulotKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small></li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Verot yhteensä keskimäärin: </small> {verotYhteensaKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small></li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Valtionvero keskimäärin: </small> {valtionVeroKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small></li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Kunnallisvero keskimäärin: </small> {kunnallisVeroKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small></li>\n                </ul>\n\n              </ul>\n\n            </div>\n          </div>\n\n\n          <div class=\"row\">\n            <div class=\"col jumbotron\">\n\n\n              <div className=\"btn-group btn-group-sm\">\n                <button type=\"button\" className=\"btn btn-secondary\" aria-pressed=\"true\" onClick={toPage('tietoja')}>Tietoja</button>\n                <button type=\"button\" className=\"btn btn-secondary\" aria-pressed=\"true\" onClick={toPage('suhdeluku')}>Hyötysuhteet</button>\n              </div>\n\n              {content()}\n\n\n            </div>\n\n          </div>\n\n        </div>\n\n\n\n\n      </div>\n    </div>\n  )\n\n\n\n\n}\n\nReactDOM.render(\n  React.createElement(App, null),\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}