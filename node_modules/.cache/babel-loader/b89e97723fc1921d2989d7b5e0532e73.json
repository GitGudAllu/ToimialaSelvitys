{"ast":null,"code":"import _slicedToArray from \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/src/toimialat.js\";\nimport React, { useState } from 'react';\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\";\nimport dataToimialojenVerot from \"./toimialojenVerot\";\nimport dataPaastot from \"./paastotToimialoittain\";\nimport FadeIn from 'react-fade-in'; // asetetaan dataa jsoneista muuttujiin\n\nconst toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label;\nconst toimialaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.index;\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value;\nconst kuntienIndeksit = datatoimialatKunnittain.dataset.dimension.Kunta.category.index;\nconst kuntienNimet = datatoimialatKunnittain.dataset.dimension.Kunta.category.label;\nconst nimiJaIndeksi = dataToimialojenVerot.dataset.dimension.Toimiala.category.index;\nconst toimialojenNimet = dataToimialojenVerot.dataset.dimension.Toimiala.category.label;\nconst toimialojenVerot = dataToimialojenVerot.dataset.value;\nconst toimialojenPaastot = dataPaastot.dataset.value;\nconst toimialojenPaastotIndeksit = dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category.index;\nconsole.log(\"toimialalista \", toimialalista);\nconsole.log(datatoimialatKunnittain); //Pääkomponentti toimialoille\n\nconst Toimialat = () => {\n  // Counter pitää tiedossa valitun toimialan indeksin\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        setCounter = _useState2[1];\n\n  const setToValue = value => setCounter(value); //iso läjä listoja\n\n\n  var enitenKunnassa = [];\n  var kuntienNimetTop = [];\n  var kunnanAvain = [];\n  var verotaulukko = [];\n  var alataulukko = [];\n  var maarataulukko = [];\n  var kuntienToimialaLkm = [];\n  var paastotaulukko = [];\n  var toimialojenAvaimet = [];\n  var toimialojenVerotuloKA = [];\n  var toimialojenPaastotKA = [];\n  var kuntienToimialaSL = [];\n  var toimialaSL = [];\n  var kunnanNimiAvain;\n  var kuntienKaikkiToimialat = [];\n  var toimialojenLkm = Object.keys(toimialalista).length;\n  console.log(\"kuntien indeksit \", kuntienIndeksit[\"091\"]);\n  /*Jokaisen kunnan kaikki toimialat ovat peräkkäin listassa ositettuna \n  (n kpl koko suomen toimialoja, n kpl seuraavan kunnan toimialoja...)\n  Saadaksesi kunnan x kaikki toimialat, aloita ensimmäisestä kyseisen toimialan indeksistä\n  ja hyppää toimialojen lukumäärän verran eteenpäin. \n  */\n\n  function toimialanPaikkakunnat(counter) {\n    var haettavaIndeksi = toimialojenAvaimet[counter];\n    var ekaToimialanArvo = toimialaIndeksit[haettavaIndeksi];\n\n    for (let i = ekaToimialanArvo; i < toimialojenMaarat.length; i = i + toimialojenLkm) {\n      kuntienToimialaLkm.push(toimialojenMaarat[i]);\n    }\n\n    etsiEniten();\n    kunnanNimiAvain = haeAvain(kuntienIndeksit, enitenKunnassa[1]);\n  } //laskee toimialoille suhdeluvut\n\n\n  function laskeToimialojenSL() {\n    for (let i = 0; i < verotaulukko.length; i++) {\n      toimialaSL[i] = jaa(verotaulukko[i], paastotaulukko[i]) * jaa(kuntienToimialaLkm[kuntienIndeksit[kunnanNimiAvain]], kuntienKaikkiToimialat[i]);\n    }\n\n    console.log(\"toimialasl \", toimialaSL);\n  } //Annetaan value, jolle etsitään ja palautetaan sitä vastaava key\n\n\n  function haeAvain(lista, value) {\n    return Object.keys(lista).find(key => lista[key] === value);\n  } //Hakee jokaisen kunnan toimialojen määrän listaan. Kokomaa = 0, Akaa = 1...\n\n\n  function KunnanKaikkiToimialatLkm() {\n    for (let key in kuntienIndeksit) {\n      kuntienKaikkiToimialat[kuntienIndeksit[key]] = toimialojenMaarat[toimialojenLkm * kuntienIndeksit[key]];\n    }\n\n    console.log(\"kuntienindeksit[key] \", kuntienIndeksit);\n    console.log(\"kuntienkaikkitoimialat: \", kuntienKaikkiToimialat);\n    laskeToimialojenSL();\n  } //pitää järjestettyä listaa eniten valittua toimialaa sisältävien kuntien indekseistä\n\n\n  function etsiEniten() {\n    var suurin = 0;\n    var maxIndex = 0;\n\n    for (let i = 0; i < kuntienToimialaLkm.length; i++) {\n      enitenKunnassa.push(i);\n      enitenKunnassa.sort(function (a, b) {\n        return kuntienToimialaLkm[b] - kuntienToimialaLkm[a];\n      });\n    }\n\n    for (let i = 0, j = 0; i < enitenKunnassa.length; i++) {\n      if (toimialaSL[counter] * kuntienToimialaLkm[kuntienIndeksit[haeAvain(kuntienIndeksit, enitenKunnassa[i])]] == NaN) {\n        continue;\n      } else {\n        kuntienToimialaSL[j] = toimialaSL[counter] * kuntienToimialaLkm[kuntienIndeksit[haeAvain(kuntienIndeksit, enitenKunnassa[i])]];\n        j++;\n      }\n    }\n\n    console.log(\"enitenkunnassa \", enitenKunnassa);\n    console.log(\"kutnientoimialasl \", kuntienToimialaSL);\n    KunnanKaikkiToimialatLkm();\n  } // laskee jakolaskun, mikäli mahdollista\n\n\n  function jaa(jaettava, jakaja) {\n    if (jaettava == undefined || jakaja == undefined || jakaja == 0) return \"Ei tiedossa\";\n    var osamaara = jaettava / jakaja;\n    return osamaara;\n  } //Luo ison läjän keyn mukaan indeksöityjä listoja\n  //listasta valittaessa saadaan samalla indeksillä muista listoista oikeita arvoja\n\n\n  function luoTaulukot() {\n    for (let key in toimialalista) {\n      if (key.length === 2) {\n        toimialojenAvaimet.push(key);\n        alataulukko.push(toimialalista[key]);\n        maarataulukko.push(toimialojenMaarat[toimialaIndeksit[key]]);\n        paastotaulukko.push(toimialojenPaastot[toimialojenPaastotIndeksit[key]]);\n\n        if (toimialojenVerot[nimiJaIndeksi[key]] == null) {\n          verotaulukko.push(\"Ei tiedossa\");\n        } else {\n          verotaulukko.push(toimialojenVerot[nimiJaIndeksi[key]]);\n        }\n      }\n    }\n\n    return alataulukko;\n  } //Korvaa toimialojen nimissä olevat numerot ja alun välit tyhjällä\n\n\n  function parsiTaulukko(taulukko) {\n    for (let x in taulukko) {\n      taulukko[x] = taulukko[x].replace(/^[\\s\\d]+/, '');\n    }\n  }\n\n  var toimialaInd = 0;\n  var haettava;\n  var select;\n  var taulukkoToimialoista = luoTaulukot();\n  parsiTaulukko(taulukkoToimialoista);\n  laskeToimialojenSL(); //Hakupalkki, joka vertaa hakupalkin sisältöä select -listan sisältöön ja näyttää vain matchaavat\n\n  const etsiToimiala = hakusana => {\n    haettava = hakusana.target.value;\n    select = document.getElementById(\"listaToimialoista\");\n\n    for (var i = 0; i < select.length; i++) {\n      var txt = select[i].text;\n      var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n      select.options[i].style.display = include ? '' : 'none';\n    }\n  }; //asettaa countteriin valitun indeksin, josta sitä voi sitten käyttää kaikkialla\n\n\n  const tulostaToimiala = listaValittu => {\n    setToValue(listaValittu.target.value);\n  }; //tämä pitää olla täällä, koska counter\n\n\n  toimialanPaikkakunnat(counter); // jakaa hienosti regexillä luvut kolmen sarjoihin\n\n  function lukupilkuilla(x) {\n    if (x == undefined) return \"Ei tiedossa\";else return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  }\n\n  return (// Bootstrapin pääcontainer\n    React.createElement(FadeIn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"search\",\n      className: \"form-control\",\n      name: \"search\",\n      placeholder: \"Hae...\",\n      onKeyUp: etsiToimiala,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })), React.createElement(\"select\", {\n      id: \"listaToimialoista\",\n      className: \"form-control\",\n      size: \"30\",\n      onChange: tulostaToimiala,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, taulukkoToimialoista.map(s => React.createElement(\"option\", {\n      value: toimialaInd++,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, s)))), React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Toimialan kokonaisp\\xE4\\xE4st\\xF6t: \"), lukupilkuilla(paastotaulukko[counter])), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Toimialojen kokonaislukum\\xE4\\xE4r\\xE4: \"), \" \", lukupilkuilla(maarataulukko[counter])), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Toimialan verot yhteens\\xE4: \"), \" \", lukupilkuilla(verotaulukko[counter]), \"%\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Toimialaa eniten paikkakunnalla: \"), \" \", kuntienNimet[kunnanNimiAvain], \" LKM: \", kuntienToimialaLkm[kuntienIndeksit[kunnanNimiAvain]], \" kpl\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn-group btn-group-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"aria-pressed\": \"true\",\n      onClick: console.log('tietoja'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Katotaan my\\xF6hemmin onko n\\xE4m\\xE4 napit tarpeellisia\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"aria-pressed\": \"true\",\n      onClick: console.log('suhdeluku'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Suhdeluku\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Parhaat kunnat toimialalla \\\"\", taulukkoToimialoista[counter], \"\\\": \", kuntienToimialaSL[0], \", \", kuntienToimialaSL[1], \", \", kuntienToimialaSL[2])))))))\n  );\n};\n\nexport default Toimialat;","map":{"version":3,"sources":["/Users/tuomo/PROJEKTITYÖ/ryhmatyo/tklaskuri/src/toimialat.js"],"names":["React","useState","datatoimialatKunnittain","dataToimialojenVerot","dataPaastot","FadeIn","toimialalista","dataset","dimension","Toimiala2008","category","label","toimialaIndeksit","index","toimialojenMaarat","value","kuntienIndeksit","Kunta","kuntienNimet","nimiJaIndeksi","Toimiala","toimialojenNimet","toimialojenVerot","toimialojenPaastot","toimialojenPaastotIndeksit","console","log","Toimialat","counter","setCounter","setToValue","enitenKunnassa","kuntienNimetTop","kunnanAvain","verotaulukko","alataulukko","maarataulukko","kuntienToimialaLkm","paastotaulukko","toimialojenAvaimet","toimialojenVerotuloKA","toimialojenPaastotKA","kuntienToimialaSL","toimialaSL","kunnanNimiAvain","kuntienKaikkiToimialat","toimialojenLkm","Object","keys","length","toimialanPaikkakunnat","haettavaIndeksi","ekaToimialanArvo","i","push","etsiEniten","haeAvain","laskeToimialojenSL","jaa","lista","find","key","KunnanKaikkiToimialatLkm","suurin","maxIndex","sort","a","b","j","NaN","jaettava","jakaja","undefined","osamaara","luoTaulukot","parsiTaulukko","taulukko","x","replace","toimialaInd","haettava","select","taulukkoToimialoista","etsiToimiala","hakusana","target","document","getElementById","txt","text","include","toLowerCase","startsWith","options","style","display","tulostaToimiala","listaValittu","lukupilkuilla","toString","map","s"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\";\nimport dataToimialojenVerot from \"./toimialojenVerot\";\nimport dataPaastot from \"./paastotToimialoittain\";\nimport FadeIn from 'react-fade-in';\n\n\n\n\n// asetetaan dataa jsoneista muuttujiin\n\nconst toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label\nconst toimialaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.index\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value\nconst kuntienIndeksit = datatoimialatKunnittain.dataset.dimension.Kunta.category.index\nconst kuntienNimet = datatoimialatKunnittain.dataset.dimension.Kunta.category.label\n\nconst nimiJaIndeksi = dataToimialojenVerot.dataset.dimension.Toimiala.category.index\nconst toimialojenNimet = dataToimialojenVerot.dataset.dimension.Toimiala.category.label\nconst toimialojenVerot = dataToimialojenVerot.dataset.value\n\nconst toimialojenPaastot = dataPaastot.dataset.value\nconst toimialojenPaastotIndeksit = dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category.index;\n\nconsole.log(\"toimialalista \" , toimialalista)\n\nconsole.log(datatoimialatKunnittain)\n\n//Pääkomponentti toimialoille\nconst Toimialat = () => {\n\n  // Counter pitää tiedossa valitun toimialan indeksin\n  const [ counter, setCounter ] = useState(0)\n  const setToValue = (value) => setCounter(value)\n  \n  //iso läjä listoja\n  var enitenKunnassa = [];\n  var kuntienNimetTop = [];\n  var kunnanAvain = [];\n  var verotaulukko = [];\n  var alataulukko = [];\n  var maarataulukko = [];\n  var kuntienToimialaLkm = [];\n  var paastotaulukko = [];\n  var toimialojenAvaimet = [];\n  var toimialojenVerotuloKA = [];\n  var toimialojenPaastotKA = [];\n  var kuntienToimialaSL = [];\n  var toimialaSL = [];\n  var kunnanNimiAvain;\n  var kuntienKaikkiToimialat = [];\n  var toimialojenLkm = Object.keys(toimialalista).length\n  console.log(\"kuntien indeksit \" , kuntienIndeksit[\"091\"])\n\n\n  /*Jokaisen kunnan kaikki toimialat ovat peräkkäin listassa ositettuna \n  (n kpl koko suomen toimialoja, n kpl seuraavan kunnan toimialoja...)\n  Saadaksesi kunnan x kaikki toimialat, aloita ensimmäisestä kyseisen toimialan indeksistä\n  ja hyppää toimialojen lukumäärän verran eteenpäin. \n  */\n  function toimialanPaikkakunnat(counter) {\n    var haettavaIndeksi = toimialojenAvaimet[counter]\n    var ekaToimialanArvo = toimialaIndeksit[haettavaIndeksi]\n    \n    for (let i = ekaToimialanArvo; i < toimialojenMaarat.length; i = (i+toimialojenLkm)){\n      \n      kuntienToimialaLkm.push(toimialojenMaarat[i])\n    }\n\n    etsiEniten();\n    \n    kunnanNimiAvain = haeAvain(kuntienIndeksit, enitenKunnassa[1])\n    \n  }\n\n  //laskee toimialoille suhdeluvut\n  function laskeToimialojenSL(){\n\n    for (let i = 0; i < verotaulukko.length ;i++){\n\n      toimialaSL[i] = (jaa(verotaulukko[i], paastotaulukko[i]) * jaa(kuntienToimialaLkm[kuntienIndeksit[kunnanNimiAvain]], kuntienKaikkiToimialat[i])) \n\n    }\n    console.log(\"toimialasl \" , toimialaSL)\n\n  }\n\n  //Annetaan value, jolle etsitään ja palautetaan sitä vastaava key\n  function haeAvain(lista, value){\n\n  \treturn Object.keys(lista).find(key => lista[key] === value);\n\n  }\n\n  //Hakee jokaisen kunnan toimialojen määrän listaan. Kokomaa = 0, Akaa = 1...\n  function KunnanKaikkiToimialatLkm(){\n  \t \n  \tfor (let key in kuntienIndeksit){\n  \t\t\n      kuntienKaikkiToimialat[kuntienIndeksit[key]] = toimialojenMaarat[(toimialojenLkm * kuntienIndeksit[key])]\n    \t\n    }\n    console.log(\"kuntienindeksit[key] \" , kuntienIndeksit)\n    console.log(\"kuntienkaikkitoimialat: \" ,kuntienKaikkiToimialat)\n    laskeToimialojenSL();\n  }\n\n  //pitää järjestettyä listaa eniten valittua toimialaa sisältävien kuntien indekseistä\n  function etsiEniten(){\n    \n    var suurin = 0;\n    var maxIndex = 0;\n\n    for (let i = 0; i < kuntienToimialaLkm.length; i++){\n    \t\n      enitenKunnassa.push(i);\t\n    \tenitenKunnassa.sort(function(a,b) { return kuntienToimialaLkm[b] - kuntienToimialaLkm[a];});\n    \t\t\n    \t}\n    \n    for(let i = 0, j = 0; i < enitenKunnassa.length; i++){\n      if((toimialaSL[counter] * kuntienToimialaLkm[kuntienIndeksit[haeAvain(kuntienIndeksit, enitenKunnassa[i])]]) == NaN){\n        continue\n      }\n      else{\n\n        kuntienToimialaSL[j] = (toimialaSL[counter] * kuntienToimialaLkm[kuntienIndeksit[haeAvain(kuntienIndeksit, enitenKunnassa[i])]])\n        j++;\n      }\n\n    }\n    console.log(\"enitenkunnassa \" , enitenKunnassa)\n    console.log(\"kutnientoimialasl \" , kuntienToimialaSL)\n    KunnanKaikkiToimialatLkm();\n       \n  }\n\n  \n\n  // laskee jakolaskun, mikäli mahdollista\n  function jaa(jaettava, jakaja){\n\n    if(jaettava == undefined || jakaja == undefined || jakaja == 0)\n      return \"Ei tiedossa\"\n    var osamaara = (jaettava/jakaja);\n    return osamaara;\n\n  }\n  \n  //Luo ison läjän keyn mukaan indeksöityjä listoja\n  //listasta valittaessa saadaan samalla indeksillä muista listoista oikeita arvoja\n  function luoTaulukot() {\n    \n    for (let key in toimialalista){\n      if(key.length === 2){\n\n        toimialojenAvaimet.push(key)\n        alataulukko.push(toimialalista[key])\n        maarataulukko.push(toimialojenMaarat[toimialaIndeksit[key]])\n        paastotaulukko.push(toimialojenPaastot[toimialojenPaastotIndeksit[key]])\n        if (toimialojenVerot[nimiJaIndeksi[key]] == null){\n          \n          verotaulukko.push(\"Ei tiedossa\")\n        } \n        else {\n          \n         verotaulukko.push(toimialojenVerot[nimiJaIndeksi[key]])\n        }\n      } \n    }           \n    \n    return alataulukko;\n  }\n    //Korvaa toimialojen nimissä olevat numerot ja alun välit tyhjällä\n    function parsiTaulukko(taulukko){\n\n      for(let x in taulukko){\n        taulukko[x] = taulukko[x].replace(/^[\\s\\d]+/, '');\n      }\n    }\n\n    var toimialaInd = 0;\n    var haettava;\n    var select;\n    var taulukkoToimialoista = luoTaulukot();\n    parsiTaulukko(taulukkoToimialoista);\n    laskeToimialojenSL();\n\n    \n    //Hakupalkki, joka vertaa hakupalkin sisältöä select -listan sisältöön ja näyttää vain matchaavat\n    const etsiToimiala = (hakusana) => {\n   \n      haettava = hakusana.target.value\n      select = document.getElementById(\"listaToimialoista\");\n      for (var i = 0; i < select.length; i++){\n        var txt = select[i].text\n        var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n        select.options[i].style.display = include ? '' : 'none';\n     \n      }\n    }\n \n  //asettaa countteriin valitun indeksin, josta sitä voi sitten käyttää kaikkialla\n   const tulostaToimiala = (listaValittu) => {\n    setToValue(listaValittu.target.value)\n \n }\n\n  //tämä pitää olla täällä, koska counter\n  toimialanPaikkakunnat(counter)\n  \n\n  // jakaa hienosti regexillä luvut kolmen sarjoihin\n  function lukupilkuilla(x) {\n    if (x == undefined) return \"Ei tiedossa\";\n    else return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  }\n \n return (\n  // Bootstrapin pääcontainer\n  <FadeIn>\n  <div className=\"container\">   \n  \n      <div className=\"row\">\n            <div className=\"col-sm\">\n              \n              <div>\n              <input type=\"text\" id=\"search\" className=\"form-control\" name=\"search\" placeholder=\"Hae...\" onKeyUp={etsiToimiala}/>\n              </div>\n          \n              <select id=\"listaToimialoista\"className=\"form-control\" size=\"30\" onChange={tulostaToimiala} >\n                \n              {taulukkoToimialoista.map(s => (<option value={toimialaInd++}>{s}</option>))}\n              </select>\n\n\n            </div>\n\n            <div className=\"col-6\">\n\n\n            <div className=\"row\">\n            <div className=\"col jumbotron\">\n\n            <ul class=\"list-group\">\n\n      <li class=\"list-group-item\"><small class=\"text-muted\">Toimialan kokonaispäästöt: </small>{lukupilkuilla(paastotaulukko[counter])}</li>\n      <li class=\"list-group-item\"><small class=\"text-muted\">Toimialojen kokonaislukumäärä: </small> {lukupilkuilla(maarataulukko[counter])}</li>\n      <li class=\"list-group-item\"> <small class=\"text-muted\">Toimialan verot yhteensä: </small> {lukupilkuilla(verotaulukko[counter])}%</li>\n      <li class=\"list-group-item\"> <small class=\"text-muted\">Toimialaa eniten paikkakunnalla: </small> {kuntienNimet[kunnanNimiAvain]} LKM: {kuntienToimialaLkm[kuntienIndeksit[kunnanNimiAvain]]} kpl</li>    \n            </ul>\n\n            </div>\n            </div>\n\n            <div className=\"row\">\n\n            <div className=\"col jumbotron\">\n\n            <div className=\"btn-group btn-group-sm\">\n                <button type=\"button\" className=\"btn btn-secondary\" aria-pressed=\"true\" onClick={console.log('tietoja')}>Katotaan myöhemmin onko nämä napit tarpeellisia</button>\n                <button type=\"button\" className=\"btn btn-secondary\" aria-pressed=\"true\" onClick={console.log('suhdeluku')}>Suhdeluku</button>\n              </div>\n\n            <p></p>\n\n            <p>Parhaat kunnat toimialalla \"{taulukkoToimialoista[counter]}\": {kuntienToimialaSL[0]}, {kuntienToimialaSL[1]}, {kuntienToimialaSL[2]}</p>\n\n\n\n            </div>\n            </div>\n\n            </div>\n    </div>\n\n    </div>\n    </FadeIn>\n\n        );\n  }\n\n\nexport default Toimialat;"]},"metadata":{},"sourceType":"module"}