{"ast":null,"code":"import _slicedToArray from \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport data from \"./kuntienavainluvut1\";\nimport './App.css';\nimport datavaakunat from \"./vaakunaKuvat\";\nimport dataverot from \"./verotietoja\";\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\";\nimport Auto from './paikkakunnat'; //objektilista kuntien nimistä\n\nconst kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label; //objektilista asukasluvuista\n\nconst pktiedot = data.dataset.value; //objektilista kuntien indekseistä\n\nconst kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index; //vuodet 2005-2017 taulukossa indeksistä 0 alkaen\n\nconst veroTietojenVuodet = Object.keys(dataverot.dataset.dimension.Vuosi.category.label); // objektilista verotietoihin koskevista kategorioista\n\nconst verokategoriat = dataverot.dataset.dimension.Tiedot.category.label; // verotiedot taulukossa\n\nconst verotiedot = dataverot.dataset.value; // lista eri toimialoista\n//const toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label\n// toimialojen määrät taulukossa\n\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value; // toimialat ja niitä vastaavat indeksit\n\nconst toimialatJaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category;\nconsole.log(toimialalista);\nvar toimialataulukko = [];\nvar x; // kuntien nimet taulukkoon\n\nfor (var x in toimialalista) {\n  toimialataulukko.push(toimialalista[x]);\n}\n\nconsole.log(toimialataulukko);\n/** Parsii paikkakuntadataa omiin taulukoihin sarakenumeron perusteella\n*/\n\nfunction luoPKtaulukko(sarakeNro) {\n  var taulukko = [];\n\n  for (let i = sarakeNro, j = 0; i < pktiedot.length; i += 4, j++) {\n    taulukko[j] = pktiedot[i];\n  }\n\n  return taulukko;\n}\n/** Parsii verotiedot omaan taulukkoon sarakenumeron perusteella\n*/\n\n\nfunction luoVeroTaulukko(sarakeNro) {\n  var taulukko = [];\n  const solujenLkmPerVuosi = Object.keys(kuntienNimet).length * Object.keys(verokategoriat).length;\n  var verodata2017indeksi = (veroTietojenVuodet.length - 1) * solujenLkmPerVuosi;\n\n  for (let i = verodata2017indeksi + sarakeNro, j = 0; i < solujenLkmPerVuosi * veroTietojenVuodet.length; i += 6, j++) {\n    taulukko[j] = verotiedot[i];\n  }\n\n  return taulukko;\n}\n/** Parsii sovelluksessa valitun kunnan toimialatiedot yhteen taulukkoon.\n* Parametreina ovat valitun kunnan indeksi ja toimialojen nimet järjestetyssä listassa.\n* Toimialojen määrät -datasetistä lasketaan oikea aloitusindeksi kunnan indeksin avulla.\n*/\n\n\nfunction parsiKunnanToimialat(kunnanIndeksi, toimialat) {\n  var toimialojenLkm = Object.keys(toimialat).length;\n  var kunnanToimialojenLkmt = [];\n  var alkuindeksi = kunnanIndeksi * toimialojenLkm; //var alkuindeksi2;\n  //console.log(\"kunnani: \" + kunnanIndeksi)\n  //console.log(\"alkui: \" + alkuindeksi2)\n  //if (kunnanIndeksi == 1) alkuindeksi2 = 7 * toimialojenLkm\n  //else if (kunnanIndeksi > 1  && kunnanIndeksi < 8 ) alkuindeksi2 = alkuindeksi - toimialojenLkm\n  //else alkuindeksi2 = alkuindeksi\n  //console.log(\"alkui: \" + alkuindeksi2)\n\n  for (let i = alkuindeksi; i < alkuindeksi + toimialojenLkm; i++) {\n    kunnanToimialojenLkmt.push(toimialojenMaarat[i]);\n  }\n\n  return kunnanToimialojenLkmt;\n}\n/** Etsii annetusta kunnan toimialojen lkm -taulukosta suurimman alkion indeksin.\n* Ohittaa parametrina annetun alkion ja sitä suuremmat, jotta funktiota voi käyttää myös\n* toiseksi suurimman etsintään (jne)\n* param1(tAlaNimet): toimialojen nimet järjestetyssä listassa\n* param2(tAlaLkm): valitun kunnan toimialojen lukumäärät taulukossa\n* param3(ohitaI): Alkion indeksi, joka ja jota suuremmat ohitetaan\n*/\n\n\nfunction etsiSuurimmanI(tAlaNimet, tAlaLkm, ohitaI) {\n  //console.log(tAlaLkm)\n  let suurin = 0;\n  let suurimmanI = 0;\n\n  for (let i = 0; i < tAlaLkm.length; i++) {\n    if (tAlaLkm[i] >= ohitaI) continue;\n\n    if (tAlaLkm[i] > suurin) {\n      let s = tAlaNimet[i];\n      let alkutunnus = s.substr(0, s.indexOf(' ')).trim(); //console.log(alkutunnus)\n      //console.log(isNaN(parseInt(alkutunnus)))\n\n      if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue; //console.log(alkutunnus)\n\n      suurin = tAlaLkm[i];\n      suurimmanI = i; //console.log(\"suurin: \" + suurin)\n    }\n  }\n\n  return suurimmanI;\n}\n/** Muotoilee ja palauttaa merkkijonona annettua indeksiä vastaavan toimialan \n* nimen ja lukumäärän\n*/\n\n\nfunction tulostaToimialat(toimialojenNimet, toimialojenLkm, i) {\n  //console.log(eniten)\n  //let suurin = 0;\n  //let toiseksiSuurin = etsiSuurin(toimialojenLkm, suurin)\n  //let kolmas = etsiSuurin(toimialojenLkm, toiseksiSuurin)\n  //let suurimmanIndeksi = toimialojenLkm.indexOf(eniten)\n  //let indeksi2 = toimialojenLkm.indexOf(toiseksiSuurin)\n  //console.log(suurimmanIndeksi)\n  //console.log(suurin)\n  //console.log(toiseksiSuurin)\n  //console.log(kolmas)\n  let s = toimialojenNimet[i] + \" : \" + toimialojenLkm[i];\n  return s.substr(s.indexOf(' ') + 1).trim();\n}\n\nconst App = () => {\n  const _useState = useState('home'),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const toPage = page => event => {\n    event.preventDefault();\n    setPage(page);\n  };\n\n  const content = () => {\n    if (page === 'paikkakunnat') {\n      return React.createElement(Paikkakunnat, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      });\n    } else if (page === 'Muu') {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Joo\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"row justify-content-md-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"btn-group btn-group-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('paikkakunnat'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Toimialat\"), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('Muu'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Paikkakunnat\"))), content());\n};\n\nconst Paikkakunnat = () => {\n  // State joka pitää muistissa indeksiä \n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        counter = _useState4[0],\n        setCounter = _useState4[1];\n\n  const setToValue = value => setCounter(value); //paikkakuntatiedot parsittuna omiin taulukkoihin\n\n\n  var kuntienAsLuvut = luoPKtaulukko(0);\n  var vlMuutokset = luoPKtaulukko(1);\n  var tyoAsteet = luoPKtaulukko(2);\n  var tpLukumaarat = luoPKtaulukko(3);\n  const vaakunat = datavaakunat.selection1;\n  var nimiTaulukko = [];\n  var kuntienIit = [];\n  var vaakunaTaulukko = []; // kuntien nimet taulukkoon\n\n  for (var x in kuntienNimet) {\n    nimiTaulukko.push(kuntienNimet[x]);\n  } // verotiedot parsittuna omiin taulukoihin\n\n\n  var tulonsaajat = luoVeroTaulukko(0);\n  var veronalaisetTulotKeskimaarin = luoVeroTaulukko(1);\n  var ansioTulotKeskimaarin = luoVeroTaulukko(2);\n  var verotYhteensaKeskimaarin = luoVeroTaulukko(3);\n  var valtionVeroKeskimaarin = luoVeroTaulukko(4);\n  var kunnallisVeroKeskimaarin = luoVeroTaulukko(5);\n  var toimialojenNimet = [];\n\n  for (let x in toimialatJaIndeksit.label) {\n    toimialojenNimet.push(toimialatJaIndeksit.label[x]);\n  }\n\n  var toimialojenIndeksit = [];\n\n  for (let x in toimialatJaIndeksit.index) {\n    toimialojenIndeksit.push(toimialatJaIndeksit.index[x]);\n  }\n\n  var toimiAJaI = {};\n\n  for (let i = 0; i < toimialojenNimet.length; i++) {\n    let avain = toimialojenIndeksit[i];\n    let arvo = toimialojenNimet[i];\n    toimiAJaI[avain] = arvo;\n  } //toimialat ja niiden indeksit avain-arvo pareina listassa\n\n\n  const toimiAlatJarj = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(toimiAJaI).sort().forEach(function (key) {\n    toimiAlatJarj[key] = toimiAJaI[key];\n  }); //console.log(toimiAlatJarj)\n  // käyttäjän valitseman kunnan toimialatiedot taulukossa \n\n  var kunnantoimialat = parsiKunnanToimialat(counter, toimiAlatJarj); // kuntien indeksit taulukkoon\n\n  for (var x in kuntienIndeksit) {\n    kuntienIit.push(kuntienIndeksit[x]);\n  }\n\n  var avain;\n  var arvo;\n  var nimetJaIndeksit = {};\n  let enitenI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, 9999999);\n  let toiseksiEnitenI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[enitenI]);\n  let kolmasI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[toiseksiEnitenI]);\n  let neljasI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[kolmasI]);\n  let viidesI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[neljasI]); //let kolmas = etsiSuurin(toimiAlatJarj, kunnantoimialat, toiseksiEniten)\n\n  let enitenTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, enitenI);\n  let toiseksiEnitenTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, toiseksiEnitenI);\n  let kolmasTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, kolmasI);\n  let neljasTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, neljasI);\n  let viidesTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, viidesI); // valintalista kunnista, indeksöi samalla 0->n\n  // kuntien nimet ja indeksit mapitettuna yhteen objektilistaan\n\n  for (var i = 0; i < nimiTaulukko.length; i++) {\n    avain = kuntienIit[i];\n    arvo = nimiTaulukko[i];\n    nimetJaIndeksit[avain] = arvo;\n  }\n\n  const jarjestetty = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(nimetJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = nimetJaIndeksit[key];\n  }); // Kuntien nimien erotus järjestetystä objektilistasta taulukkoon\n\n  var nimetJarjestyksessa = [];\n\n  for (var x in jarjestetty) {\n    nimetJarjestyksessa.push(jarjestetty[x]);\n  } // verotiedot parsittuna omiin taulukoihin\n\n\n  var tulonsaajat = luoVeroTaulukko(0);\n  var veronalaisetTulotKeskimaarin = luoVeroTaulukko(1);\n  var ansioTulotKeskimaarin = luoVeroTaulukko(2);\n  var verotYhteensaKeskimaarin = luoVeroTaulukko(3);\n  var valtionVeroKeskimaarin = luoVeroTaulukko(4);\n  var kunnallisVeroKeskimaarin = luoVeroTaulukko(5);\n  var kunnantoimialat = parsiKunnanToimialat(counter); // Hakutoiminto, ottaa inputista valuen ja vertaa sitä selectin valueihin\n  // piilottaa valuet, jotka eivät vastaa hakusanaa\n\n  var select;\n  var haettava;\n\n  const etsi = hakusana => {\n    haettava = hakusana.target.value;\n    console.log(haettava);\n    select = document.getElementById(\"listaKunnista\");\n\n    for (var i = 0; i < select.length; i++) {\n      var txt = select[i].text;\n      var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n      select.options[i].style.display = include ? 'list-item' : 'none';\n    }\n  };\n\n  var asukasLukuI;\n  var listaI; //var kunnantoimialat = [];\n  // ottaa selectistä valuen ja tulostaa sen\n\n  const tulosta = listaValittu => {\n    listaI = listaValittu.target.value; //console.log(listaIndex)\n\n    setToValue(listaI); //asetaMuutosArvo(listaI)\n\n    console.log(counter); //console.log(muutosIndeksi)\n    //console.log(kunnantoimialat)\n  }; // asukasluvut löytyvät taulukosta neljän indeksin välein ([0,4,8,...])\n\n\n  var asukaslukuInd = 0; // valintalista kunnista, indeksöi samalla 0->n\n\n  return (// Bootstrapin pääcontainer\n    React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"search\",\n      name: \"search\",\n      placeholder: \"Hae...\",\n      onKeyUp: etsi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    })), React.createElement(\"select\", {\n      id: \"listaKunnista\",\n      className: \"form-control\",\n      size: \"28\",\n      onChange: tulosta,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, nimetJarjestyksessa.map(s => React.createElement(\"option\", {\n      value: asukaslukuInd++,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, s)))), React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tiedotheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, nimetJarjestyksessa[counter]), React.createElement(\"img\", {\n      src: vaakunat[counter].image,\n      alt: \"new\",\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      class: \"list-group list-group-horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \"Kunnan asukasluku: \"), kuntienAsLuvut[counter]), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"V\\xE4kiluvun muutos edellisest\\xE4 vuodesta: \"), \" \", vlMuutokset[counter] + \"%\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Ty\\xF6llisyysaste: \"), \" \", tyoAsteet[counter] + \"%\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \"Ty\\xF6paikkojen lukum\\xE4\\xE4r\\xE4: \"), \" \", tpLukumaarat[counter]), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"Tulonsaajia: \"), \" \", tulonsaajat[counter])), React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, \"Veronalaiset tulot keskim\\xE4\\xE4rin: \"), \" \", veronalaisetTulotKeskimaarin[counter] + \"€/vuosi\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \"Ansiotulot keskim\\xE4\\xE4rin: \"), \" \", ansioTulotKeskimaarin[counter] + \"€/vuosi\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"Verot yhteens\\xE4 keskim\\xE4\\xE4rin: \"), \" \", verotYhteensaKeskimaarin[counter] + \"€/vuosi\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, \"Valtionvero keskim\\xE4\\xE4rin: \"), \" \", valtionVeroKeskimaarin[counter] + \"€/vuosi\"), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, \"Kunnallisvero keskim\\xE4\\xE4rin: \"), \" \", kunnallisVeroKeskimaarin[counter] + \"€/vuosi\"))))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, \"Toimialoja eniten: \"), \" \", enitenTulostus), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, \"Toimialoja toiseksi eniten: \"), \" \", toiseksiEnitenTulostus), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"Toimialoja kolmanneksi eniten: \"), \" \", kolmasTulostus), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, \"Toimialoja nelj\\xE4nneksi eniten: \"), \" \", neljasTulostus), React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"Toimialoja viidenneksi eniten: \"), \" \", viidesTulostus))))))\n  );\n};\n\nReactDOM.render(React.createElement(App, null), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tuomo/PROJEKTITYÖ/ryhmatyo/tklaskuri/src/index.js"],"names":["React","useState","ReactDOM","data","datavaakunat","dataverot","datatoimialatKunnittain","Auto","kuntienNimet","dataset","dimension","category","label","pktiedot","value","kuntienIndeksit","index","veroTietojenVuodet","Object","keys","Vuosi","verokategoriat","Tiedot","verotiedot","toimialojenMaarat","toimialatJaIndeksit","Toimiala2008","console","log","toimialalista","toimialataulukko","x","push","luoPKtaulukko","sarakeNro","taulukko","i","j","length","luoVeroTaulukko","solujenLkmPerVuosi","verodata2017indeksi","parsiKunnanToimialat","kunnanIndeksi","toimialat","toimialojenLkm","kunnanToimialojenLkmt","alkuindeksi","etsiSuurimmanI","tAlaNimet","tAlaLkm","ohitaI","suurin","suurimmanI","s","alkutunnus","substr","indexOf","trim","isNaN","parseInt","tulostaToimialat","toimialojenNimet","App","page","setPage","toPage","event","preventDefault","content","Paikkakunnat","counter","setCounter","setToValue","kuntienAsLuvut","vlMuutokset","tyoAsteet","tpLukumaarat","vaakunat","selection1","nimiTaulukko","kuntienIit","vaakunaTaulukko","tulonsaajat","veronalaisetTulotKeskimaarin","ansioTulotKeskimaarin","verotYhteensaKeskimaarin","valtionVeroKeskimaarin","kunnallisVeroKeskimaarin","toimialojenIndeksit","toimiAJaI","avain","arvo","toimiAlatJarj","sort","forEach","key","kunnantoimialat","nimetJaIndeksit","enitenI","toiseksiEnitenI","kolmasI","neljasI","viidesI","enitenTulostus","toiseksiEnitenTulostus","kolmasTulostus","neljasTulostus","viidesTulostus","jarjestetty","nimetJarjestyksessa","select","haettava","etsi","hakusana","target","document","getElementById","txt","text","include","toLowerCase","startsWith","options","style","display","asukasLukuI","listaI","tulosta","listaValittu","asukaslukuInd","map","image","render","createElement"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom'\nimport data from \"./kuntienavainluvut1\"; \nimport './App.css';\nimport datavaakunat from \"./vaakunaKuvat\"\nimport dataverot from \"./verotietoja\"\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\"\nimport Auto from './paikkakunnat'\n\n\n\n\n    //objektilista kuntien nimistä\n    const kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label\n    //objektilista asukasluvuista\n    const pktiedot = data.dataset.value\n    //objektilista kuntien indekseistä\n    const kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index\n    //vuodet 2005-2017 taulukossa indeksistä 0 alkaen\n    const veroTietojenVuodet = Object.keys(dataverot.dataset.dimension.Vuosi.category.label)\n    // objektilista verotietoihin koskevista kategorioista\n    const verokategoriat = dataverot.dataset.dimension.Tiedot.category.label\n    // verotiedot taulukossa\n    const verotiedot = dataverot.dataset.value\n    // lista eri toimialoista\n    //const toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label\n    // toimialojen määrät taulukossa\n    const toimialojenMaarat = datatoimialatKunnittain.dataset.value\n    // toimialat ja niitä vastaavat indeksit\n    const toimialatJaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category\n\n    console.log(toimialalista);\n\n    var toimialataulukko = [];\n    var x;\n    // kuntien nimet taulukkoon\n for (var x in toimialalista) {\n  toimialataulukko.push(toimialalista[x]);\n}\n\nconsole.log(toimialataulukko);\n\n/** Parsii paikkakuntadataa omiin taulukoihin sarakenumeron perusteella\n*/\nfunction luoPKtaulukko(sarakeNro){\n  var taulukko = [];\n  for (let i = sarakeNro, j = 0; i < pktiedot.length; i+=4, j++){\n      taulukko[j] = pktiedot[i];\n    }\n    return taulukko;\n}\n\n/** Parsii verotiedot omaan taulukkoon sarakenumeron perusteella\n*/\nfunction luoVeroTaulukko(sarakeNro){\n  var taulukko = [];\n  const solujenLkmPerVuosi = Object.keys(kuntienNimet).length * Object.keys(verokategoriat).length\n  var verodata2017indeksi = (veroTietojenVuodet.length - 1) * solujenLkmPerVuosi\n  \n  for (let i = verodata2017indeksi + sarakeNro, j = 0; i < solujenLkmPerVuosi*veroTietojenVuodet.length; i+=6, j++){\n      taulukko[j] = verotiedot[i];\n  }\n  return taulukko;\n}\n\n/** Parsii sovelluksessa valitun kunnan toimialatiedot yhteen taulukkoon.\n* Parametreina ovat valitun kunnan indeksi ja toimialojen nimet järjestetyssä listassa.\n* Toimialojen määrät -datasetistä lasketaan oikea aloitusindeksi kunnan indeksin avulla.\n*/\nfunction parsiKunnanToimialat(kunnanIndeksi, toimialat){\n  var toimialojenLkm = Object.keys(toimialat).length\n  var kunnanToimialojenLkmt = [];\n  var alkuindeksi = kunnanIndeksi * toimialojenLkm;\n  //var alkuindeksi2;\n  //console.log(\"kunnani: \" + kunnanIndeksi)\n  //console.log(\"alkui: \" + alkuindeksi2)\n  //if (kunnanIndeksi == 1) alkuindeksi2 = 7 * toimialojenLkm\n  //else if (kunnanIndeksi > 1  && kunnanIndeksi < 8 ) alkuindeksi2 = alkuindeksi - toimialojenLkm\n  //else alkuindeksi2 = alkuindeksi\n  //console.log(\"alkui: \" + alkuindeksi2)\n\n\n  for ( let i = alkuindeksi; i < (alkuindeksi + toimialojenLkm); i++){\n    kunnanToimialojenLkmt.push(toimialojenMaarat[i]);\n  }\n  return kunnanToimialojenLkmt;\n\n}\n\n/** Etsii annetusta kunnan toimialojen lkm -taulukosta suurimman alkion indeksin.\n* Ohittaa parametrina annetun alkion ja sitä suuremmat, jotta funktiota voi käyttää myös\n* toiseksi suurimman etsintään (jne)\n* param1(tAlaNimet): toimialojen nimet järjestetyssä listassa\n* param2(tAlaLkm): valitun kunnan toimialojen lukumäärät taulukossa\n* param3(ohitaI): Alkion indeksi, joka ja jota suuremmat ohitetaan\n*/\nfunction etsiSuurimmanI(tAlaNimet, tAlaLkm, ohitaI){\n  //console.log(tAlaLkm)\n  let suurin = 0\n  let suurimmanI = 0\n  for (let i = 0; i < tAlaLkm.length; i++){\n    if (tAlaLkm[i] >= ohitaI) continue;\n    if (tAlaLkm[i] > suurin) {\n      let s = tAlaNimet[i]\n      let alkutunnus = s.substr(0, s.indexOf(' ')).trim()\n      //console.log(alkutunnus)\n      //console.log(isNaN(parseInt(alkutunnus)))\n      if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue\n      //console.log(alkutunnus)\n      suurin = tAlaLkm[i]\n      suurimmanI = i\n      //console.log(\"suurin: \" + suurin)\n    }\n  }\n  return suurimmanI\n\n}\n\n/** Muotoilee ja palauttaa merkkijonona annettua indeksiä vastaavan toimialan \n* nimen ja lukumäärän\n*/ \nfunction tulostaToimialat(toimialojenNimet, toimialojenLkm, i){\n  //console.log(eniten)\n  //let suurin = 0;\n  //let toiseksiSuurin = etsiSuurin(toimialojenLkm, suurin)\n  //let kolmas = etsiSuurin(toimialojenLkm, toiseksiSuurin)\n  \n  //let suurimmanIndeksi = toimialojenLkm.indexOf(eniten)\n  //let indeksi2 = toimialojenLkm.indexOf(toiseksiSuurin)\n  //console.log(suurimmanIndeksi)\n  //console.log(suurin)\n  //console.log(toiseksiSuurin)\n  //console.log(kolmas)\n  let s = toimialojenNimet[i] + \" : \" + toimialojenLkm[i]\n  return s.substr(s.indexOf(' ')+1).trim()\n}\n\nconst App = () => {\n\n  const [page, setPage] = useState('home')\n\n  const  toPage = (page) => (event) => {\n    event.preventDefault()\n    setPage(page)\n  }\n    \n  \n\n  const content = () => {\n    if (page === 'paikkakunnat') {\n      return <Paikkakunnat />\n    } else if (page === 'Muu') {\n      return <p>Joo</p>\n    }\n  }\n\n\n\n    return (\n\n\n      <div>\n      \n      <div class=\"row justify-content-md-center\">\n         \n        <div class=\"btn-group btn-group-lg\">\n        <button type=\"button\" class=\"btn btn-primary\" aria-pressed=\"true\" onClick={toPage('paikkakunnat')}>Toimialat</button>\n        <button type=\"button\" class=\"btn btn-primary\" aria-pressed=\"true\" onClick={toPage('Muu')}>Paikkakunnat</button>\n        </div>\n        \n        \n        </div>\n        {content()}\n        </div>\n       )\n    \n\n  }\n\n   \n\n\n \n\n\n const Paikkakunnat = () => {\n\n\n  // State joka pitää muistissa indeksiä \n  const [ counter, setCounter ] = useState(1)\n  const setToValue = (value) => setCounter(value)\n\n\n //paikkakuntatiedot parsittuna omiin taulukkoihin\n var kuntienAsLuvut = luoPKtaulukko(0);\n var vlMuutokset = luoPKtaulukko(1);\n var tyoAsteet = luoPKtaulukko(2);\n var tpLukumaarat = luoPKtaulukko(3);\n \n\n const vaakunat = datavaakunat.selection1\n\n\n\n var nimiTaulukko = [];\n var kuntienIit = [];\n var vaakunaTaulukko = [];\n\n\n \n \n // kuntien nimet taulukkoon\n for (var x in kuntienNimet) {\n     nimiTaulukko.push(kuntienNimet[x]);\n }\n\n\n    // verotiedot parsittuna omiin taulukoihin\n    var tulonsaajat = luoVeroTaulukko(0);\n    var veronalaisetTulotKeskimaarin = luoVeroTaulukko(1);\n    var ansioTulotKeskimaarin = luoVeroTaulukko(2);\n    var verotYhteensaKeskimaarin = luoVeroTaulukko(3);\n    var valtionVeroKeskimaarin = luoVeroTaulukko(4);\n    var kunnallisVeroKeskimaarin = luoVeroTaulukko(5);\n\n\n    var toimialojenNimet = []\n    for (let x in toimialatJaIndeksit.label){\n      toimialojenNimet.push(toimialatJaIndeksit.label[x])\n    }\n\n    var toimialojenIndeksit = []\n    for (let x in toimialatJaIndeksit.index){\n      toimialojenIndeksit.push(toimialatJaIndeksit.index[x])\n    }\n\n    var toimiAJaI = {}\n    for (let i = 0; i < toimialojenNimet.length; i++){\n      let avain = toimialojenIndeksit[i];\n      let arvo = toimialojenNimet[i];\n      toimiAJaI[avain] = arvo;\n    }\n\n    //toimialat ja niiden indeksit avain-arvo pareina listassa\n    const toimiAlatJarj = {};\n    // objektilistan järjestys avainarvon eli indeksin mukaan\n    Object.keys(toimiAJaI).sort().forEach(function(key) {\n    toimiAlatJarj[key] = toimiAJaI[key];\n  });\n\n    //console.log(toimiAlatJarj)\n    // käyttäjän valitseman kunnan toimialatiedot taulukossa \n    var kunnantoimialat = parsiKunnanToimialat(counter, toimiAlatJarj);\n\n  \n\n   \n\n\n // kuntien indeksit taulukkoon\n for (var x in kuntienIndeksit) {\n     kuntienIit.push(kuntienIndeksit[x]);\n }\n\n\n var avain;\n var arvo;\n var nimetJaIndeksit = {};\n\n    \n    let enitenI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, 9999999)\n    let toiseksiEnitenI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[enitenI])\n    let kolmasI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[toiseksiEnitenI])\n    let neljasI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[kolmasI])\n    let viidesI = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, kunnantoimialat[neljasI])\n    //let kolmas = etsiSuurin(toimiAlatJarj, kunnantoimialat, toiseksiEniten)\n    let enitenTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, enitenI)\n    let toiseksiEnitenTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, toiseksiEnitenI)\n    let kolmasTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, kolmasI)\n    let neljasTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, neljasI)\n    let viidesTulostus = tulostaToimialat(toimiAlatJarj, kunnantoimialat, viidesI)\n\n    \n    // valintalista kunnista, indeksöi samalla 0->n\n  \n\n\n // kuntien nimet ja indeksit mapitettuna yhteen objektilistaan\n for (var i = 0; i < nimiTaulukko.length; i++){\n   avain = kuntienIit[i];\n   arvo = nimiTaulukko[i];\n   nimetJaIndeksit[avain] = arvo;\n }\n\n const jarjestetty = {};\n // objektilistan järjestys avainarvon eli indeksin mukaan\n Object.keys(nimetJaIndeksit).sort().forEach(function(key) {\n jarjestetty[key] = nimetJaIndeksit[key];\n});\n\n // Kuntien nimien erotus järjestetystä objektilistasta taulukkoon\nvar nimetJarjestyksessa = [];\nfor (var x in jarjestetty) {\n     nimetJarjestyksessa.push(jarjestetty[x]);\n }\n\n\n // verotiedot parsittuna omiin taulukoihin\n var tulonsaajat = luoVeroTaulukko(0);\n var veronalaisetTulotKeskimaarin = luoVeroTaulukko(1);\n var ansioTulotKeskimaarin = luoVeroTaulukko(2);\n var verotYhteensaKeskimaarin = luoVeroTaulukko(3);\n var valtionVeroKeskimaarin = luoVeroTaulukko(4);\n var kunnallisVeroKeskimaarin = luoVeroTaulukko(5);\n\n\n var kunnantoimialat = parsiKunnanToimialat(counter);\n\n // Hakutoiminto, ottaa inputista valuen ja vertaa sitä selectin valueihin\n // piilottaa valuet, jotka eivät vastaa hakusanaa\n var select\n var haettava \n const etsi = (hakusana) => {\n   \n   haettava = hakusana.target.value\n   console.log(haettava)\n    select = document.getElementById(\"listaKunnista\");\n   for (var i = 0; i < select.length; i++){\n     var txt = select[i].text\n     var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n     select.options[i].style.display = include ? 'list-item' : 'none';\n   } \n\n } \n\n var asukasLukuI;\n var listaI;\n //var kunnantoimialat = [];\n // ottaa selectistä valuen ja tulostaa sen\n const tulosta = (listaValittu) => {\n   \n   listaI = listaValittu.target.value\n   //console.log(listaIndex)\n   setToValue(listaI)\n   //asetaMuutosArvo(listaI)\n   console.log(counter)\n   //console.log(muutosIndeksi)\n   \n   //console.log(kunnantoimialat)\n }\n\n // asukasluvut löytyvät taulukosta neljän indeksin välein ([0,4,8,...])\n var asukaslukuInd = 0;\n\n // valintalista kunnista, indeksöi samalla 0->n\n return (\n // Bootstrapin pääcontainer\n <div className=\"container\">\t\n\n\n\n\n     <div className=\"row\">\n       <div className=\"col-sm\">\n\n         <div>\n     <input type=\"text\" id=\"search\" name=\"search\" placeholder=\"Hae...\" onKeyUp={etsi}/>\n         </div>\n     \n         <select id=\"listaKunnista\"className=\"form-control\" size=\"28\" onChange={tulosta} >\n\n         {nimetJarjestyksessa.map(s => (<option value={asukaslukuInd++}>{s}</option>))} \n         </select>\n\n       </div>\n\n       <div className=\"col-10\">\n\n     \n\n         \n\n         <br />\n         <div className=\"row\">\n         <div class=\"col jumbotron\">\n\n         <div className=\"tiedotheader\">\n           <h5>{nimetJarjestyksessa[counter]}</h5> \n           \n           <img src={vaakunat[counter].image} alt=\"new\" align=\"right\"/>\n         </div>\n\n         <ul class=\"list-group list-group-horizontal\">\n\n         <ul class=\"list-group\">\n\n         <li class=\"list-group-item\"><small class=\"text-muted\">Kunnan asukasluku: </small>{kuntienAsLuvut[counter]}</li>\n         <li class=\"list-group-item\"><small class=\"text-muted\">Väkiluvun muutos edellisestä vuodesta: </small> {vlMuutokset[counter] + \"%\"}</li>\n         <li class=\"list-group-item\"> <small class=\"text-muted\">Työllisyysaste: </small> {tyoAsteet[counter] + \"%\"}</li>\n         <li class=\"list-group-item\"> <small class=\"text-muted\">Työpaikkojen lukumäärä: </small> {tpLukumaarat[counter]}</li>\n         <li class=\"list-group-item\"><small class=\"text-muted\">Tulonsaajia: </small> {tulonsaajat[counter]}</li>\n         </ul>\n\n         <ul class=\"list-group\">\n\n         <li class=\"list-group-item\"><small class=\"text-muted\">Veronalaiset tulot keskimäärin: </small> {veronalaisetTulotKeskimaarin[counter] + \"€/vuosi\"}</li>\n         <li class=\"list-group-item\"><small class=\"text-muted\">Ansiotulot keskimäärin: </small> {ansioTulotKeskimaarin[counter]+ \"€/vuosi\"}</li>\n         <li class=\"list-group-item\"><small class=\"text-muted\">Verot yhteensä keskimäärin: </small> {verotYhteensaKeskimaarin[counter]+ \"€/vuosi\"}</li>\n         <li class=\"list-group-item\"><small class=\"text-muted\">Valtionvero keskimäärin: </small> {valtionVeroKeskimaarin[counter]+ \"€/vuosi\"}</li>\n         <li class=\"list-group-item\"><small class=\"text-muted\">Kunnallisvero keskimäärin: </small> {kunnallisVeroKeskimaarin[counter]+ \"€/vuosi\"}</li>\n         </ul>\n\n         </ul>\n\n         </div>\n         </div>\n\n\n         <div class=\"row\">\n    <div class=\"col jumbotron\">\n      <li class=\"list-group-item\"><small class=\"text-muted\">Toimialoja eniten: </small> {enitenTulostus}</li>\n      <li class=\"list-group-item\"><small class=\"text-muted\">Toimialoja toiseksi eniten: </small> {toiseksiEnitenTulostus}</li>\n      <li class=\"list-group-item\"><small class=\"text-muted\">Toimialoja kolmanneksi eniten: </small> {kolmasTulostus}</li>\n      <li class=\"list-group-item\"><small class=\"text-muted\">Toimialoja neljänneksi eniten: </small> {neljasTulostus}</li>\n      <li class=\"list-group-item\"><small class=\"text-muted\">Toimialoja viidenneksi eniten: </small> {viidesTulostus}</li>\n    </div>\n    \n  </div>\n\n     </div>\n\n     \n\n\n     </div>\t\t\n   </div>\n )\n\n \n\n  \n }\n\nReactDOM.render(\n  React.createElement(App, null),\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}