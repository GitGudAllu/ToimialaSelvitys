{"ast":null,"code":"import _slicedToArray from \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport data from \"./kuntienavainluvut1\";\nimport './App.css';\nimport datavaakunat from \"./vaakunaKuvat\";\n\nconst App = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        setCounter = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        muutosIndeksi = _useState4[0],\n        asetaMuutos = _useState4[1];\n\n  const setToValue = value => setCounter(value);\n\n  const asetaMuutosArvo = value => asetaMuutos(value); //objektilista kuntien nimistä\n\n\n  const kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label; //objektilista asukasluvuista\n\n  const pktiedot = data.dataset.value;\n  var kuntienAsLuvut = [];\n\n  for (let i = 0, j = 0; i < pktiedot.length; i += 4, j++) {\n    kuntienAsLuvut[j] = pktiedot[i];\n  }\n\n  var vlMuutokset = [];\n\n  for (let i = 1, j = 0; i < pktiedot.length; i += 4, j++) {\n    vlMuutokset[j] = pktiedot[i];\n  } //objektilista kuntien indekseistä\n\n\n  const kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index;\n  const vaakunat = datavaakunat.selection1;\n  console.log(vaakunat[5].image);\n  var nimiTaulukko = [];\n  var kuntienIit = [];\n  var vaakunaTaulukko = []; // kuntien nimet taulukkoon\n\n  for (var x in kuntienNimet) {\n    nimiTaulukko.push(kuntienNimet[x]);\n  } // kuntien indeksit taulukkoon\n\n\n  for (var x in kuntienIndeksit) {\n    kuntienIit.push(kuntienIndeksit[x]);\n  }\n\n  var avain;\n  var arvo;\n  var nimetJaIndeksit = {}; // kuntien nimet ja indeksit mapitettuna yhteen objektilistaan\n\n  for (var i = 0; i < nimiTaulukko.length; i++) {\n    avain = kuntienIit[i];\n    arvo = nimiTaulukko[i];\n    nimetJaIndeksit[avain] = arvo;\n  }\n\n  const jarjestetty = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(nimetJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = nimetJaIndeksit[key];\n  }); // Kuntien nimien erotus järjestetystä objektilistasta\n\n  var nimetJarjestyksessa = [];\n\n  for (var x in jarjestetty) {\n    nimetJarjestyksessa.push(jarjestetty[x]);\n  }\n\n  var asukasLukuI;\n  var listaI; // ottaa selectistä valuen ja tulostaa sen\n\n  const tulosta = listaValittu => {\n    listaI = listaValittu.target.value; //console.log(listaIndex)\n\n    setToValue(listaI);\n    asetaMuutosArvo(listaI);\n    console.log(counter);\n    console.log(muutosIndeksi);\n  }; // asukasluvut löytyvät taulukosta neljän indeksin välein ([0,4,8,...])\n\n\n  var asukaslukuInd = 0; // valintalista kunnista, indeksöi samalla 0->n\n\n  return (// Bootstrapin pääcontainer\n    React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"btn-group btn-group-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"aria-pressed\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Toimialat\"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"aria-pressed\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Paikkakunnat\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"listaKunnista\",\n      className: \"form-control\",\n      size: \"28\",\n      onChange: tulosta,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, nimetJarjestyksessa.map(s => React.createElement(\"option\", {\n      value: asukaslukuInd++,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, s)))), React.createElement(\"div\", {\n      className: \"col-sm jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tiedotheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, nimetJarjestyksessa[counter]), React.createElement(\"img\", {\n      src: vaakunat[counter].image,\n      alt: \"new\",\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Kunnan asukasluku: \"), kuntienAsLuvut[counter], React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      class: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"V\\xE4kiluvun muutos% edellisest\\xE4: \"), \" \", vlMuutokset[counter]))))\n  );\n};\n\nReactDOM.render(React.createElement(App, null), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tuomo/PROJEKTITYÖ/ryhmatyo/tklaskuri/src/index.js"],"names":["React","useState","ReactDOM","data","datavaakunat","App","counter","setCounter","muutosIndeksi","asetaMuutos","setToValue","value","asetaMuutosArvo","kuntienNimet","dataset","dimension","category","label","pktiedot","kuntienAsLuvut","i","j","length","vlMuutokset","kuntienIndeksit","index","vaakunat","selection1","console","log","image","nimiTaulukko","kuntienIit","vaakunaTaulukko","x","push","avain","arvo","nimetJaIndeksit","jarjestetty","Object","keys","sort","forEach","key","nimetJarjestyksessa","asukasLukuI","listaI","tulosta","listaValittu","target","asukaslukuInd","map","s","render","createElement","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom'\nimport data from \"./kuntienavainluvut1\"; \nimport './App.css';\nimport datavaakunat from \"./vaakunaKuvat\"\n\n\n\nconst App = () => {\n    \n    \n  const [ counter, setCounter ] = useState(0)\n  const [ muutosIndeksi, asetaMuutos ] = useState(0)\n\n  const setToValue = (value) => setCounter(value)\n\n  const asetaMuutosArvo = (value) => asetaMuutos(value)\n\n  \t//objektilista kuntien nimistä\n    const kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label\n    //objektilista asukasluvuista\n    const pktiedot = data.dataset.value\n    var kuntienAsLuvut = [];\n    for (let i = 0, j = 0; i < pktiedot.length; i+=4, j++){\n      kuntienAsLuvut[j] = pktiedot[i];\n    }\n    var vlMuutokset = [];\n    for (let i = 1, j = 0; i < pktiedot.length; i+=4, j++){\n      vlMuutokset[j] = pktiedot[i];\n    }\n    //objektilista kuntien indekseistä\n    const kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index\n\n    const vaakunat = datavaakunat.selection1\n\n    console.log(vaakunat[5].image)\n\n    var nimiTaulukko = [];\n    var kuntienIit = [];\n    var vaakunaTaulukko = [];\n\n\n    \n    \n    // kuntien nimet taulukkoon\n    for (var x in kuntienNimet) {\n        nimiTaulukko.push(kuntienNimet[x]);\n    }\n\n \n\n    // kuntien indeksit taulukkoon\n    for (var x in kuntienIndeksit) {\n        kuntienIit.push(kuntienIndeksit[x]);\n    }\n\n    var avain;\n    var arvo;\n    var nimetJaIndeksit = {};\n\n    // kuntien nimet ja indeksit mapitettuna yhteen objektilistaan\n    for (var i = 0; i < nimiTaulukko.length; i++){\n    \tavain = kuntienIit[i];\n    \tarvo = nimiTaulukko[i];\n    \tnimetJaIndeksit[avain] = arvo;\n    }\n\n    const jarjestetty = {};\n    // objektilistan järjestys avainarvon eli indeksin mukaan\n    Object.keys(nimetJaIndeksit).sort().forEach(function(key) {\n  \tjarjestetty[key] = nimetJaIndeksit[key];\n\t});\n\n    // Kuntien nimien erotus järjestetystä objektilistasta\n\tvar nimetJarjestyksessa = [];\n\tfor (var x in jarjestetty) {\n        nimetJarjestyksessa.push(jarjestetty[x]);\n    }\n\n    \n    var asukasLukuI;\n    var listaI;\n    // ottaa selectistä valuen ja tulostaa sen\n    const tulosta = (listaValittu) => {\n    \t\n      listaI = listaValittu.target.value\n      //console.log(listaIndex)\n      setToValue(listaI)\n      asetaMuutosArvo(listaI)\n      console.log(counter)\n      console.log(muutosIndeksi)\n    }\n\n    \n    // asukasluvut löytyvät taulukosta neljän indeksin välein ([0,4,8,...])\n    var asukaslukuInd = 0;\n\n    // valintalista kunnista, indeksöi samalla 0->n\n    return (\n    // Bootstrapin pääcontainer\n    <div className=\"container\">\t\n\n      <div class=\"row justify-content-md-center\">\n      \n      <div class=\"btn-group btn-group-lg\">\n      <button type=\"button\" class=\"btn btn-primary\" aria-pressed=\"true\">Toimialat</button>\n      <button type=\"button\" class=\"btn btn-primary\" aria-pressed=\"true\">Paikkakunnat</button>\n      </div>\n      </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm\">\n        \n\n        \n            <select id=\"listaKunnista\"className=\"form-control\" size=\"28\" onChange={tulosta} >\n            {nimetJarjestyksessa.map(s => (<option value={asukaslukuInd++}>{s}</option>))} \n            </select>\n\n          </div>\n\n          <div className=\"col-sm jumbotron\">\n\n            <div className=\"tiedotheader\">\n              <h5>{nimetJarjestyksessa[counter]}</h5> \n              \n              <img src={vaakunat[counter].image} alt=\"new\" align=\"right\"/>\n            </div>\n\n            <br></br>\n           <p> <small class=\"text-muted\">Kunnan asukasluku: </small>{kuntienAsLuvut[counter]}\n            <br></br>\n            <small class=\"text-muted\">Väkiluvun muutos% edellisestä: </small> {vlMuutokset[counter]}\n            </p>\n        </div>\n\n        \n\n\n        </div>\t\t\n      </div>\n    )\n\n    \n }\n\nReactDOM.render(\n  React.createElement(App, null),\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}