{"ast":null,"code":"import _slicedToArray from \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tuomo/PROJEKTITYO\\u0308/ryhmatyo/tklaskuri/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport data from \"./kuntienavainluvut1\";\nimport './App.css';\nimport datavaakunat from \"./vaakunaKuvat\";\nimport dataverot from \"./verotietoja\";\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\";\nimport ToimialatValilehti from './toimialat';\nimport AloitusValilehti from './aloitus';\nimport dataPaastot from \"./paastotToimialoittain\";\nimport dataToimialojenVerot from \"./toimialojenVerot2\";\nimport FadeIn from 'react-fade-in'; //console.log(dataPaastot)\n//console.log(dataToimialojenVerot)\n\nconst lukupilkuilla = x => {\n  if (x === undefined) return \"Ei tiedossa\";else return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n}; // objektilista kuntien nimistä\n\n\nconst kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label; // objektilista asukasluvuista\n\nconst pktiedot = data.dataset.value; // objektilista kuntien indekseistä\n\nconst kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index; // vuodet 2005-2017 taulukossa indeksistä 0 alkaen\n\nconst veroTietojenVuodet = Object.keys(dataverot.dataset.dimension.Vuosi.category.label); // objektilista verotietoihin koskevista kategorioista\n\nconst verokategoriat = dataverot.dataset.dimension.Tiedot.category.label; // verotiedot taulukossa\n\nconst verotiedot = dataverot.dataset.value; // lista eri toimialoista\n//const toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label\n// toimialojen määrät taulukossa\n\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value; // toimialat ja niitä vastaavat indeksit\n\nconst toimialatJaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category;\n/** Parsii paikkakuntadataa omiin taulukoihin sarakenumeron perusteella.\n* @param {number} sarakeNro Paikkakuntadatan sarakenumero; kuntien as. luvut: 0, väkiluvunmuutokset: 1, työasteet: 2, työpaikkojen lkm: 3.\n* @returns Taulukko haluttua paikkakuntadataa\n*/\n\nfunction luoPKtaulukko(sarakeNro) {\n  var taulukko = [];\n\n  for (let i = sarakeNro, j = 0; i < pktiedot.length; i += 4, j++) {\n    taulukko[j] = pktiedot[i];\n  }\n\n  return taulukko;\n}\n/** Parsii verotiedot omaan taulukkoon sarakenumeron perusteella\n* @param {number} sarakeNro Verodatan sarakenumero; tulonsaajat: 0, veronalaiset tulot keskimäär: 1, ansiotulot km: 2, verot yhteensä km: 3,\n*                                                   valtion vero km: 4, kunnallisvero km: 5.\n* @returns Taulukko haluttua verodataa\n*/\n\n\nfunction luoVeroTaulukko(sarakeNro) {\n  var taulukko = [];\n  const solujenLkmPerVuosi = Object.keys(kuntienNimet).length * Object.keys(verokategoriat).length;\n  var verodata2017indeksi = (veroTietojenVuodet.length - 1) * solujenLkmPerVuosi;\n\n  for (let i = verodata2017indeksi + sarakeNro, j = 0; i < solujenLkmPerVuosi * veroTietojenVuodet.length; i += 6, j++) {\n    taulukko[j] = verotiedot[i];\n  }\n\n  return taulukko;\n}\n/** Parsii sovelluksessa valitun kunnan toimialatiedot yhteen taulukkoon.\n* Toimialojen määrät -datasetistä lasketaan oikea aloitusindeksi kunnan indeksin avulla.\n* @param {number} kunnanIndeksi Käyttäjän valitseman kunnan indeksi (koko maan toimialat indeksissä 0)\n* @param {list} toimialat Lista kaikista toimialoista\n* @returns Valitun kunnan toimialojen lukumäärät taulukossa\n*/\n\n\nfunction parsiKunnanToimialat(kunnanIndeksi, toimialat) {\n  var toimialojenLkm = Object.keys(toimialat).length;\n  var kunnanToimialojenLkmt = [];\n  var alkuindeksi = kunnanIndeksi * toimialojenLkm; //var alkuindeksi2;\n  //console.log(\"kunnani: \" + kunnanIndeksi)\n  //console.log(\"alkui: \" + alkuindeksi2)\n  //if (kunnanIndeksi == 1) alkuindeksi2 = 7 * toimialojenLkm\n  //else if (kunnanIndeksi > 1  && kunnanIndeksi < 8 ) alkuindeksi2 = alkuindeksi - toimialojenLkm\n  //else alkuindeksi2 = alkuindeksi\n  //console.log(\"alkui: \" + alkuindeksi2)\n\n  for (let i = alkuindeksi; i < alkuindeksi + toimialojenLkm; i++) {\n    kunnanToimialojenLkmt.push(toimialojenMaarat[i]);\n  }\n\n  return kunnanToimialojenLkmt;\n}\n/** Etsii toimialan indeksin, jota löytyy eniten valitusta kunnasta.\n* Ohittaa parametrina annetun alkion ja sitä suuremmat, jotta funktiota voi käyttää myös\n* toiseksi suurimman etsintään (jne).\n* @param {list} tAlaNimet Toimialojen nimet järjestetyssä listassa\n* @param {array} tAlaLkm Valitun kunnan toimialojen lukumäärät taulukossa\n* @param {number} ohita Alkion indeksi, joka ja jota suuremmat ohitetaan\n* @returns Suurimman alkion indeksi, pl. ohitetut alkiot\n*/\n\n/*function etsiSuurimmanI(tAlaNimet, tAlaLkm, ohita) {\n  //console.log(tAlaNimet)\n  let suurin = -1\n  let suurimmanI = ohita\n  for (let i = 0; i < tAlaLkm.length; i++) {\n    if (tAlaLkm[i] > tAlaLkm[ohita] || i === ohita) continue;\n    if (tAlaLkm[i] > suurin) {\n      let s = tAlaNimet[i]\n      let alkutunnus = s.substr(0, s.indexOf(' ')).trim()\n      //console.log(alkutunnus)\n      //console.log(isNaN(parseInt(alkutunnus)))\n      if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue\n      //console.log(alkutunnus)\n      suurin = tAlaLkm[i]\n      suurimmanI = i\n      //console.log(\"suurin: \" + suurin)\n    }\n  }\n  return suurimmanI\n}*/\n\n/** Muotoilee ja palauttaa merkkijonona annettua indeksiä vastaavan toimialan \n* nimen ja lukumäärän.\n* @param {list} toimialojenNimet Toimialat ja niiden indeksit listassa avain-arvo pareina.\n* @param {array} toimialojenLkm Valitun kunnan toimialojen lukumäärät taulukossa.\n* @param {number} i Toimialan indeksi\n* @returns Merkkijono muotoa \"[toimialan nimi] : [toimialan lkm valitussa kunnassa]\"\n*/\n\n/*function tulostaToimialat(toimialojenNimet, toimialojenLkm, i) {\n  //console.log(eniten)\n  //let suurin = 0;\n  //let toiseksiSuurin = etsiSuurin(toimialojenLkm, suurin)\n  //let kolmas = etsiSuurin(toimialojenLkm, toiseksiSuurin)\n  //let suurimmanIndeksi = toimialojenLkm.indexOf(eniten)\n  //let indeksi2 = toimialojenLkm.indexOf(toiseksiSuurin)\n  //console.log(suurimmanIndeksi)\n  //console.log(suurin)\n  //console.log(toiseksiSuurin)\n  //console.log(kolmas)\n  let s = toimialojenNimet[i] + \" : \" + toimialojenLkm[i]\n  return s.substr(s.indexOf(' ') + 1).trim()\n  //return toimialojenNimet[i] + \" : \" + toimialojenLkm[i] + \" \"\n}*/\n\n/** Järjestää annetun datasetin indeksien perusteella suuruusjärjestykseen.\n* @param {list} datasetti Lista-pari labeleista ja indekseistä\n* @returns Avain-arvo lista indekseistä ja labeleista\n*/\n\n\nfunction jarjestaIndekseittain(datasetti) {\n  var labelit = [];\n\n  for (let x in datasetti.label) {\n    labelit.push(datasetti.label[x]);\n  }\n\n  var indeksit = [];\n\n  for (let x in datasetti.index) {\n    indeksit.push(datasetti.index[x]);\n  }\n\n  var labelitJaIndeksit = {};\n\n  for (let i = 0; i < Object.keys(datasetti.label).length; i++) {\n    let avain = indeksit[i];\n    let arvo = labelit[i];\n    labelitJaIndeksit[avain] = arvo;\n  } //toimialat ja niiden indeksit avain-arvo pareina listassa\n\n\n  let jarjestetty = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(labelitJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = labelitJaIndeksit[key];\n  });\n  return jarjestetty;\n}\n/** Parsii jokaisen toimialan päästöt tietyltä vuodelta.\n* @param {number} vuodenIndeksi Halutun vuoden indeksi, alkaen 0: 2008, 1: 2009, 2:2010 etc.\n* @returns Taulukko toimialojen päästöarvoista (pelkät arvot)\n*/\n\n\nfunction parsiPaastotVuodelta(vuodenIndeksi) {\n  var paastoTaulukko = dataPaastot.dataset.value;\n  let toimialojenLkm = Object.keys(dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category.label).length;\n  var vuodenPaastot = [];\n  let alkuindeksi = vuodenIndeksi * toimialojenLkm;\n\n  for (let i = alkuindeksi; i < alkuindeksi + toimialojenLkm; i++) {\n    vuodenPaastot.push(paastoTaulukko[i]);\n  }\n\n  return vuodenPaastot;\n}\n/** Etsii indeksiä vastaavan toimialan päästöarvon, ja laskee toimialan keskimääräiset päästöt\n* valitussa kunnassa.\n* @param {list} toimialat Lista toimialoista ja niiden indekseistä avain-arvo pareina\n* @param {list} toimialojenPaastot Lista-pari toimialojen päästöistä ja niiden indekseistä\n* @param {array} toimialojenLkmSuomessa Taulukko toimialojen lukumääristä koko suomessa\n* @param {array} toimialojenLkmKunnalla Taulukko toimialojen lukumääristä käyttäjän valitsemassa kunnassa\n* @param {number} i Indeksi jolla valitaan haluttu toimiala\n* @returns Toimialan keskimääräiset päästöt kunnassa, NaN jos ei saatavilla\n*/\n\n\nfunction etsiPaastot(toimialojenPaastot, toimialatJaLkmtSuomessa, toimialaJaLkm) {\n  //console.log(toimialojenLkmKunnalla)\n  let toimialanLkmSuomessa; //let toimialanLkmKunnassa = toimialanLkmKunnalla[i]\n  //console.log(\"asd: \" +  toimialanLkmKunnassa)\n\n  let toimiala = toimialaJaLkm.toimiala; //console.log(toimiala)\n\n  let alkutunnus = toimiala.substr(0, toimiala.indexOf(' ')).trim();\n\n  for (let i = 0; i < toimialatJaLkmtSuomessa.length; i++) {\n    let tAla = toimialatJaLkmtSuomessa[i].toimiala;\n    let s = tAla.substr(0, tAla.indexOf(' ')).trim();\n    if (alkutunnus === s) toimialanLkmSuomessa = toimialatJaLkmtSuomessa[i].lkm;\n  }\n\n  let toimialanPaastot = toimialojenPaastot[alkutunnus]; //console.log(alkutunnus + \" : \" + toimialanPaastot)\n\n  let toimialanPaastotKM = toimialanPaastot / toimialanLkmSuomessa; //console.log(alkutunnus + \" : \" + toimialanPaastotKM)\n  //console.log(alkutunnus + \" : \" + toimialanLkmSuomessa)\n\n  let kokonaisPaastotKunnassa = toimialanPaastotKM * toimialaJaLkm.lkm; //console.log(alkutunnus + \" : \" + kokonaisPaastotKunnassa)\n  //console.log(kokonaisPaastotKunnassa)\n  //console.log(\"asdf: \" +  kokonaisPaastotKunnassa)\n\n  if (isNaN(kokonaisPaastotKunnassa)) return -1;\n  return kokonaisPaastotKunnassa;\n}\n/** Etsii indeksiä vastaavan toimialan verotiedot, ja laskee toimialan keskimääräiset verotulot\n* valitussa kunnassa.\n* @param {list} toimialat Lista toimialoista ja niiden indekseistä avain-arvo pareina\n* @param {array} toimialojenLkmKunnalla Taulukko toimialojen lukumääristä käyttäjän valitsemassa kunnassa\n* @param {number} i Indeksi jolla valitaan haluttu toimiala\n* @returns Toimialan keskimääräiset veromaksut kunnassa, NaN jos ei saatavilla\n*/\n\n\nfunction etsiVerot(toimialaJaLkmKunnalla, kokoSuomenToimialatJaLkmt, vuosi) {\n  let toimialanLkmSuomessa;\n  let toimiala = toimialaJaLkmKunnalla.toimiala;\n  let alkutunnus = toimiala.substr(0, toimiala.indexOf(' ')).trim();\n\n  for (let i = 0; i < kokoSuomenToimialatJaLkmt.length; i++) {\n    let tAla = kokoSuomenToimialatJaLkmt[i].toimiala;\n    let s = tAla.substr(0, tAla.indexOf(' ')).trim();\n    if (alkutunnus === s) toimialanLkmSuomessa = kokoSuomenToimialatJaLkmt[i].lkm;\n  }\n\n  const veroToimialat = dataToimialojenVerot.dataset.dimension.Toimiala.category;\n  let toimialojenLkm = Object.keys(veroToimialat.label).length;\n  let toimialojenVeroarvot = dataToimialojenVerot.dataset.value;\n  let vuoden2017Indeksi = vuosi;\n  let solujenLkmPerToimiala = 2;\n  let aloitusindeksi2017 = toimialojenLkm * vuoden2017Indeksi * solujenLkmPerToimiala;\n  let toimialojenVerot2017 = [];\n\n  for (let j = aloitusindeksi2017; j < aloitusindeksi2017 + toimialojenLkm; j++) {\n    toimialojenVerot2017.push(toimialojenVeroarvot[j]);\n  } //console.log(veroToimialat.index[alkutunnus])\n\n\n  let valitunToimialanIndeksi = aloitusindeksi2017 + veroToimialat.index[alkutunnus] * solujenLkmPerToimiala; //console.log(valitunToimialanIndeksi)\n\n  let toimialanVerotYhteensa = toimialojenVeroarvot[valitunToimialanIndeksi];\n  let toimialanVerotKM = toimialanVerotYhteensa / toimialanLkmSuomessa; //console.log(alkutunnus + \" : \" + toimialanVerotKM)\n\n  let toimialanLkm = toimialaJaLkmKunnalla.lkm; //console.log(alkutunnus + \" : \" + toimialanLkm)\n\n  let toimialanVerotPerKunta = toimialanLkm * toimialanVerotKM; //console.log(toimialanVerotPerKunta)\n\n  return toimialanVerotPerKunta;\n}\n\nfunction laskeToimialanTiedot(toimialatYhteensaKunnassa, toimialatJaLkmPerKunta, TAtunnuksetJaPaastoarvot, kokoSuomenToimialatJaLkmt, vuosi) {\n  //var indeksi; //etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, -1)\n  var toimialanPaastot; //= etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi)\n\n  var toimialanVerot; //= etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi)\n  // var ohita = -1;\n\n  var toimialaTiedot = [];\n  var suhdelukuKokoSuomi = -1; //jos suhdelukua ei voi laskea\n  //let toimialatYhteensaKunnassa = kunnantoimialat[0]\n  //console.log(kunnantoimialat)\n\n  for (let i = 0; i < toimialatJaLkmPerKunta.length; i++) {\n    let suhdelukuKunta = -1; //indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, ohita)\n    //console.log(toimiAlatJarj[indeksi])\n\n    let toimialanLkmKunnassa = toimialatJaLkmPerKunta[i].lkm;\n    let toimialanOsuusPerKunta = toimialanLkmKunnassa / toimialatYhteensaKunnassa; //console.log(\"indeksi\" + indeksi)\n\n    toimialanPaastot = etsiPaastot(TAtunnuksetJaPaastoarvot, kokoSuomenToimialatJaLkmt, toimialatJaLkmPerKunta[i]); //console.log(toimialatJaLkmPerKunta)\n\n    toimialanVerot = etsiVerot(toimialatJaLkmPerKunta[i], kokoSuomenToimialatJaLkmt, vuosi); //console.log(verot)\n\n    if (!isNaN(toimialanPaastot) && !isNaN(toimialanVerot) && toimialanPaastot > 0) {\n      suhdelukuKokoSuomi = toimialanVerot / toimialanPaastot;\n      suhdelukuKunta = suhdelukuKokoSuomi * toimialanOsuusPerKunta;\n    } //console.log(suhdeluku)\n\n    /*if (suhdeluku < 0){\n      ohita = indeksi\n      continue;\n    }*/\n\n\n    toimialaTiedot.push({\n      toimiala: toimialatJaLkmPerKunta[i].toimiala,\n      suhde: suhdelukuKunta,\n      lkm: toimialanLkmKunnassa,\n      verot: toimialanVerot,\n      paastot: toimialanPaastot\n    }); //ohita = indeksi\n  } //console.log(suhdeluvut)\n\n\n  return toimialaTiedot;\n}\n\nfunction luoToimialatJaLkmt(toimialojenNimet, toimialojenLkmt) {\n  //console.log(toimialojenNimet)\n  //console.log(toimialojenLkmt)\n  let toimialatJaLkmt = [];\n\n  for (let i = 0; i < toimialojenLkmt.length; i++) {\n    let s = toimialojenNimet[i];\n    let alkutunnus = s.substr(0, s.indexOf(' ')).trim(); //console.log(alkutunnus)\n    //console.log(isNaN(parseInt(alkutunnus)))\n\n    if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue;\n    toimialatJaLkmt.push({\n      toimiala: toimialojenNimet[i],\n      lkm: toimialojenLkmt[i]\n    });\n  }\n\n  let jarjestetty = toimialatJaLkmt.sort(function (a, b) {\n    return b.lkm - a.lkm;\n  }); //console.log(toimialatJaLkmt)\n\n  return jarjestetty;\n}\n\nconst App = () => {\n  const _useState = useState('aloitus'),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const toPage = page2 => event => {\n    event.preventDefault();\n    var vanha = page;\n    console.log(\"joo\", vanha);\n\n    if (page === page2) {\n      setPage({\n        vanha\n      });\n    } else setPage(page2);\n  };\n\n  const content = () => {\n    if (page === 'paikkakunnat') {\n      return React.createElement(Paikkakunnat, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      });\n    } else if (page === 'toimialat') {\n      return React.createElement(ToimialatValilehti, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      });\n    } else if (page === 'aloitus') {\n      return React.createElement(AloitusValilehti, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(FadeIn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    id: \"tietoja\",\n    class: \"btn btn-outline-primary infonappi float-right\",\n    onClick: toPage('aloitus'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }, \"Tietoja ohjelmasta\"), React.createElement(\"div\", {\n    className: \"row justify-content-md-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg joo\",\n    id: \"joo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('paikkakunnat'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, \"Paikkakunnat\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('toimialat'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  }, \"Toimialat\"))), content()));\n}; //HUOM PAIKKAKUNNAT\n//KOMPONENTTI JOKA piirtää PAIKKAKUNNAT sivulle kaiken\n\n\nconst Paikkakunnat = () => {\n  const _useState3 = useState('tietoja'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        page = _useState4[0],\n        setPage = _useState4[1];\n\n  const toPage = page => event => {\n    event.preventDefault();\n    setPage(page);\n  };\n\n  const _useState5 = useState(3),\n        _useState6 = _slicedToArray(_useState5, 2),\n        vuosi = _useState6[0],\n        setVuosi = _useState6[1];\n\n  const setToVuosi = value => setVuosi(value);\n\n  const vaihdaVuosi = () => {\n    setToVuosi(2);\n  };\n\n  const vaihdaVuosi2 = () => {\n    setToVuosi(1);\n  };\n\n  const content = () => {\n    if (page === 'tietoja') {\n      return React.createElement(Tietoja, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      });\n    } else if (page === 'suhdeluku') {\n      return React.createElement(Suhdeluku, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      });\n    } else if (page === 'verot') {\n      return React.createElement(Verot, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      });\n    } else if (page === 'paastot') {\n      return React.createElement(Paastot, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      });\n    }\n  }; // State joka pitää muistissa indeksiä \n\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        counter = _useState8[0],\n        setCounter = _useState8[1];\n\n  const setToValue = value => setCounter(value); //paikkakuntatiedot parsittuna omiin taulukkoihin\n\n\n  var kuntienAsLuvut = luoPKtaulukko(0);\n  var vlMuutokset = luoPKtaulukko(1);\n  var tyoAsteet = luoPKtaulukko(2);\n  var tpLukumaarat = luoPKtaulukko(3);\n  const vaakunat = datavaakunat.selection1;\n  var nimiTaulukko = [];\n  var kuntienIit = []; //var vaakunaTaulukko = [];\n  // kuntien nimet taulukkoon\n\n  for (var x in kuntienNimet) {\n    nimiTaulukko.push(kuntienNimet[x]);\n  }\n\n  var toimialojenNimet = [];\n\n  for (let x in toimialatJaIndeksit.label) {\n    toimialojenNimet.push(toimialatJaIndeksit.label[x]);\n  }\n\n  var toimialojenIndeksit = [];\n\n  for (let x in toimialatJaIndeksit.index) {\n    toimialojenIndeksit.push(toimialatJaIndeksit.index[x]);\n  }\n\n  var toimiAJaI = {};\n\n  for (let i = 0; i < toimialojenNimet.length; i++) {\n    let avain = toimialojenIndeksit[i];\n    let arvo = toimialojenNimet[i];\n    toimiAJaI[avain] = arvo;\n  } //toimialat ja niiden indeksit avain-arvo pareina listassa\n\n\n  const toimiAlatJarj = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(toimiAJaI).sort().forEach(function (key) {\n    toimiAlatJarj[key] = toimiAJaI[key];\n  });\n  var toimialatYlaotsikot = [];\n\n  for (let i = 0; i < Object.keys(toimiAlatJarj).length; i++) {\n    let tAla = toimiAlatJarj[i];\n    let alkutunnus = tAla.substr(0, tAla.indexOf(' ')).trim();\n    if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue;\n    toimialatYlaotsikot.push(toimiAlatJarj[i]);\n  } //console.log(toimialatYlaotsikot)\n\n\n  var paastotToimialat = dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category; //var toimialatJaTunnukset = paastotToimialat.label\n\n  var paastojenToimialatJarj = jarjestaIndekseittain(paastotToimialat);\n  var paastotToimialoittain2008 = parsiPaastotVuodelta(0);\n  var TAtunnuksetJaPaastoarvot = {};\n\n  for (let i = 0; i < Object.keys(paastojenToimialatJarj).length; i++) {\n    let s = paastojenToimialatJarj[i];\n    let avain = s.substr(0, s.indexOf(' ')).trim();\n    let arvo = paastotToimialoittain2008[i];\n    TAtunnuksetJaPaastoarvot[avain] = arvo;\n  } //console.log(TAtunnuksetJaPaastoarvot)\n\n\n  var kokoSuomenToimialojenLkmt = parsiKunnanToimialat(0, toimiAlatJarj);\n  var kokoSuomenToimialatJaLkmt = luoToimialatJaLkmt(toimiAlatJarj, kokoSuomenToimialojenLkmt); //console.log(kokoSuomenToimialatJaLkmt)\n  //console.log(toimiAlatJarj)\n  // käyttäjän valitseman kunnan toimialatiedot taulukossa \n\n  var kunnantoimialat = parsiKunnanToimialat(counter, toimiAlatJarj);\n  var toimialatJaLkmPerKunta = luoToimialatJaLkmt(toimiAlatJarj, kunnantoimialat); //console.log(kunnantoimialat)\n\n  var kaikkiTAtiedot = laskeToimialanTiedot(kunnantoimialat[0], toimialatJaLkmPerKunta, TAtunnuksetJaPaastoarvot, kokoSuomenToimialatJaLkmt, vuosi); //console.log(kunnanSuhdeluvut)\n  // kuntien indeksit taulukkoon\n\n  for (let x in kuntienIndeksit) {\n    kuntienIit.push(kuntienIndeksit[x]);\n  }\n\n  var avain;\n  var arvo;\n  var nimetJaIndeksit = {}; // valintalista kunnista, indeksöi samalla 0->n\n  // kuntien nimet ja indeksit mapitettuna yhteen objektilistaan\n\n  for (var i = 0; i < nimiTaulukko.length; i++) {\n    avain = kuntienIit[i];\n    arvo = nimiTaulukko[i];\n    nimetJaIndeksit[avain] = arvo;\n  }\n\n  const jarjestetty = {}; // objektilistan järjestys avainarvon eli indeksin mukaan\n\n  Object.keys(nimetJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = nimetJaIndeksit[key];\n  }); // Kuntien nimien erotus järjestetystä objektilistasta taulukkoon\n\n  var nimetJarjestyksessa = [];\n\n  for (let x in jarjestetty) {\n    nimetJarjestyksessa.push(jarjestetty[x]);\n  } // verotiedot parsittuna omiin taulukoihin\n\n\n  var tulonsaajat = luoVeroTaulukko(0);\n  var veronalaisetTulotKeskimaarin = luoVeroTaulukko(1);\n  var ansioTulotKeskimaarin = luoVeroTaulukko(2);\n  var verotYhteensaKeskimaarin = luoVeroTaulukko(3);\n  var valtionVeroKeskimaarin = luoVeroTaulukko(4);\n  var kunnallisVeroKeskimaarin = luoVeroTaulukko(5); // Hakutoiminto, ottaa inputista valuen ja vertaa sitä selectin valueihin\n  // piilottaa valuet, jotka eivät vastaa hakusanaa\n\n  var select;\n  var haettava;\n\n  const etsiPaikkakunta = hakusana => {\n    haettava = hakusana.target.value;\n    select = document.getElementById(\"listaKunnista\");\n\n    for (var i = 0; i < select.length; i++) {\n      var txt = select[i].text;\n      var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n      select.options[i].style.display = include ? '' : 'none';\n    }\n  }; //var asukasLukuI;\n\n\n  var listaI; // ottaa selectistä valuen ja asettaa sen countteriin\n\n  const tulosta = listaValittu => {\n    listaI = listaValittu.target.value;\n    setToValue(listaI);\n  }; // asukasluvut löytyvät taulukosta neljän indeksin välein ([0,4,8,...])\n\n\n  var asukaslukuInd = 0; //alustetaan muuttujat\n\n  var monesko = \"\";\n  var monesko2 = 1;\n  var lista = [];\n  var tulostus; //console.log(toimiAlatJarj)\n\n  const Tietoja = () => {\n    monesko = \"\";\n    monesko2 = 1;\n    let lkmJarj = kaikkiTAtiedot.sort(function (a, b) {\n      return b.lkm - a.lkm;\n    });\n    let paastotTulostus;\n\n    for (let i = 0; i < lkmJarj.length; i++) {\n      if (lkmJarj[i].paastot >= 0) {\n        paastotTulostus = lkmJarj[i].paastot.toFixed(0) + \" tonnia kasvihuonekaasuja/vuosi\";\n      } else {\n        paastotTulostus = \"Päästötietoja ei saatavilla\";\n      }\n\n      let s = lkmJarj[i].toimiala + \" : \" + lkmJarj[i].lkm;\n      tulostus = s.substr(s.indexOf(' ') + 1).trim();\n      lista.push(React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683\n        },\n        __self: this\n      }, \"Toimialoja \", monesko, \" eniten: \"), \" \", tulostus, React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683\n        },\n        __self: this\n      }, \" kpl\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684\n        },\n        __self: this\n      }), \" \", React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684\n        },\n        __self: this\n      }, \"Toimialan p\\xE4\\xE4st\\xF6t kunnalla keskim\\xE4\\xE4rin: \"), paastotTulostus, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      }), \" \", React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      }, \"Toimialan verot kunnalla keskim\\xE4\\xE4rin: \"), lukupilkuilla(lkmJarj[i].verot.toFixed(0)) + \"€/vuosi\"));\n      monesko2++;\n      monesko = monesko2 + \".\";\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699\n      },\n      __self: this\n    }, lista);\n  };\n\n  const Suhdeluku = () => {\n    monesko = \"\";\n    monesko2 = 1; //lista = []\n\n    let suhdeluvutJarj = kaikkiTAtiedot.sort(function (a, b) {\n      return b.suhde - a.suhde;\n    });\n\n    for (let i = 0; i < suhdeluvutJarj.length; i++) {\n      if (suhdeluvutJarj[i].suhde < 0) break;\n      /*indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, ohita)\n      paastot = etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi)\n      verot = etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi)*/\n\n      let s = suhdeluvutJarj[i].toimiala;\n      tulostus = s.substr(s.indexOf(' ') + 1).trim();\n      lista.push(React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728\n        },\n        __self: this\n      }, monesko, \" Paras hy\\xF6tysuhde: \"), \" \", tulostus, React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }, \" Suhdeluku: \"), suhdeluvutJarj[i].suhde, \" \"));\n      monesko2++;\n      monesko = monesko2 + \".\";\n    } //console.log(\"jaa\", kunnanSuhdeluvut)\n    //console.log(suhdeluvutJarj)\n    //console.log(lista)\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745\n      },\n      __self: this\n    }, lista);\n  };\n\n  const Verot = () => {\n    monesko = \"\";\n    monesko2 = 1; //lista = []\n\n    let verotJarj = kaikkiTAtiedot.sort(function (a, b) {\n      return b.verot - a.verot;\n    });\n    let paastotTulostus;\n\n    for (let i = 0; i < verotJarj.length; i++) {\n      if (verotJarj[i].paastot >= 0) {\n        paastotTulostus = verotJarj[i].paastot.toFixed(0) + \" tonnia kasvihuonekaasuja/vuosi\";\n      } else {\n        paastotTulostus = \"Päästötietoja ei saatavilla\";\n      }\n\n      let s = verotJarj[i].toimiala + \" : \" + lukupilkuilla(verotJarj[i].verot.toFixed(0)) + \"€/vuosi\";\n      tulostus = s.substr(s.indexOf(' ') + 1).trim();\n      lista.push(React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776\n        },\n        __self: this\n      }, \"Veroja \", monesko, \" eniten: \"), \" \", tulostus, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777\n        },\n        __self: this\n      }), \" \", React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777\n        },\n        __self: this\n      }, \"Toimialan lkm kunnalla: \"), verotJarj[i].lkm + \" kpl\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778\n        },\n        __self: this\n      }), \" \", React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778\n        },\n        __self: this\n      }, \"Toimialan p\\xE4\\xE4st\\xF6t kunnalla keskim\\xE4\\xE4rin: \"), paastotTulostus));\n      monesko2++;\n      monesko = monesko2 + \".\";\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787\n      },\n      __self: this\n    }, lista);\n  };\n\n  const Paastot = () => {\n    monesko = \"\";\n    monesko2 = 1; //lista = []\n\n    let paastotJarj = kaikkiTAtiedot.sort(function (a, b) {\n      return b.paastot - a.paastot;\n    });\n    let paastotTulostus;\n    console.log(paastotJarj);\n\n    for (let i = 0; i < paastotJarj.length; i++) {\n      if (!isNaN(paastotJarj[i].paastot)) {\n        paastotTulostus = paastotJarj[i].paastot.toFixed(0) + \" tonnia kasvihuonekaasuja/vuosi\";\n      } else {\n        paastotTulostus = \"Päästötietoja ei saatavilla\";\n      }\n\n      let s = paastotJarj[i].toimiala + \" : \" + lukupilkuilla(paastotJarj[i].verot.toFixed(0)) + \"€/vuosi\";\n      tulostus = s.substr(s.indexOf(' ') + 1).trim();\n      lista.push(React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819\n        },\n        __self: this\n      }, \"Veroja \", monesko, \" eniten: \"), \" \", tulostus, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820\n        },\n        __self: this\n      }), \" \", React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820\n        },\n        __self: this\n      }, \"Toimialan lkm kunnalla: \"), paastotJarj[i].lkm + \" kpl\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821\n        },\n        __self: this\n      }), \" \", React.createElement(\"small\", {\n        class: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821\n        },\n        __self: this\n      }, \"Toimialan p\\xE4\\xE4st\\xF6t kunnalla keskim\\xE4\\xE4rin: \"), paastotTulostus));\n      monesko2++;\n      monesko = monesko2 + \".\";\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830\n      },\n      __self: this\n    }, lista);\n  };\n\n  return React.createElement(FadeIn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"search\",\n    name: \"search\",\n    placeholder: \"Hae...\",\n    onKeyUp: etsiPaikkakunta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852\n    },\n    __self: this\n  })), React.createElement(\"select\", {\n    id: \"listaKunnista\",\n    className: \"form-control\",\n    size: \"30\",\n    onChange: tulosta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855\n    },\n    __self: this\n  }, nimetJarjestyksessa.map(s => React.createElement(\"option\", {\n    value: asukaslukuInd++,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857\n    },\n    __self: this\n  }, s)))), React.createElement(\"div\", {\n    className: \"col-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 869\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"col jumbotron\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 872\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-auto jumboton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    class: \"list-group list-group-horizontal list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    class: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    class: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880\n    },\n    __self: this\n  }, \"Kunnan asukasluku: \"), kuntienAsLuvut[counter]), React.createElement(\"li\", {\n    class: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881\n    },\n    __self: this\n  }, \"V\\xE4kiluvun muutos edellisest\\xE4 vuodesta: \"), \" \", vlMuutokset[counter] + \"%\"), React.createElement(\"li\", {\n    class: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 882\n    },\n    __self: this\n  }, \" \", React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 882\n    },\n    __self: this\n  }, \"Ty\\xF6llisyysaste: \"), \" \", tyoAsteet[counter] + \"%\"), React.createElement(\"li\", {\n    class: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883\n    },\n    __self: this\n  }, \" \", React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883\n    },\n    __self: this\n  }, \"Ty\\xF6paikkojen lukum\\xE4\\xE4r\\xE4: \"), \" \", tpLukumaarat[counter]), React.createElement(\"li\", {\n    class: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 884\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 884\n    },\n    __self: this\n  }, \"Tulonsaajia: \"), \" \", tulonsaajat[counter])), React.createElement(\"ul\", {\n    class: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    class: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889\n    },\n    __self: this\n  }, \"Veronalaiset tulot keskim\\xE4\\xE4rin: \"), \" \", veronalaisetTulotKeskimaarin[counter], React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889\n    },\n    __self: this\n  }, \" \\u20AC/vuosi \"), \" \"), React.createElement(\"li\", {\n    class: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 890\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 890\n    },\n    __self: this\n  }, \"Ansiotulot keskim\\xE4\\xE4rin: \"), \" \", ansioTulotKeskimaarin[counter], React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 890\n    },\n    __self: this\n  }, \" \\u20AC/vuosi \")), React.createElement(\"li\", {\n    class: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891\n    },\n    __self: this\n  }, \"Verot yhteens\\xE4 keskim\\xE4\\xE4rin: \"), \" \", verotYhteensaKeskimaarin[counter], React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891\n    },\n    __self: this\n  }, \" \\u20AC/vuosi \")), React.createElement(\"li\", {\n    class: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892\n    },\n    __self: this\n  }, \"Valtionvero keskim\\xE4\\xE4rin: \"), \" \", valtionVeroKeskimaarin[counter], React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892\n    },\n    __self: this\n  }, \" \\u20AC/vuosi \")), React.createElement(\"li\", {\n    class: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893\n    },\n    __self: this\n  }, \"Kunnallisvero keskim\\xE4\\xE4rin: \"), \" \", kunnallisVeroKeskimaarin[counter], React.createElement(\"small\", {\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893\n    },\n    __self: this\n  }, \" \\u20AC/vuosi \"))))), React.createElement(\"div\", {\n    className: \"col jumbotron tiedotheader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 900\n    },\n    __self: this\n  }, nimetJarjestyksessa[counter]), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: vaakunat[counter].image,\n    alt: \"new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    class: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"col jumbotron\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"btn-group btn-group-sm pikkunapit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 916\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('tietoja'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 917\n    },\n    __self: this\n  }, \"Tietoja\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('verot'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918\n    },\n    __self: this\n  }, \"Verot\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('paastot'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919\n    },\n    __self: this\n  }, \"P\\xE4\\xE4st\\xF6t\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"aria-pressed\": \"true\",\n    onClick: toPage('suhdeluku'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920\n    },\n    __self: this\n  }, \"Hy\\xF6tysuhteet\"), React.createElement(\"button\", {\n    class: \"btn btn-secondary dropdown-toggle\",\n    type: \"button\",\n    id: \"dropdownMenuButton\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 923\n    },\n    __self: this\n  }, \"Vuosi\"), React.createElement(\"div\", {\n    class: \"dropdown-menu\",\n    \"aria-labelledby\": \"dropdownMenuButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"dropdown-item\",\n    onClick: vaihdaVuosi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927\n    },\n    __self: this\n  }, \"2016\"), React.createElement(\"a\", {\n    className: \"dropdown-item\",\n    nClick: vaihdaVuosi2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928\n    },\n    __self: this\n  }, \"2017\"))), React.createElement(\"div\", {\n    class: \"oikeala\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 935\n    },\n    __self: this\n  }, content())))))));\n};\n\nReactDOM.render(React.createElement(App, null), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tuomo/PROJEKTITYÖ/ryhmatyo/tklaskuri/src/index.js"],"names":["React","useState","ReactDOM","data","datavaakunat","dataverot","datatoimialatKunnittain","ToimialatValilehti","AloitusValilehti","dataPaastot","dataToimialojenVerot","FadeIn","lukupilkuilla","x","undefined","toString","replace","kuntienNimet","dataset","dimension","category","label","pktiedot","value","kuntienIndeksit","index","veroTietojenVuodet","Object","keys","Vuosi","verokategoriat","Tiedot","verotiedot","toimialojenMaarat","toimialatJaIndeksit","Toimiala2008","luoPKtaulukko","sarakeNro","taulukko","i","j","length","luoVeroTaulukko","solujenLkmPerVuosi","verodata2017indeksi","parsiKunnanToimialat","kunnanIndeksi","toimialat","toimialojenLkm","kunnanToimialojenLkmt","alkuindeksi","push","jarjestaIndekseittain","datasetti","labelit","indeksit","labelitJaIndeksit","avain","arvo","jarjestetty","sort","forEach","key","parsiPaastotVuodelta","vuodenIndeksi","paastoTaulukko","vuodenPaastot","etsiPaastot","toimialojenPaastot","toimialatJaLkmtSuomessa","toimialaJaLkm","toimialanLkmSuomessa","toimiala","alkutunnus","substr","indexOf","trim","tAla","s","lkm","toimialanPaastot","toimialanPaastotKM","kokonaisPaastotKunnassa","isNaN","etsiVerot","toimialaJaLkmKunnalla","kokoSuomenToimialatJaLkmt","vuosi","veroToimialat","Toimiala","toimialojenVeroarvot","vuoden2017Indeksi","solujenLkmPerToimiala","aloitusindeksi2017","toimialojenVerot2017","valitunToimialanIndeksi","toimialanVerotYhteensa","toimialanVerotKM","toimialanLkm","toimialanVerotPerKunta","laskeToimialanTiedot","toimialatYhteensaKunnassa","toimialatJaLkmPerKunta","TAtunnuksetJaPaastoarvot","toimialanVerot","toimialaTiedot","suhdelukuKokoSuomi","suhdelukuKunta","toimialanLkmKunnassa","toimialanOsuusPerKunta","suhde","verot","paastot","luoToimialatJaLkmt","toimialojenNimet","toimialojenLkmt","toimialatJaLkmt","parseInt","a","b","App","page","setPage","toPage","page2","event","preventDefault","vanha","console","log","content","Paikkakunnat","setVuosi","setToVuosi","vaihdaVuosi","vaihdaVuosi2","counter","setCounter","setToValue","kuntienAsLuvut","vlMuutokset","tyoAsteet","tpLukumaarat","vaakunat","selection1","nimiTaulukko","kuntienIit","toimialojenIndeksit","toimiAJaI","toimiAlatJarj","toimialatYlaotsikot","paastotToimialat","paastojenToimialatJarj","paastotToimialoittain2008","kokoSuomenToimialojenLkmt","kunnantoimialat","kaikkiTAtiedot","nimetJaIndeksit","nimetJarjestyksessa","tulonsaajat","veronalaisetTulotKeskimaarin","ansioTulotKeskimaarin","verotYhteensaKeskimaarin","valtionVeroKeskimaarin","kunnallisVeroKeskimaarin","select","haettava","etsiPaikkakunta","hakusana","target","document","getElementById","txt","text","include","toLowerCase","startsWith","options","style","display","listaI","tulosta","listaValittu","asukaslukuInd","monesko","monesko2","lista","tulostus","Tietoja","lkmJarj","paastotTulostus","toFixed","Suhdeluku","suhdeluvutJarj","Verot","verotJarj","Paastot","paastotJarj","map","image","render","createElement"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom'\nimport data from \"./kuntienavainluvut1\";\nimport './App.css';\nimport datavaakunat from \"./vaakunaKuvat\"\nimport dataverot from \"./verotietoja\"\nimport datatoimialatKunnittain from \"./toimialatKunnittain2\"\nimport ToimialatValilehti from './toimialat'\nimport AloitusValilehti from './aloitus'\nimport dataPaastot from \"./paastotToimialoittain\"\nimport dataToimialojenVerot from \"./toimialojenVerot2\"\nimport FadeIn from 'react-fade-in';\n\n\n\n//console.log(dataPaastot)\n//console.log(dataToimialojenVerot)\n\n\nconst lukupilkuilla = (x) => {\n  if (x === undefined) return \"Ei tiedossa\";\n  else return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n}\n\n\n// objektilista kuntien nimistä\nconst kuntienNimet = data.dataset.dimension[\"Alue 2019\"].category.label\n// objektilista asukasluvuista\nconst pktiedot = data.dataset.value\n// objektilista kuntien indekseistä\nconst kuntienIndeksit = data.dataset.dimension[\"Alue 2019\"].category.index\n// vuodet 2005-2017 taulukossa indeksistä 0 alkaen\nconst veroTietojenVuodet = Object.keys(dataverot.dataset.dimension.Vuosi.category.label)\n// objektilista verotietoihin koskevista kategorioista\nconst verokategoriat = dataverot.dataset.dimension.Tiedot.category.label\n// verotiedot taulukossa\nconst verotiedot = dataverot.dataset.value\n// lista eri toimialoista\n//const toimialalista = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category.label\n// toimialojen määrät taulukossa\nconst toimialojenMaarat = datatoimialatKunnittain.dataset.value\n// toimialat ja niitä vastaavat indeksit\nconst toimialatJaIndeksit = datatoimialatKunnittain.dataset.dimension.Toimiala2008.category\n\n\n\n\n/** Parsii paikkakuntadataa omiin taulukoihin sarakenumeron perusteella.\n* @param {number} sarakeNro Paikkakuntadatan sarakenumero; kuntien as. luvut: 0, väkiluvunmuutokset: 1, työasteet: 2, työpaikkojen lkm: 3.\n* @returns Taulukko haluttua paikkakuntadataa\n*/\nfunction luoPKtaulukko(sarakeNro) {\n  var taulukko = [];\n  for (let i = sarakeNro, j = 0; i < pktiedot.length; i += 4, j++) {\n    taulukko[j] = pktiedot[i];\n  }\n  return taulukko;\n}\n\n/** Parsii verotiedot omaan taulukkoon sarakenumeron perusteella\n* @param {number} sarakeNro Verodatan sarakenumero; tulonsaajat: 0, veronalaiset tulot keskimäär: 1, ansiotulot km: 2, verot yhteensä km: 3,\n*                                                   valtion vero km: 4, kunnallisvero km: 5.\n* @returns Taulukko haluttua verodataa\n*/\nfunction luoVeroTaulukko(sarakeNro) {\n  var taulukko = [];\n  const solujenLkmPerVuosi = Object.keys(kuntienNimet).length * Object.keys(verokategoriat).length\n  var verodata2017indeksi = (veroTietojenVuodet.length - 1) * solujenLkmPerVuosi\n\n  for (let i = verodata2017indeksi + sarakeNro, j = 0; i < solujenLkmPerVuosi * veroTietojenVuodet.length; i += 6, j++) {\n    taulukko[j] = verotiedot[i];\n  }\n  return taulukko;\n}\n\n/** Parsii sovelluksessa valitun kunnan toimialatiedot yhteen taulukkoon.\n* Toimialojen määrät -datasetistä lasketaan oikea aloitusindeksi kunnan indeksin avulla.\n* @param {number} kunnanIndeksi Käyttäjän valitseman kunnan indeksi (koko maan toimialat indeksissä 0)\n* @param {list} toimialat Lista kaikista toimialoista\n* @returns Valitun kunnan toimialojen lukumäärät taulukossa\n*/\nfunction parsiKunnanToimialat(kunnanIndeksi, toimialat) {\n\n  var toimialojenLkm = Object.keys(toimialat).length\n  var kunnanToimialojenLkmt = [];\n  var alkuindeksi = kunnanIndeksi * toimialojenLkm;\n  //var alkuindeksi2;\n  //console.log(\"kunnani: \" + kunnanIndeksi)\n  //console.log(\"alkui: \" + alkuindeksi2)\n  //if (kunnanIndeksi == 1) alkuindeksi2 = 7 * toimialojenLkm\n  //else if (kunnanIndeksi > 1  && kunnanIndeksi < 8 ) alkuindeksi2 = alkuindeksi - toimialojenLkm\n  //else alkuindeksi2 = alkuindeksi\n  //console.log(\"alkui: \" + alkuindeksi2)\n\n\n\n  for (let i = alkuindeksi; i < (alkuindeksi + toimialojenLkm); i++) {\n    kunnanToimialojenLkmt.push(toimialojenMaarat[i]);\n  }\n  return kunnanToimialojenLkmt;\n\n}\n\n/** Etsii toimialan indeksin, jota löytyy eniten valitusta kunnasta.\n* Ohittaa parametrina annetun alkion ja sitä suuremmat, jotta funktiota voi käyttää myös\n* toiseksi suurimman etsintään (jne).\n* @param {list} tAlaNimet Toimialojen nimet järjestetyssä listassa\n* @param {array} tAlaLkm Valitun kunnan toimialojen lukumäärät taulukossa\n* @param {number} ohita Alkion indeksi, joka ja jota suuremmat ohitetaan\n* @returns Suurimman alkion indeksi, pl. ohitetut alkiot\n*/\n/*function etsiSuurimmanI(tAlaNimet, tAlaLkm, ohita) {\n  //console.log(tAlaNimet)\n  let suurin = -1\n  let suurimmanI = ohita\n  for (let i = 0; i < tAlaLkm.length; i++) {\n    if (tAlaLkm[i] > tAlaLkm[ohita] || i === ohita) continue;\n    if (tAlaLkm[i] > suurin) {\n      let s = tAlaNimet[i]\n      let alkutunnus = s.substr(0, s.indexOf(' ')).trim()\n      //console.log(alkutunnus)\n      //console.log(isNaN(parseInt(alkutunnus)))\n      if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue\n      //console.log(alkutunnus)\n      suurin = tAlaLkm[i]\n      suurimmanI = i\n      //console.log(\"suurin: \" + suurin)\n    }\n  }\n  return suurimmanI\n}*/\n\n/** Muotoilee ja palauttaa merkkijonona annettua indeksiä vastaavan toimialan \n* nimen ja lukumäärän.\n* @param {list} toimialojenNimet Toimialat ja niiden indeksit listassa avain-arvo pareina.\n* @param {array} toimialojenLkm Valitun kunnan toimialojen lukumäärät taulukossa.\n* @param {number} i Toimialan indeksi\n* @returns Merkkijono muotoa \"[toimialan nimi] : [toimialan lkm valitussa kunnassa]\"\n*/\n/*function tulostaToimialat(toimialojenNimet, toimialojenLkm, i) {\n  //console.log(eniten)\n  //let suurin = 0;\n  //let toiseksiSuurin = etsiSuurin(toimialojenLkm, suurin)\n  //let kolmas = etsiSuurin(toimialojenLkm, toiseksiSuurin)\n  //let suurimmanIndeksi = toimialojenLkm.indexOf(eniten)\n  //let indeksi2 = toimialojenLkm.indexOf(toiseksiSuurin)\n  //console.log(suurimmanIndeksi)\n  //console.log(suurin)\n  //console.log(toiseksiSuurin)\n  //console.log(kolmas)\n  let s = toimialojenNimet[i] + \" : \" + toimialojenLkm[i]\n  return s.substr(s.indexOf(' ') + 1).trim()\n  //return toimialojenNimet[i] + \" : \" + toimialojenLkm[i] + \" \"\n}*/\n\n/** Järjestää annetun datasetin indeksien perusteella suuruusjärjestykseen.\n* @param {list} datasetti Lista-pari labeleista ja indekseistä\n* @returns Avain-arvo lista indekseistä ja labeleista\n*/\nfunction jarjestaIndekseittain(datasetti) {\n  var labelit = []\n  for (let x in datasetti.label) {\n    labelit.push(datasetti.label[x])\n  }\n\n  var indeksit = []\n  for (let x in datasetti.index) {\n    indeksit.push(datasetti.index[x])\n  }\n\n  var labelitJaIndeksit = {}\n  for (let i = 0; i < Object.keys(datasetti.label).length; i++) {\n    let avain = indeksit[i];\n    let arvo = labelit[i];\n    labelitJaIndeksit[avain] = arvo;\n  }\n\n  //toimialat ja niiden indeksit avain-arvo pareina listassa\n  let jarjestetty = {};\n  // objektilistan järjestys avainarvon eli indeksin mukaan\n  Object.keys(labelitJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = labelitJaIndeksit[key];\n  });\n  return jarjestetty\n\n}\n\n/** Parsii jokaisen toimialan päästöt tietyltä vuodelta.\n* @param {number} vuodenIndeksi Halutun vuoden indeksi, alkaen 0: 2008, 1: 2009, 2:2010 etc.\n* @returns Taulukko toimialojen päästöarvoista (pelkät arvot)\n*/\nfunction parsiPaastotVuodelta(vuodenIndeksi) {\n  var paastoTaulukko = dataPaastot.dataset.value\n  let toimialojenLkm = Object.keys(dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category.label).length\n  var vuodenPaastot = []\n  let alkuindeksi = vuodenIndeksi * toimialojenLkm\n\n  for (let i = alkuindeksi; i < alkuindeksi + toimialojenLkm; i++) {\n    vuodenPaastot.push(paastoTaulukko[i])\n  }\n  return vuodenPaastot\n\n}\n\n/** Etsii indeksiä vastaavan toimialan päästöarvon, ja laskee toimialan keskimääräiset päästöt\n* valitussa kunnassa.\n* @param {list} toimialat Lista toimialoista ja niiden indekseistä avain-arvo pareina\n* @param {list} toimialojenPaastot Lista-pari toimialojen päästöistä ja niiden indekseistä\n* @param {array} toimialojenLkmSuomessa Taulukko toimialojen lukumääristä koko suomessa\n* @param {array} toimialojenLkmKunnalla Taulukko toimialojen lukumääristä käyttäjän valitsemassa kunnassa\n* @param {number} i Indeksi jolla valitaan haluttu toimiala\n* @returns Toimialan keskimääräiset päästöt kunnassa, NaN jos ei saatavilla\n*/\nfunction etsiPaastot(toimialojenPaastot, toimialatJaLkmtSuomessa, toimialaJaLkm) {\n  //console.log(toimialojenLkmKunnalla)\n\n  let toimialanLkmSuomessa;\n  //let toimialanLkmKunnassa = toimialanLkmKunnalla[i]\n\n  //console.log(\"asd: \" +  toimialanLkmKunnassa)\n  let toimiala = toimialaJaLkm.toimiala\n  //console.log(toimiala)\n  let alkutunnus = toimiala.substr(0, toimiala.indexOf(' ')).trim()\n  for (let i = 0; i < toimialatJaLkmtSuomessa.length; i++) {\n    let tAla = toimialatJaLkmtSuomessa[i].toimiala\n    let s = tAla.substr(0, tAla.indexOf(' ')).trim()\n    if (alkutunnus === s) toimialanLkmSuomessa = toimialatJaLkmtSuomessa[i].lkm\n  }\n  let toimialanPaastot = toimialojenPaastot[alkutunnus]\n  //console.log(alkutunnus + \" : \" + toimialanPaastot)\n  let toimialanPaastotKM = toimialanPaastot / toimialanLkmSuomessa\n  //console.log(alkutunnus + \" : \" + toimialanPaastotKM)\n  //console.log(alkutunnus + \" : \" + toimialanLkmSuomessa)\n  let kokonaisPaastotKunnassa = toimialanPaastotKM * toimialaJaLkm.lkm\n  //console.log(alkutunnus + \" : \" + kokonaisPaastotKunnassa)\n  //console.log(kokonaisPaastotKunnassa)\n  //console.log(\"asdf: \" +  kokonaisPaastotKunnassa)\n  if (isNaN(kokonaisPaastotKunnassa)) return -1\n  return kokonaisPaastotKunnassa\n}\n\n/** Etsii indeksiä vastaavan toimialan verotiedot, ja laskee toimialan keskimääräiset verotulot\n* valitussa kunnassa.\n* @param {list} toimialat Lista toimialoista ja niiden indekseistä avain-arvo pareina\n* @param {array} toimialojenLkmKunnalla Taulukko toimialojen lukumääristä käyttäjän valitsemassa kunnassa\n* @param {number} i Indeksi jolla valitaan haluttu toimiala\n* @returns Toimialan keskimääräiset veromaksut kunnassa, NaN jos ei saatavilla\n*/\n\nfunction etsiVerot(toimialaJaLkmKunnalla, kokoSuomenToimialatJaLkmt, vuosi) {\n  let toimialanLkmSuomessa;\n  let toimiala = toimialaJaLkmKunnalla.toimiala\n\n  let alkutunnus = toimiala.substr(0, toimiala.indexOf(' ')).trim()\n  for (let i = 0; i < kokoSuomenToimialatJaLkmt.length; i++) {\n    let tAla = kokoSuomenToimialatJaLkmt[i].toimiala\n    let s = tAla.substr(0, tAla.indexOf(' ')).trim()\n    if (alkutunnus === s) toimialanLkmSuomessa = kokoSuomenToimialatJaLkmt[i].lkm\n  }\n  const veroToimialat = dataToimialojenVerot.dataset.dimension.Toimiala.category\n  let toimialojenLkm = Object.keys(veroToimialat.label).length\n  let toimialojenVeroarvot = dataToimialojenVerot.dataset.value\n  let vuoden2017Indeksi = vuosi\n  let solujenLkmPerToimiala = 2\n  let aloitusindeksi2017 = toimialojenLkm * vuoden2017Indeksi * solujenLkmPerToimiala\n  let toimialojenVerot2017 = []\n  for (let j = aloitusindeksi2017; j < aloitusindeksi2017 + toimialojenLkm; j++) {\n    toimialojenVerot2017.push(toimialojenVeroarvot[j])\n  }\n\n  //console.log(veroToimialat.index[alkutunnus])\n  let valitunToimialanIndeksi = aloitusindeksi2017 + veroToimialat.index[alkutunnus] * solujenLkmPerToimiala\n  //console.log(valitunToimialanIndeksi)\n  let toimialanVerotYhteensa = toimialojenVeroarvot[valitunToimialanIndeksi]\n  let toimialanVerotKM = toimialanVerotYhteensa / toimialanLkmSuomessa\n  //console.log(alkutunnus + \" : \" + toimialanVerotKM)\n  let toimialanLkm = toimialaJaLkmKunnalla.lkm\n  //console.log(alkutunnus + \" : \" + toimialanLkm)\n  let toimialanVerotPerKunta = toimialanLkm * toimialanVerotKM\n  //console.log(toimialanVerotPerKunta)\n  return toimialanVerotPerKunta\n}\n\nfunction laskeToimialanTiedot(toimialatYhteensaKunnassa, toimialatJaLkmPerKunta, TAtunnuksetJaPaastoarvot, kokoSuomenToimialatJaLkmt, vuosi) {\n  //var indeksi; //etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, -1)\n  var toimialanPaastot //= etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi)\n  var toimialanVerot //= etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi)\n  // var ohita = -1;\n  var toimialaTiedot = []\n  var suhdelukuKokoSuomi = -1 //jos suhdelukua ei voi laskea\n\n  //let toimialatYhteensaKunnassa = kunnantoimialat[0]\n\n  //console.log(kunnantoimialat)\n\n  for (let i = 0; i < toimialatJaLkmPerKunta.length; i++) {\n    let suhdelukuKunta = -1\n\n    //indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, ohita)\n    //console.log(toimiAlatJarj[indeksi])\n    let toimialanLkmKunnassa = toimialatJaLkmPerKunta[i].lkm\n    let toimialanOsuusPerKunta = toimialanLkmKunnassa / toimialatYhteensaKunnassa\n\n\n    //console.log(\"indeksi\" + indeksi)\n\n    toimialanPaastot = etsiPaastot(TAtunnuksetJaPaastoarvot, kokoSuomenToimialatJaLkmt, toimialatJaLkmPerKunta[i])\n    //console.log(toimialatJaLkmPerKunta)\n    toimialanVerot = etsiVerot(toimialatJaLkmPerKunta[i], kokoSuomenToimialatJaLkmt, vuosi)\n    //console.log(verot)\n\n    if ((!isNaN(toimialanPaastot) && !isNaN(toimialanVerot)) && (toimialanPaastot > 0)) {\n      suhdelukuKokoSuomi = toimialanVerot / toimialanPaastot\n      suhdelukuKunta = suhdelukuKokoSuomi * toimialanOsuusPerKunta\n    }\n\n    //console.log(suhdeluku)\n    /*if (suhdeluku < 0){\n      ohita = indeksi\n      continue;\n    }*/\n\n    toimialaTiedot.push({\n      toimiala: toimialatJaLkmPerKunta[i].toimiala,\n      suhde: suhdelukuKunta,\n      lkm: toimialanLkmKunnassa,\n      verot: toimialanVerot,\n      paastot: toimialanPaastot\n    })\n\n\n    //ohita = indeksi\n  }\n  //console.log(suhdeluvut)\n\n  return toimialaTiedot\n}\n\n\nfunction luoToimialatJaLkmt(toimialojenNimet, toimialojenLkmt) {\n  //console.log(toimialojenNimet)\n  //console.log(toimialojenLkmt)\n  let toimialatJaLkmt = []\n\n  for (let i = 0; i < toimialojenLkmt.length; i++) {\n    let s = toimialojenNimet[i]\n    let alkutunnus = s.substr(0, s.indexOf(' ')).trim()\n    //console.log(alkutunnus)\n    //console.log(isNaN(parseInt(alkutunnus)))\n    if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue\n    toimialatJaLkmt.push({ toimiala: toimialojenNimet[i], lkm: toimialojenLkmt[i] })\n  }\n\n  let jarjestetty = toimialatJaLkmt.sort(function (a, b) {\n    return b.lkm - a.lkm;\n  });\n  //console.log(toimialatJaLkmt)\n  return jarjestetty\n\n}\n\n\n\n\n\n\nconst App = () => {\n\n  const [page, setPage] = useState('aloitus')\n\n  const toPage = (page2) => (event) => {\n    event.preventDefault()\n    var vanha = page;\n    console.log(\"joo\", vanha)\n    if (page === page2 ) { setPage({vanha})}\n    else setPage(page2)\n  }\n\n\n  const content = () => {\n    if (page === 'paikkakunnat') {\n      return <Paikkakunnat />\n    } else if (page === 'toimialat') {\n      return <ToimialatValilehti />\n    }\n    else if (page === 'aloitus') {\n      return <AloitusValilehti />\n    }\n  }\n\n\n\n\n\n\n  return (\n\n\n\n<FadeIn>\n\n    <div>\n\n\n    \n    <button type=\"button\" id=\"tietoja\" class=\"btn btn-outline-primary infonappi float-right\" onClick={toPage('aloitus')}>Tietoja ohjelmasta</button>\n    \n\n      <div className=\"row justify-content-md-center\">\n\n        <div className=\"btn-group btn-group-lg joo\" id=\"joo\">\n          <button type=\"button\" className=\"btn btn-primary\" aria-pressed=\"true\" onClick={toPage('paikkakunnat')}>Paikkakunnat</button>\n          <button type=\"button\" className=\"btn btn-primary\" aria-pressed=\"true\" onClick={toPage('toimialat')}>Toimialat</button>\n\n        </div>\n\n\n      </div>\n      {content()}\n    </div>\n\n    </FadeIn>\n  )\n\n\n}\n\n\n//HUOM PAIKKAKUNNAT\n//KOMPONENTTI JOKA piirtää PAIKKAKUNNAT sivulle kaiken\nconst Paikkakunnat = () => {\n\n  const [page, setPage] = useState('tietoja')\n\n  const toPage = (page) => (event) => {\n    event.preventDefault()\n    setPage(page)\n  }\n\n\n\n  const [vuosi, setVuosi] = useState(3)\n  const setToVuosi = (value) => setVuosi(value)\n\n  const vaihdaVuosi = () => {\n    setToVuosi(2)\n  }\n\n  const vaihdaVuosi2 = () => {\n    setToVuosi(1)\n  }\n\n\n\n  const content = () => {\n    if (page === 'tietoja') {\n      return <Tietoja />\n    } else if (page === 'suhdeluku') {\n      return <Suhdeluku />\n    }\n    else if (page === 'verot') {\n      return <Verot />\n    }\n    else if (page === 'paastot') {\n      return <Paastot />\n    }\n  }\n\n\n\n\n  // State joka pitää muistissa indeksiä \n  const [counter, setCounter] = useState(0)\n  const setToValue = (value) => setCounter(value)\n\n\n  //paikkakuntatiedot parsittuna omiin taulukkoihin\n  var kuntienAsLuvut = luoPKtaulukko(0);\n  var vlMuutokset = luoPKtaulukko(1);\n  var tyoAsteet = luoPKtaulukko(2);\n  var tpLukumaarat = luoPKtaulukko(3);\n\n\n  const vaakunat = datavaakunat.selection1\n\n\n\n  var nimiTaulukko = [];\n  var kuntienIit = [];\n  //var vaakunaTaulukko = [];\n\n\n\n\n  // kuntien nimet taulukkoon\n  for (var x in kuntienNimet) {\n    nimiTaulukko.push(kuntienNimet[x]);\n  }\n\n  var toimialojenNimet = []\n  for (let x in toimialatJaIndeksit.label) {\n    toimialojenNimet.push(toimialatJaIndeksit.label[x])\n  }\n\n  var toimialojenIndeksit = []\n  for (let x in toimialatJaIndeksit.index) {\n    toimialojenIndeksit.push(toimialatJaIndeksit.index[x])\n  }\n\n  var toimiAJaI = {}\n  for (let i = 0; i < toimialojenNimet.length; i++) {\n    let avain = toimialojenIndeksit[i];\n    let arvo = toimialojenNimet[i];\n    toimiAJaI[avain] = arvo;\n  }\n\n  //toimialat ja niiden indeksit avain-arvo pareina listassa\n  const toimiAlatJarj = {};\n  // objektilistan järjestys avainarvon eli indeksin mukaan\n  Object.keys(toimiAJaI).sort().forEach(function (key) {\n    toimiAlatJarj[key] = toimiAJaI[key];\n  });\n\n  var toimialatYlaotsikot = []\n  for (let i = 0; i < Object.keys(toimiAlatJarj).length; i++) {\n    let tAla = toimiAlatJarj[i]\n    let alkutunnus = tAla.substr(0, tAla.indexOf(' ')).trim()\n    if (isNaN(parseInt(alkutunnus)) || alkutunnus.length > 2) continue\n    toimialatYlaotsikot.push(toimiAlatJarj[i])\n  }\n  //console.log(toimialatYlaotsikot)\n\n  var paastotToimialat = dataPaastot.dataset.dimension[\"Toimialat (TOL2008) ja kotitaloudet\"].category\n  //var toimialatJaTunnukset = paastotToimialat.label\n\n  var paastojenToimialatJarj = jarjestaIndekseittain(paastotToimialat)\n\n  var paastotToimialoittain2008 = parsiPaastotVuodelta(0)\n  var TAtunnuksetJaPaastoarvot = {}\n  for (let i = 0; i < Object.keys(paastojenToimialatJarj).length; i++) {\n    let s = paastojenToimialatJarj[i]\n    let avain = s.substr(0, s.indexOf(' ')).trim()\n    let arvo = paastotToimialoittain2008[i]\n    TAtunnuksetJaPaastoarvot[avain] = arvo\n  }\n  //console.log(TAtunnuksetJaPaastoarvot)\n\n\n  var kokoSuomenToimialojenLkmt = parsiKunnanToimialat(0, toimiAlatJarj)\n  var kokoSuomenToimialatJaLkmt = luoToimialatJaLkmt(toimiAlatJarj, kokoSuomenToimialojenLkmt)\n  //console.log(kokoSuomenToimialatJaLkmt)\n\n  //console.log(toimiAlatJarj)\n  // käyttäjän valitseman kunnan toimialatiedot taulukossa \n  var kunnantoimialat = parsiKunnanToimialat(counter, toimiAlatJarj);\n\n  var toimialatJaLkmPerKunta = luoToimialatJaLkmt(toimiAlatJarj, kunnantoimialat)\n  //console.log(kunnantoimialat)\n  var kaikkiTAtiedot = laskeToimialanTiedot(kunnantoimialat[0], toimialatJaLkmPerKunta, TAtunnuksetJaPaastoarvot, kokoSuomenToimialatJaLkmt, vuosi);\n  //console.log(kunnanSuhdeluvut)\n\n\n\n\n  // kuntien indeksit taulukkoon\n  for (let x in kuntienIndeksit) {\n    kuntienIit.push(kuntienIndeksit[x]);\n  }\n\n\n\n\n\n\n\n  var avain;\n  var arvo;\n  var nimetJaIndeksit = {};\n\n\n  // valintalista kunnista, indeksöi samalla 0->n\n\n\n\n  // kuntien nimet ja indeksit mapitettuna yhteen objektilistaan\n  for (var i = 0; i < nimiTaulukko.length; i++) {\n    avain = kuntienIit[i];\n    arvo = nimiTaulukko[i];\n    nimetJaIndeksit[avain] = arvo;\n  }\n\n  const jarjestetty = {};\n  // objektilistan järjestys avainarvon eli indeksin mukaan\n  Object.keys(nimetJaIndeksit).sort().forEach(function (key) {\n    jarjestetty[key] = nimetJaIndeksit[key];\n  });\n\n  // Kuntien nimien erotus järjestetystä objektilistasta taulukkoon\n  var nimetJarjestyksessa = [];\n  for (let x in jarjestetty) {\n    nimetJarjestyksessa.push(jarjestetty[x]);\n  }\n\n\n  // verotiedot parsittuna omiin taulukoihin\n  var tulonsaajat = luoVeroTaulukko(0);\n  var veronalaisetTulotKeskimaarin = luoVeroTaulukko(1);\n  var ansioTulotKeskimaarin = luoVeroTaulukko(2);\n  var verotYhteensaKeskimaarin = luoVeroTaulukko(3);\n  var valtionVeroKeskimaarin = luoVeroTaulukko(4);\n  var kunnallisVeroKeskimaarin = luoVeroTaulukko(5);\n\n\n\n\n  // Hakutoiminto, ottaa inputista valuen ja vertaa sitä selectin valueihin\n  // piilottaa valuet, jotka eivät vastaa hakusanaa\n  var select\n  var haettava\n\n\n  const etsiPaikkakunta = (hakusana) => {\n\n    haettava = hakusana.target.value\n\n    select = document.getElementById(\"listaKunnista\");\n    for (var i = 0; i < select.length; i++) {\n      var txt = select[i].text\n      var include = txt.toLowerCase().startsWith(haettava.toLowerCase());\n      select.options[i].style.display = include ? '' : 'none';\n    }\n\n  }\n\n  //var asukasLukuI;\n  var listaI;\n\n  // ottaa selectistä valuen ja asettaa sen countteriin\n  const tulosta = (listaValittu) => {\n\n    listaI = listaValittu.target.value\n    setToValue(listaI)\n\n  }\n\n  // asukasluvut löytyvät taulukosta neljän indeksin välein ([0,4,8,...])\n  var asukaslukuInd = 0;\n\n  //alustetaan muuttujat\n  var monesko = \"\"\n  var monesko2 = 1\n  var lista = []\n  var tulostus\n\n  //console.log(toimiAlatJarj)\n\n\n\n  const Tietoja = () => {\n\n    monesko = \"\"\n    monesko2 = 1\n\n    let lkmJarj = kaikkiTAtiedot.sort(function (a, b) {\n      return b.lkm - a.lkm\n    })\n    let paastotTulostus\n\n    for (let i = 0; i < lkmJarj.length; i++) {\n\n      if (lkmJarj[i].paastot >= 0) {\n        paastotTulostus = lkmJarj[i].paastot.toFixed(0) + \" tonnia kasvihuonekaasuja/vuosi\"\n      }\n      else {\n        paastotTulostus = \"Päästötietoja ei saatavilla\"\n      }\n\n      let s = lkmJarj[i].toimiala + \" : \" + lkmJarj[i].lkm\n      tulostus = s.substr(s.indexOf(' ') + 1).trim()\n\n\n      lista.push(<li class=\"list-group-item\">\n        <small class=\"text-muted\">Toimialoja {monesko} eniten: </small> {tulostus}<small class=\"text-muted\"> kpl</small>\n        <br></br> <small class=\"text-muted\">Toimialan päästöt kunnalla keskimäärin: </small>{paastotTulostus}\n        <br></br> <small class=\"text-muted\">Toimialan verot kunnalla keskimäärin: </small>{lukupilkuilla(lkmJarj[i].verot.toFixed(0)) + \"€/vuosi\"}\n      </li>)\n\n      monesko2++\n      monesko = monesko2 + \".\"\n\n\n    }\n\n\n\n\n\n    return (\n      <div>\n        {lista}\n      </div>\n    )\n  }\n\n\n  const Suhdeluku = () => {\n\n    monesko = \"\"\n    monesko2 = 1\n\n    //lista = []\n    let suhdeluvutJarj = kaikkiTAtiedot.sort(function (a, b) {\n      return b.suhde - a.suhde\n    })\n\n    for (let i = 0; i < suhdeluvutJarj.length; i++) {\n\n      if (suhdeluvutJarj[i].suhde < 0) break;\n      /*indeksi = etsiSuurimmanI(toimiAlatJarj, kunnantoimialat, ohita)\n      paastot = etsiPaastot(toimiAlatJarj, TAtunnuksetJaPaastoarvot, kokoSuomenToimialojenLkmt, kunnantoimialat, indeksi)\n      verot = etsiVerot(toimiAlatJarj, kunnantoimialat, indeksi)*/\n\n      let s = suhdeluvutJarj[i].toimiala\n      tulostus = s.substr(s.indexOf(' ') + 1).trim()\n\n      \n\n      lista.push(<li class=\"list-group-item\"><small class=\"text-muted\">{monesko} Paras hyötysuhde: </small> {tulostus}\n        <small class=\"text-muted\"> Suhdeluku: </small>{suhdeluvutJarj[i].suhde} </li>)\n\n\n      monesko2++\n      monesko = monesko2 + \".\"\n\n    }\n\n    //console.log(\"jaa\", kunnanSuhdeluvut)\n\n    //console.log(suhdeluvutJarj)\n\n    //console.log(lista)\n\n\n    return (\n      <div>\n        {lista}\n      </div>\n    )\n  }\n\n  const Verot = () => {\n\n    monesko = \"\"\n    monesko2 = 1\n\n    //lista = []\n    let verotJarj = kaikkiTAtiedot.sort(function (a, b) {\n      return b.verot - a.verot\n    })\n    let paastotTulostus\n\n    for (let i = 0; i < verotJarj.length; i++) {\n\n      if (verotJarj[i].paastot >= 0) {\n        paastotTulostus = verotJarj[i].paastot.toFixed(0) + \" tonnia kasvihuonekaasuja/vuosi\"\n      }\n      else {\n        paastotTulostus = \"Päästötietoja ei saatavilla\"\n      }\n\n      let s = verotJarj[i].toimiala + \" : \" + lukupilkuilla(verotJarj[i].verot.toFixed(0)) + \"€/vuosi\"\n      tulostus = s.substr(s.indexOf(' ') + 1).trim()\n\n\n      lista.push(<li class=\"list-group-item\">\n        <small class=\"text-muted\">Veroja {monesko} eniten: </small> {tulostus}\n        <br></br> <small class=\"text-muted\">Toimialan lkm kunnalla: </small>{verotJarj[i].lkm + \" kpl\"}\n        <br></br> <small class=\"text-muted\">Toimialan päästöt kunnalla keskimäärin: </small>{paastotTulostus}\n      </li>)\n\n      monesko2++\n      monesko = monesko2 + \".\"\n    }\n\n\n    return (\n      <div>\n        {lista}\n      </div>\n    )\n  }\n\n  const Paastot = () => {\n    monesko = \"\"\n    monesko2 = 1\n\n    //lista = []\n    let paastotJarj = kaikkiTAtiedot.sort(function (a, b) {\n      return b.paastot - a.paastot\n    })\n    let paastotTulostus\n\n    console.log(paastotJarj)\n\n    for (let i = 0; i < paastotJarj.length; i++) {\n\n      if (!isNaN(paastotJarj[i].paastot)) {\n        paastotTulostus = paastotJarj[i].paastot.toFixed(0) + \" tonnia kasvihuonekaasuja/vuosi\"\n      }\n      else {\n        paastotTulostus = \"Päästötietoja ei saatavilla\"\n      }\n\n      let s = paastotJarj[i].toimiala + \" : \" + lukupilkuilla(paastotJarj[i].verot.toFixed(0)) + \"€/vuosi\"\n      tulostus = s.substr(s.indexOf(' ') + 1).trim()\n\n\n      lista.push(<li class=\"list-group-item\">\n        <small class=\"text-muted\">Veroja {monesko} eniten: </small> {tulostus}\n        <br></br> <small class=\"text-muted\">Toimialan lkm kunnalla: </small>{paastotJarj[i].lkm + \" kpl\"}\n        <br></br> <small class=\"text-muted\">Toimialan päästöt kunnalla keskimäärin: </small>{paastotTulostus}\n      </li>)\n\n      monesko2++\n      monesko = monesko2 + \".\"\n    }\n\n\n    return (\n      <div>\n        {lista}\n      </div>\n    )\n  }\n\n\n  return (\n\n    <FadeIn>\n    \n    <div className=\"container\">\n\n    \n\n\n\n      <div className=\"row\">\n        <div className=\"col-sm\">\n\n          <div>\n\n            <input type=\"text\" className=\"form-control\" id=\"search\" name=\"search\" placeholder=\"Hae...\" onKeyUp={etsiPaikkakunta} />\n          </div>\n\n          <select id=\"listaKunnista\" className=\"form-control\" size=\"30\" onChange={tulosta} >\n\n            {nimetJarjestyksessa.map(s => (<option value={asukaslukuInd++}>{s}</option>))}\n          </select>\n\n        </div>\n\n        <div className=\"col-10\">\n\n\n\n\n\n\n          <div className=\"row\">\n            <div class=\"col jumbotron\">\n\n            <div className=\"row\">\n\n              \n              <div className=\"col-md-auto jumboton\">\n              <ul class=\"list-group list-group-horizontal list-group-flush\">\n\n                <ul class=\"list-group\">\n\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Kunnan asukasluku: </small>{kuntienAsLuvut[counter]}</li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Väkiluvun muutos edellisestä vuodesta: </small> {vlMuutokset[counter] + \"%\"}</li>\n                  <li class=\"list-group-item\"> <small class=\"text-muted\">Työllisyysaste: </small> {tyoAsteet[counter] + \"%\"}</li>\n                  <li class=\"list-group-item\"> <small class=\"text-muted\">Työpaikkojen lukumäärä: </small> {tpLukumaarat[counter]}</li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Tulonsaajia: </small> {tulonsaajat[counter]}</li>\n                </ul>\n\n                <ul class=\"list-group\">\n\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Veronalaiset tulot keskimäärin: </small> {veronalaisetTulotKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small> </li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Ansiotulot keskimäärin: </small> {ansioTulotKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small></li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Verot yhteensä keskimäärin: </small> {verotYhteensaKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small></li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Valtionvero keskimäärin: </small> {valtionVeroKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small></li>\n                  <li class=\"list-group-item\"><small class=\"text-muted\">Kunnallisvero keskimäärin: </small> {kunnallisVeroKeskimaarin[counter]}<small class=\"text-muted\"> €/vuosi </small></li>\n                </ul>\n\n              </ul>\n              </div>\n\n              <div className=\"col jumbotron tiedotheader\">\n                <h4>{nimetJarjestyksessa[counter]}</h4>\n                <br></br>\n                <img src={vaakunat[counter].image} alt=\"new\" />\n                \n              </div>\n\n              </div>\n\n            </div>\n          </div>\n\n\n          <div class=\"row\">\n            <div class=\"col jumbotron\">\n\n\n              <div className=\"btn-group btn-group-sm pikkunapit\">\n                <button type=\"button\" className=\"btn btn-secondary\" aria-pressed=\"true\" onClick={toPage('tietoja')}>Tietoja</button>\n                <button type=\"button\" className=\"btn btn-secondary\" aria-pressed=\"true\" onClick={toPage('verot')}>Verot</button>\n                <button type=\"button\" className=\"btn btn-secondary\" aria-pressed=\"true\" onClick={toPage('paastot')}>Päästöt</button>\n                <button type=\"button\" className=\"btn btn-secondary\" aria-pressed=\"true\" onClick={toPage('suhdeluku')}>Hyötysuhteet</button>\n\n\n                <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Vuosi\n  </button>\n  <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n  <a className=\"dropdown-item\"onClick={vaihdaVuosi}>2016</a>\n   <a className=\"dropdown-item\"nClick={vaihdaVuosi2}>2017</a>\n  </div>\n\n\n                \n              </div>\n\n              <div class=\"oikeala\">\n\n\n                {content()}\n              </div>\n\n\n\n            </div>\n\n          </div>\n\n        </div>\n\n\n\n\n      </div>\n    </div>\n    </FadeIn>\n  )\n\n\n \n\n}\n\nReactDOM.render(\n  React.createElement(App, null),\n  document.getElementById('root')\n\n \n)\n\n"]},"metadata":{},"sourceType":"module"}